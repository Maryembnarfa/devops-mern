{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { deepMix, isEqual } from '@antv/util';\nimport { groups, max, sum } from '@antv/vendor/d3-array';\nimport { format } from '@antv/vendor/d3-format';\nimport { DisplayObject, Text } from '@antv/g';\nimport { getPolarOptions, getRadialOptions } from '../coordinate';\nimport { combine } from '../utils/array';\nimport { prettyNumber } from '../utils/number';\nimport { capitalizeFirst, defined, subObject } from '../utils/helper';\nimport { LEGEND_INFER_STRATEGIES } from '../component/constant';\nimport { coordOf, isHelix, isParallel, isPolar, isRadar, isRadial, isReflect, isReflectY, isTheta, isTranspose } from './coordinate';\nimport { useLibrary } from './library';\nimport { isValidScale } from './scale';\nimport { ConstantScale, ContinuousScale, DiscreteScale, DistributionScale } from './types/scale';\nexport function inferComponent(scales, partialOptions, library) {\n  const {\n    coordinates = [],\n    title\n  } = partialOptions;\n  const [, createGuideComponent] = useLibrary('component', library);\n  const displayedScales = scales.filter(_ref => {\n    let {\n      guide\n    } = _ref;\n    if (guide === null) return false;\n    return true;\n  });\n  const components = [];\n  // Sliders and scrollbar component.\n  const sliders = inferScrollableComponents(partialOptions, scales, library);\n  components.push(...sliders);\n  // Title components.\n  if (title) {\n    const {\n      props\n    } = createGuideComponent('title');\n    const {\n      defaultPosition,\n      defaultOrientation,\n      defaultOrder,\n      defaultSize,\n      defaultCrossPadding\n    } = props;\n    const titleOptions = typeof title === 'string' ? {\n      title\n    } : title;\n    components.push(Object.assign({\n      type: 'title',\n      position: defaultPosition,\n      orientation: defaultOrientation,\n      order: defaultOrder,\n      crossPadding: defaultCrossPadding[0],\n      defaultSize\n    }, titleOptions));\n  }\n  // Axis and legends.\n  const inferredComponents = inferComponentsType(displayedScales, coordinates);\n  inferredComponents.forEach(_ref2 => {\n    let [type, relativeScales] = _ref2;\n    const {\n      props\n    } = createGuideComponent(type);\n    const {\n      defaultPosition,\n      defaultPlane = 'xy',\n      defaultOrientation,\n      defaultSize,\n      defaultOrder,\n      defaultLength,\n      defaultPadding: DP = [0, 0],\n      defaultCrossPadding: DCP = [0, 0]\n    } = props;\n    // @todo to be confirm if the scale can be merged.\n    // const scale: G2ScaleOptions = Object.assign({}, ...relativeScales);\n    const scale = deepMix({}, ...relativeScales);\n    const {\n      guide: guideOptions,\n      field\n    } = scale;\n    // A scale may have multiple guides.\n    const guides = Array.isArray(guideOptions) ? guideOptions : [guideOptions];\n    for (const partialGuide of guides) {\n      const [position, orientation] = inferComponentPositionAndOrientation(type, defaultPosition, defaultOrientation, partialGuide, relativeScales, displayedScales, coordinates);\n      // Skip if position and orientation are not specified.\n      // @example the last axis of radar chart\n      if (!position && !orientation) continue;\n      const isVertical = position === 'left' || position === 'right';\n      const defaultPadding = isVertical ? DP[1] : DP[0];\n      const defaultCrossPadding = isVertical ? DCP[1] : DCP[0];\n      const {\n        size,\n        order = defaultOrder,\n        length = defaultLength,\n        padding = defaultPadding,\n        crossPadding = defaultCrossPadding\n      } = partialGuide;\n      components.push(Object.assign(Object.assign({\n        title: field\n      }, partialGuide), {\n        defaultSize,\n        length,\n        position,\n        plane: defaultPlane,\n        orientation,\n        padding,\n        order,\n        crossPadding,\n        size,\n        type,\n        scales: relativeScales\n      }));\n    }\n  });\n  return components;\n}\nexport function renderComponent(component, coordinate, theme, library, markState) {\n  const [useGuideComponent] = useLibrary('component', library);\n  const {\n      scaleInstances: scales,\n      scale,\n      bbox\n    } = component,\n    options = __rest(component, [\"scaleInstances\", \"scale\", \"bbox\"]);\n  const value = {\n    bbox,\n    library\n  };\n  const render = useGuideComponent(options);\n  return render({\n    coordinate,\n    library,\n    markState,\n    scales,\n    theme,\n    value,\n    scale\n  });\n}\nexport function normalizeComponents(components) {\n  return components.map(d => {\n    const component = deepMix(d, d.style);\n    delete component.style;\n    return component;\n  });\n}\nexport function flatComponents(components) {\n  return components.flatMap(d => d.type == 'group' ? d.children : d);\n}\n// Wrap legends into a group component.\nexport function groupComponents(components, crossSize) {\n  // Group components by key.\n  const P = ['left', 'right', 'bottom', 'top'];\n  const key = _ref3 => {\n    let {\n      type,\n      position,\n      group\n    } = _ref3;\n    if (!P.includes(position)) return Symbol('independent');\n    if (group === undefined) {\n      if (type.startsWith('legend')) return `legend-${position}`;\n      return Symbol('independent');\n    }\n    if (group === 'independent') return Symbol('independent');\n    return group;\n  };\n  const grouped = groups(components, key);\n  // Update attributes of group components,\n  // and maybe flatten group components without enough room.\n  return grouped.flatMap(_ref4 => {\n    let [, components] = _ref4;\n    if (components.length === 1) return components[0];\n    // If crossSize defined, group components only when has\n    // enough room.\n    if (crossSize !== undefined) {\n      // Compute total length.\n      const DL = components.filter(d => d.length !== undefined).map(d => d.length);\n      const totalLength = sum(DL);\n      // If there is no enough room for components,\n      // do not group.\n      if (totalLength > crossSize) {\n        components.forEach(d => d.group = Symbol('independent'));\n        return components;\n      }\n      // Group legends and update legend length.\n      const emptyLength = crossSize - totalLength;\n      const emptyCount = components.length - DL.length;\n      const length = emptyLength / emptyCount;\n      components.forEach(d => {\n        if (d.length !== undefined) return;\n        d.length = length;\n      });\n    }\n    // Create a group component.\n    const size = max(components, d => d.size);\n    const order = max(components, d => d.order);\n    const crossPadding = max(components, d => d.crossPadding);\n    const position = components[0].position;\n    return {\n      type: 'group',\n      size,\n      order,\n      position,\n      children: components,\n      crossPadding\n    };\n  });\n}\nfunction inferLegendComponentType(scales, coordinates) {\n  // Filter accepts scales.\n  const channels = ['shape', 'size', 'color', 'opacity'];\n  const isConstantSize = (type, name) => type === 'constant' && name === 'size';\n  const accepts = scales.filter(_ref5 => {\n    let {\n      type,\n      name\n    } = _ref5;\n    return typeof type === 'string' && channels.includes(name) && !isConstantSize(type, name);\n  });\n  // Group scales by fields.\n  const constants = accepts.filter(_ref6 => {\n    let {\n      type\n    } = _ref6;\n    return type === 'constant';\n  });\n  const nonConstants = accepts.filter(_ref7 => {\n    let {\n      type\n    } = _ref7;\n    return type !== 'constant';\n  });\n  const groupKey = d => d.field ? d.field : Symbol('independent');\n  const fieldScales = groups(nonConstants, groupKey).map(_ref8 => {\n    let [key, scales] = _ref8;\n    return [key, [...scales, ...constants]];\n  }).filter(_ref9 => {\n    let [, scales] = _ref9;\n    return scales.some(scale => scale.type !== 'constant');\n  });\n  const scalesByField = new Map(fieldScales);\n  // Skip empty scales.\n  if (scalesByField.size === 0) return [];\n  // Infer components.\n  const sort = arr => arr.sort((_ref10, _ref11) => {\n    let [a] = _ref10;\n    let [b] = _ref11;\n    return a.localeCompare(b);\n  });\n  const components = Array.from(scalesByField).map(_ref12 => {\n    let [, scs] = _ref12;\n    const combinations = combine(scs).sort((a, b) => b.length - a.length);\n    const options = combinations.map(combination => ({\n      combination,\n      option: combination.map(scale => [scale.name, getScaleType(scale)])\n    }));\n    // For category legend.\n    for (const {\n      option,\n      combination\n    } of options) {\n      // If every scale is constant, do not display legend.\n      if (option.every(d => d[1] === 'constant')) continue;\n      if (option.every(d => d[1] === 'discrete' || d[1] === 'constant')) {\n        return ['legendCategory', combination];\n      }\n    }\n    // For reset legend.\n    // @todo Remove this.\n    for (const [componentType, accords] of LEGEND_INFER_STRATEGIES) {\n      for (const {\n        option,\n        combination\n      } of options) {\n        if (accords.some(accord => isEqual(sort(accord), sort(option)))) {\n          return [componentType, combination];\n        }\n      }\n    }\n    return null;\n  }).filter(defined);\n  return components;\n}\nfunction getScaleType(scale) {\n  const {\n    type\n  } = scale;\n  if (typeof type !== 'string') return null;\n  if (type in ContinuousScale) return 'continuous';\n  if (type in DiscreteScale) return 'discrete';\n  if (type in DistributionScale) return 'distribution';\n  if (type in ConstantScale) return 'constant';\n  return null;\n}\nfunction inferAxisComponentType(scales, coordinates) {\n  return scales.map(scale => {\n    const {\n      name\n    } = scale;\n    // todo wait for gui provide helix axis\n    if (isHelix(coordinates) || isTheta(coordinates)) return null;\n    if (isTranspose(coordinates) && (isPolar(coordinates) || isRadial(coordinates))) return null;\n    // infer axis\n    if (name.startsWith('x')) {\n      if (isPolar(coordinates)) return ['axisArc', [scale]];\n      if (isRadial(coordinates)) return ['axisLinear', [scale]];\n      return [isTranspose(coordinates) ? 'axisY' : 'axisX', [scale]];\n    }\n    if (name.startsWith('y')) {\n      if (isPolar(coordinates)) return ['axisLinear', [scale]];\n      if (isRadial(coordinates)) return ['axisArc', [scale]];\n      return [isTranspose(coordinates) ? 'axisX' : 'axisY', [scale]];\n    }\n    // Only support linear axis for z.\n    if (name.startsWith('z')) {\n      return ['axisZ', [scale]];\n    }\n    if (name.startsWith('position')) {\n      if (isRadar(coordinates)) return ['axisRadar', [scale]];\n      if (!isPolar(coordinates)) return ['axisY', [scale]];\n    }\n    return null;\n  }).filter(defined);\n}\nfunction inferComponentsType(scales, coordinates) {\n  const availableScales = scales.filter(scale => isValidScale(scale));\n  return [...inferLegendComponentType(availableScales, coordinates), ...inferAxisComponentType(availableScales, coordinates)];\n}\nfunction angleOf(coordinates) {\n  const polar = coordOf(coordinates, 'polar');\n  if (polar.length) {\n    const lastPolar = polar[polar.length - 1];\n    const {\n      startAngle,\n      endAngle\n    } = getPolarOptions(lastPolar);\n    return [startAngle, endAngle];\n  }\n  const radial = coordOf(coordinates, 'radial');\n  if (radial.length) {\n    const lastRadial = radial[radial.length - 1];\n    const {\n      startAngle,\n      endAngle\n    } = getRadialOptions(lastRadial);\n    return [startAngle, endAngle];\n  }\n  return [-Math.PI / 2, Math.PI / 2 * 3];\n}\n/**\n * match index of position\n */\nfunction matchPosition(name) {\n  const match = /position(\\d*)/g.exec(name);\n  if (!match) return null;\n  return +match[1];\n}\nfunction inferAxisPositionAndOrientation(type, ordinalPosition, relativeScales, scales, coordinates) {\n  // a axis only has one scale\n  const {\n    name\n  } = relativeScales[0];\n  // todo, in current resolution, the radar chart is implement by parallel + polar coordinate.\n  // implementation plan to be confirmed.\n  // in current implementation, it must to add the first position encode to it's last.\n  // so we won't render the last axis repeatably.\n  if (type === 'axisRadar') {\n    const positions = scales.filter(scale => scale.name.startsWith('position'));\n    const index = matchPosition(name);\n    if (name === positions.slice(-1)[0].name || index === null) return [null, null];\n    // infer radar axis orientation\n    const [startAngle, endAngle] = angleOf(coordinates);\n    const angle = (endAngle - startAngle) / (positions.length - 1) * index + startAngle;\n    return ['center', angle];\n  }\n  if (type === 'axisY' && isParallel(coordinates)) {\n    return isTranspose(coordinates) ? ['center', 'horizontal'] : ['center', 'vertical'];\n  }\n  // in non-cartesian coordinate systems, infer the arc axis angle\n  if (type === 'axisLinear') {\n    const [startAngle] = angleOf(coordinates);\n    return ['center', startAngle];\n  }\n  if (type === 'axisArc') {\n    if (ordinalPosition[0] === 'inner') return ['inner', null];\n    return ['outer', null];\n  }\n  if (isPolar(coordinates)) return ['center', null];\n  if (isRadial(coordinates)) return ['center', null];\n  if (type === 'axisX' && isReflect(coordinates) || type === 'axisX' && isReflectY(coordinates)) {\n    return ['top', null];\n  }\n  // if (type === 'axisX') return ['bottom', null];\n  return ordinalPosition;\n}\n// @todo Infer position by coordinates.\nfunction inferComponentPositionAndOrientation(type, defaultPosition, defaultOrientation, guide, relativeScales, scales, coordinates) {\n  const [startAngle] = angleOf(coordinates);\n  const ordinalPositionAndOrientation = [guide.position || defaultPosition, startAngle !== null && startAngle !== void 0 ? startAngle : defaultOrientation];\n  if (typeof type === 'string' && type.startsWith('axis')) {\n    return inferAxisPositionAndOrientation(type, ordinalPositionAndOrientation, relativeScales, scales, coordinates);\n  }\n  if (typeof type === 'string' && type.startsWith('legend') && isPolar(coordinates)) {\n    if (guide.position === 'center') return ['center', 'vertical'];\n  }\n  // for general component, use default position\n  return ordinalPositionAndOrientation;\n}\nfunction inferScrollableType(name, type) {\n  let coordinates = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  if (name === 'x') return isTranspose(coordinates) ? `${type}Y` : `${type}X`;\n  if (name === 'y') return isTranspose(coordinates) ? `${type}X` : `${type}Y`;\n  return null;\n}\n/**\n * Infer scrollable components, such as slider and scrollbar.\n */\nfunction inferScrollableComponents(partialOptions, scales, library) {\n  const [, createGuideComponent] = useLibrary('component', library);\n  const {\n    coordinates\n  } = partialOptions;\n  function normalized(type, channelName, scale, options) {\n    const componentType = inferScrollableType(channelName, type, coordinates);\n    if (!options || !componentType) return;\n    const {\n      props\n    } = createGuideComponent(componentType);\n    const {\n      defaultPosition,\n      defaultSize,\n      defaultOrder,\n      defaultCrossPadding: [crossPadding]\n    } = props;\n    return Object.assign(Object.assign({\n      position: defaultPosition,\n      defaultSize,\n      order: defaultOrder,\n      type: componentType,\n      crossPadding\n    }, options), {\n      scales: [scale]\n    });\n  }\n  return scales.filter(d => d.slider || d.scrollbar).flatMap(scale => {\n    const {\n      slider,\n      scrollbar,\n      name: channelName\n    } = scale;\n    return [normalized('slider', channelName, scale, slider), normalized('scrollbar', channelName, scale, scrollbar)];\n  }).filter(d => !!d);\n}\n// !!! Note Mutate component.size and component.\nexport function computeComponentSize(component, crossSize, crossPadding, position, theme, library) {\n  // Only compute and update size of components in padding area.\n  const {\n    type\n  } = component;\n  const paddingAreas = ['left', 'right', 'bottom', 'top'];\n  if (!paddingAreas.includes(position)) return;\n  if (typeof type !== 'string') return;\n  const t = type;\n  const createCompute = () => {\n    if (t.startsWith('axis')) return computeAxisSize;\n    if (t.startsWith('group')) return computeGroupSize;\n    if (t.startsWith('legendContinuous')) return computeContinuousLegendSize;\n    if (t === 'legendCategory') return computeCategoryLegendSize;\n    if (t.startsWith('slider')) return computeSliderSize;\n    if (t === 'title') return computeTitleSize;\n    if (t.startsWith('scrollbar')) return computeScrollbarSize;\n    return () => {};\n  };\n  return createCompute()(component, crossSize, crossPadding, position, theme, library);\n}\nfunction computeGroupSize(component, crossSize, crossPadding, position, theme, library) {\n  const {\n    children\n  } = component;\n  const maxCrossPadding = max(children, d => d.crossPadding);\n  children.forEach(d => d.crossPadding = maxCrossPadding);\n  children.forEach(child => computeComponentSize(child, crossSize, crossPadding, position, theme, library));\n  const maxSize = max(children, d => d.size);\n  component.size = maxSize;\n  children.forEach(d => d.size = maxSize);\n}\nfunction computeScrollbarSize(component, crossSize, crossPadding, position, theme, library) {\n  const {\n    trackSize = 6\n  } = deepMix({}, theme.scrollbar, component);\n  component.size = trackSize;\n}\nfunction computeTitleSize(component, crossSize, crossPadding, position, theme, library) {\n  const _a = deepMix({}, theme.title, component),\n    {\n      title,\n      subtitle,\n      spacing = 0\n    } = _a,\n    style = __rest(_a, [\"title\", \"subtitle\", \"spacing\"]);\n  if (title) {\n    const titleStyle = subObject(style, 'title');\n    const titleBBox = computeLabelSize(title, titleStyle);\n    component.size = titleBBox.height;\n  }\n  if (subtitle) {\n    const subtitleStyle = subObject(style, 'subtitle');\n    const subtitleBBox = computeLabelSize(subtitle, subtitleStyle);\n    component.size += spacing + subtitleBBox.height;\n  }\n}\nfunction computeSliderSize(component, crossSize, crossPadding, position, theme, library) {\n  const styleOf = () => {\n    const {\n      slider\n    } = theme;\n    return deepMix({}, slider, component);\n  };\n  const {\n    trackSize,\n    handleIconSize\n  } = styleOf();\n  const size = Math.max(trackSize, handleIconSize * 2.4);\n  component.size = size;\n}\nfunction computeAxisSize(component, crossSize, crossPadding, position, theme, library) {\n  var _a;\n  // If padding is auto, use hide as the labelTransform by default\n  // to avoid overlap between labels.\n  component.transform = component.transform || [{\n    type: 'hide'\n  }];\n  // Vertical or horizontal.\n  const isVertical = position === 'left' || position === 'right';\n  // Get styles to be applied.\n  const style = styleOf(component, position, theme);\n  const {\n      tickLength = 0,\n      labelSpacing = 0,\n      titleSpacing = 0,\n      labelAutoRotate\n    } = style,\n    rest = __rest(style, [\"tickLength\", \"labelSpacing\", \"titleSpacing\", \"labelAutoRotate\"]);\n  // Compute Labels.\n  const scale = createScale(component, library);\n  const labelBBoxes = computeLabelsBBox(rest, scale);\n  const paddingTick = tickLength + labelSpacing;\n  if (labelBBoxes && labelBBoxes.length) {\n    const maxLabelWidth = max(labelBBoxes, d => d.width);\n    const maxLabelHeight = max(labelBBoxes, d => d.height);\n    if (isVertical) {\n      component.size = maxLabelWidth + paddingTick;\n    } else {\n      const {\n        tickFilter,\n        labelTransform\n      } = component;\n      // If the labels can't be placed horizontally, and labelTransform is unset,\n      // rotate 90 deg to display them.\n      if (overflowX(scale, labelBBoxes, crossSize, crossPadding, tickFilter) && !labelTransform && labelAutoRotate !== false && labelAutoRotate !== null) {\n        component.labelTransform = 'rotate(90)';\n        component.size = maxLabelWidth + paddingTick;\n      } else {\n        component.labelTransform = (_a = component.labelTransform) !== null && _a !== void 0 ? _a : 'rotate(0)';\n        component.size = maxLabelHeight + paddingTick;\n      }\n    }\n  } else {\n    component.size = tickLength;\n  }\n  // Compute title.\n  const titleBBox = computeTitleBBox(rest);\n  if (titleBBox) {\n    if (isVertical) {\n      component.size += titleSpacing + titleBBox.width;\n    } else {\n      component.size += titleSpacing + titleBBox.height;\n    }\n  }\n}\nfunction computeContinuousLegendSize(component, crossSize, crossPadding, position, theme, library) {\n  // Get styles.\n  const styleOf = () => {\n    const {\n      legendContinuous\n    } = theme;\n    return deepMix({}, legendContinuous, component);\n  };\n  const _a = styleOf(),\n    {\n      labelSpacing = 0,\n      titleSpacing = 0\n    } = _a,\n    rest = __rest(_a, [\"labelSpacing\", \"titleSpacing\"]);\n  // Vertical or horizontal.\n  const isVertical = position === 'left' || position === 'right';\n  // Ribbon styles.\n  const ribbonStyles = subObject(rest, 'ribbon');\n  const {\n    size: ribbonSize\n  } = ribbonStyles;\n  const handleIconStyles = subObject(rest, 'handleIcon');\n  const {\n    size: handleIconSize\n  } = handleIconStyles;\n  const mainSize = Math.max(ribbonSize, handleIconSize * 2.4);\n  component.size = mainSize;\n  // Compute labels.\n  const scale = createScale(component, library);\n  const labelBBoxes = computeLabelsBBox(rest, scale);\n  if (labelBBoxes) {\n    const key = isVertical ? 'width' : 'height';\n    const size = max(labelBBoxes, d => d[key]);\n    component.size += size + labelSpacing;\n  }\n  // Compute title.\n  const titleBBox = computeTitleBBox(rest);\n  if (titleBBox) {\n    if (isVertical) {\n      component.size = Math.max(component.size, titleBBox.width);\n    } else {\n      component.size += titleSpacing + titleBBox.height;\n    }\n  }\n}\nfunction computeCategoryLegendSize(component, crossSize0, crossPadding, position, theme, library) {\n  const styleOf = () => {\n    const {\n      legendCategory\n    } = theme;\n    const {\n      title\n    } = component;\n    const [defaultTitle, specifiedTitle] = Array.isArray(title) ? [title, undefined] : [undefined, title];\n    return deepMix({\n      title: defaultTitle\n    }, legendCategory, Object.assign(Object.assign({}, component), {\n      title: specifiedTitle\n    }));\n  };\n  const _a = styleOf(),\n    {\n      itemSpacing,\n      itemMarkerSize,\n      titleSpacing,\n      rowPadding,\n      colPadding,\n      maxCols = Infinity,\n      maxRows = Infinity\n    } = _a,\n    rest = __rest(_a, [\"itemSpacing\", \"itemMarkerSize\", \"titleSpacing\", \"rowPadding\", \"colPadding\", \"maxCols\", \"maxRows\"]);\n  const {\n    cols,\n    length\n  } = component;\n  const getRows = rows => Math.min(rows, maxRows);\n  const getCols = cols => Math.min(cols, maxCols);\n  // Vertical or horizontal.\n  const isVertical = position === 'left' || position === 'right';\n  const crossSize = length === undefined ? crossSize0 + (isVertical ? 0 : crossPadding[0] + crossPadding[1]) : length;\n  // Compute title.\n  const titleBBox = computeTitleBBox(rest);\n  const scale = createScale(component, library);\n  const labelBBoxes = computeLabelsBBox(rest, scale, 'itemLabel');\n  const height = Math.max(labelBBoxes[0].height, itemMarkerSize) + rowPadding;\n  const widthOf = function (w) {\n    let padding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    return itemMarkerSize + w + itemSpacing[0] + padding;\n  };\n  // Only support grid layout for vertical area.\n  const computeVerticalSize = () => {\n    let maxSize = -Infinity;\n    let pos = 0;\n    let cols = 1;\n    let rows = 0;\n    let maxRows = -Infinity;\n    let maxPos = -Infinity;\n    const titleHeight = titleBBox ? titleBBox.height : 0;\n    const maxHeight = crossSize - titleHeight;\n    for (const {\n      width\n    } of labelBBoxes) {\n      const w = widthOf(width, colPadding);\n      maxSize = Math.max(maxSize, w);\n      if (pos + height > maxHeight) {\n        cols++;\n        maxRows = Math.max(maxRows, rows);\n        maxPos = Math.max(maxPos, pos);\n        rows = 1;\n        pos = height;\n      } else {\n        pos += height;\n        rows++;\n      }\n    }\n    if (cols <= 1) {\n      maxRows = rows;\n      maxPos = pos;\n    }\n    component.size = maxSize * getCols(cols);\n    component.length = maxPos + titleHeight;\n    deepMix(component, {\n      cols: getCols(cols),\n      gridRow: maxRows\n    });\n  };\n  // Horizontal grid layout.\n  const computeHorizontalGrid = () => {\n    const rows = Math.ceil(labelBBoxes.length / cols);\n    const maxWidth = max(labelBBoxes, d => widthOf(d.width)) * cols;\n    component.size = height * getRows(rows) - rowPadding;\n    component.length = Math.min(maxWidth, crossSize);\n  };\n  // Horizontal flex layout.\n  const computeHorizontalFlex = () => {\n    let rows = 1;\n    let pos = 0;\n    let maxPos = -Infinity;\n    for (const {\n      width\n    } of labelBBoxes) {\n      const w = widthOf(width, colPadding);\n      if (pos + w > crossSize) {\n        maxPos = Math.max(maxPos, pos);\n        pos = w;\n        rows++;\n      } else {\n        pos += w;\n      }\n    }\n    if (rows === 1) maxPos = pos;\n    component.size = height * getRows(rows) - rowPadding;\n    component.length = maxPos;\n  };\n  if (isVertical) computeVerticalSize();else if (typeof cols === 'number') computeHorizontalGrid();else computeHorizontalFlex();\n  // Compute titles.\n  if (titleBBox) {\n    if (isVertical) {\n      component.size = Math.max(component.size, titleBBox.width);\n    } else {\n      component.size += titleSpacing + titleBBox.height;\n    }\n  }\n}\nexport function createScale(component, library) {\n  const [useScale] = useLibrary('scale', library);\n  // Init scale, the tickCount of axis has higher priority than scale.\n  const {\n    scales,\n    tickCount,\n    tickMethod\n  } = component;\n  const scaleOptions = scales.find(d => d.type !== 'constant' && d.type !== 'identity');\n  if (tickCount !== undefined) scaleOptions.tickCount = tickCount;\n  if (tickMethod !== undefined) scaleOptions.tickMethod = tickMethod;\n  return useScale(scaleOptions);\n}\nexport function computeLabelsBBox(component, scale) {\n  let key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'label';\n  const {\n      labelFormatter,\n      tickFilter,\n      label = true\n    } = component,\n    style = __rest(component, [\"labelFormatter\", \"tickFilter\", \"label\"]);\n  if (!label) return null;\n  // Get labels to be rendered.\n  const labels = labelsOf(scale, labelFormatter, tickFilter);\n  const labelStyle = subObject(style, key);\n  const labelStyles = labels.map((d, i) => Object.fromEntries(Object.entries(labelStyle).map(_ref13 => {\n    let [key, value] = _ref13;\n    return [key, typeof value === 'function' ? value(d, i) : value];\n  })));\n  const labelBBoxes = labels.map((d, i) => {\n    const normalizeStyle = labelStyles[i];\n    return computeLabelSize(d, normalizeStyle);\n  });\n  // Cache boxes to avoid computed twice.\n  // @todo GUI use untransformed bbox, so it can't cache if\n  // label.style has transform attributes.\n  const hasTransform = labelStyles.some(d => d.transform);\n  if (!hasTransform) {\n    const I = labels.map((_, i) => i);\n    component.indexBBox = new Map(I.map(i => [i, [labels[i], labelBBoxes[i]]]));\n  }\n  return labelBBoxes;\n}\nexport function computeTitleBBox(component) {\n  const isFalsy = x => x === false || x === null;\n  const {\n      title\n    } = component,\n    style = __rest(component, [\"title\"]);\n  if (isFalsy(title) || title === undefined) return null;\n  const titleStyle = subObject(style, 'title');\n  const {\n    direction,\n    transform\n  } = titleStyle;\n  const titleText = Array.isArray(title) ? title.join(',') : title;\n  if (typeof titleText !== 'string') return null;\n  const titleBBox = computeLabelSize(titleText, Object.assign(Object.assign({}, titleStyle), {\n    transform: transform || (direction === 'vertical' ? 'rotate(-90)' : '')\n  }));\n  return titleBBox;\n}\nexport function styleOf(axis, position, theme) {\n  const {\n    title\n  } = axis;\n  const [defaultTitle, specifiedTitle] = Array.isArray(title) ? [title, undefined] : [undefined, title];\n  const {\n    axis: baseStyle,\n    // @ts-ignore\n    [`axis${capitalizeFirst(position)}`]: positionStyle\n  } = theme;\n  return deepMix({\n    title: defaultTitle\n  }, baseStyle, positionStyle, Object.assign(Object.assign({}, axis), {\n    title: specifiedTitle\n  }));\n}\nfunction ticksOf(scale, tickFilter) {\n  const ticks = scale.getTicks ? scale.getTicks() : scale.getOptions().domain;\n  if (!tickFilter) return ticks;\n  return ticks.filter(tickFilter);\n}\nfunction labelsOf(scale, labelFormatter, tickFilter) {\n  const T = ticksOf(scale, tickFilter);\n  const ticks = T.map(d => typeof d === 'number' ? prettyNumber(d) : d);\n  const formatter = labelFormatter ? typeof labelFormatter === 'string' ? format(labelFormatter) : labelFormatter : scale.getFormatter ? scale.getFormatter() : d => `${d}`;\n  return ticks.map(formatter);\n}\nfunction offsetOf(scale, d) {\n  if (!scale.getBandWidth) return 0;\n  const offset = scale.getBandWidth(d) / 2;\n  return offset;\n}\nfunction overflowX(scale, labelBBoxes, crossSize, crossPadding, tickFilter) {\n  // If actual size bigger than container size, overflow.\n  const totalSize = sum(labelBBoxes, d => d.width);\n  if (totalSize > crossSize) return true;\n  // Clone scale to get visual position for labels.\n  const scaleX = scale.clone();\n  scaleX.update({\n    range: [0, crossSize]\n  });\n  const ticks = ticksOf(scale, tickFilter);\n  const X = ticks.map(d => scaleX.map(d) + offsetOf(scaleX, d));\n  const I = ticks.map((_, i) => i);\n  const startX = -crossPadding[0];\n  const endX = crossSize + crossPadding[1];\n  const extent = (x, bbox) => {\n    const {\n      width\n    } = bbox;\n    return [x - width / 2, x + width / 2];\n  };\n  // Collision detection.\n  for (let i = 0; i < I.length; i++) {\n    const x = X[i];\n    const [x0, x1] = extent(x, labelBBoxes[i]);\n    // If a label is out of plot area, overflow.\n    if (x0 < startX || x1 > endX) return true;\n    const y = X[i + 1];\n    if (y) {\n      // If two labels intersect, overflow.\n      const [y0] = extent(y, labelBBoxes[i + 1]);\n      if (x1 > y0) return true;\n    }\n  }\n  return false;\n}\nfunction computeLabelSize(d, style) {\n  const shape = normalizeLabel(d);\n  const {\n      filter\n    } = style,\n    rest = __rest(style, [\"filter\"]);\n  shape.attr(Object.assign(Object.assign({}, rest), {\n    visibility: 'none'\n  }));\n  const bbox = shape.getBBox();\n  return bbox;\n}\nfunction normalizeLabel(d) {\n  if (d instanceof DisplayObject) return d;\n  return new Text({\n    style: {\n      text: `${d}`\n    }\n  });\n}","map":{"version":3,"names":["deepMix","isEqual","groups","max","sum","format","DisplayObject","Text","getPolarOptions","getRadialOptions","combine","prettyNumber","capitalizeFirst","defined","subObject","LEGEND_INFER_STRATEGIES","coordOf","isHelix","isParallel","isPolar","isRadar","isRadial","isReflect","isReflectY","isTheta","isTranspose","useLibrary","isValidScale","ConstantScale","ContinuousScale","DiscreteScale","DistributionScale","inferComponent","scales","partialOptions","library","coordinates","title","createGuideComponent","displayedScales","filter","_ref","guide","components","sliders","inferScrollableComponents","push","props","defaultPosition","defaultOrientation","defaultOrder","defaultSize","defaultCrossPadding","titleOptions","Object","assign","type","position","orientation","order","crossPadding","inferredComponents","inferComponentsType","forEach","_ref2","relativeScales","defaultPlane","defaultLength","defaultPadding","DP","DCP","scale","guideOptions","field","guides","Array","isArray","partialGuide","inferComponentPositionAndOrientation","isVertical","size","length","padding","plane","renderComponent","component","coordinate","theme","markState","useGuideComponent","scaleInstances","bbox","options","__rest","value","render","normalizeComponents","map","d","style","flatComponents","flatMap","children","groupComponents","crossSize","P","key","_ref3","group","includes","Symbol","undefined","startsWith","grouped","_ref4","DL","totalLength","emptyLength","emptyCount","inferLegendComponentType","channels","isConstantSize","name","accepts","_ref5","constants","_ref6","nonConstants","_ref7","groupKey","fieldScales","_ref8","_ref9","some","scalesByField","Map","sort","arr","_ref10","_ref11","a","b","localeCompare","from","_ref12","scs","combinations","combination","option","getScaleType","every","componentType","accords","accord","inferAxisComponentType","availableScales","angleOf","polar","lastPolar","startAngle","endAngle","radial","lastRadial","Math","PI","matchPosition","match","exec","inferAxisPositionAndOrientation","ordinalPosition","positions","index","slice","angle","ordinalPositionAndOrientation","inferScrollableType","arguments","normalized","channelName","slider","scrollbar","computeComponentSize","paddingAreas","t","createCompute","computeAxisSize","computeGroupSize","computeContinuousLegendSize","computeCategoryLegendSize","computeSliderSize","computeTitleSize","computeScrollbarSize","maxCrossPadding","child","maxSize","trackSize","_a","subtitle","spacing","titleStyle","titleBBox","computeLabelSize","height","subtitleStyle","subtitleBBox","styleOf","handleIconSize","transform","tickLength","labelSpacing","titleSpacing","labelAutoRotate","rest","createScale","labelBBoxes","computeLabelsBBox","paddingTick","maxLabelWidth","width","maxLabelHeight","tickFilter","labelTransform","overflowX","computeTitleBBox","legendContinuous","ribbonStyles","ribbonSize","handleIconStyles","mainSize","crossSize0","legendCategory","defaultTitle","specifiedTitle","itemSpacing","itemMarkerSize","rowPadding","colPadding","maxCols","Infinity","maxRows","cols","getRows","rows","min","getCols","widthOf","w","computeVerticalSize","pos","maxPos","titleHeight","maxHeight","gridRow","computeHorizontalGrid","ceil","maxWidth","computeHorizontalFlex","useScale","tickCount","tickMethod","scaleOptions","find","labelFormatter","label","labels","labelsOf","labelStyle","labelStyles","i","fromEntries","entries","_ref13","normalizeStyle","hasTransform","I","_","indexBBox","isFalsy","x","direction","titleText","join","axis","baseStyle","positionStyle","ticksOf","ticks","getTicks","getOptions","domain","T","formatter","getFormatter","offsetOf","getBandWidth","offset","totalSize","scaleX","clone","update","range","X","startX","endX","extent","x0","x1","y","y0","shape","normalizeLabel","attr","visibility","getBBox","text"],"sources":["runtime/component.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}