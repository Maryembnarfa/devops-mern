{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { deepMix } from '@antv/util';\nimport { extent } from '@antv/vendor/d3-array';\nimport { columnOf, column } from './utils/helper';\nimport { createGroups } from './utils/order';\n/**\n * The SymmetryY transform apply offset for y channels, say to transform\n * them to be symmetry.\n */\nexport const SymmetryY = function () {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    groupBy = 'x'\n  } = options;\n  return (I, mark) => {\n    const {\n      encode\n    } = mark;\n    const {\n        x\n      } = encode,\n      rest = __rest(encode, [\"x\"]);\n    // Extract and create new channels starts with y, such as y, y1.\n    const Yn = Object.entries(rest).filter(_ref => {\n      let [k] = _ref;\n      return k.startsWith('y');\n    }).map(_ref2 => {\n      let [k] = _ref2;\n      return [k, columnOf(encode, k)[0]];\n    });\n    const newYn = Yn.map(_ref3 => {\n      let [k] = _ref3;\n      return [k, new Array(I.length)];\n    });\n    // Group marks into series by specified keys.\n    const groups = createGroups(groupBy, I, mark);\n    const MY = new Array(groups.length);\n    for (let i = 0; i < groups.length; i++) {\n      const I = groups[i];\n      const Y = I.flatMap(i => Yn.map(_ref4 => {\n        let [, V] = _ref4;\n        return +V[i];\n      }));\n      const [minY, maxY] = extent(Y);\n      MY[i] = (minY + maxY) / 2;\n    }\n    const maxMiddleY = Math.max(...MY);\n    for (let m = 0; m < groups.length; m++) {\n      const offset = maxMiddleY - MY[m];\n      const I = groups[m];\n      for (const i of I) {\n        for (let j = 0; j < Yn.length; j++) {\n          const [, V] = Yn[j];\n          const [, newV] = newYn[j];\n          newV[i] = +V[i] + offset;\n        }\n      }\n    }\n    return [I, deepMix({}, mark, {\n      encode: Object.fromEntries(newYn.map(_ref5 => {\n        let [k, v] = _ref5;\n        return [k, column(v, columnOf(encode, k)[1])];\n      }))\n    })];\n  };\n};\nSymmetryY.props = {};","map":{"version":3,"names":["deepMix","extent","columnOf","column","createGroups","SymmetryY","options","arguments","length","undefined","groupBy","I","mark","encode","x","rest","__rest","Yn","Object","entries","filter","_ref","k","startsWith","map","_ref2","newYn","_ref3","Array","groups","MY","i","Y","flatMap","_ref4","V","minY","maxY","maxMiddleY","Math","max","m","offset","j","newV","fromEntries","_ref5","v","props"],"sources":["transform/symmetryY.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}