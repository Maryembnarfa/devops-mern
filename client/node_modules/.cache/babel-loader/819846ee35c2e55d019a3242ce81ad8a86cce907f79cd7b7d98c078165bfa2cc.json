{"ast":null,"code":"import{useQuery,useMutation,useQueryClient}from'@tanstack/react-query';import React,{useState}from'react';import{EditOutlined,DeleteOutlined,EyeOutlined}from'@ant-design/icons';import{Table,message,Button,Modal,Select,Tag,Space}from'antd';import{axiosInstance}from'../../lib/axios';import AddDilevery from'./addDilevery';import UpdateDelivery from'./updateDelivery';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const{Option}=Select;const Delivery=()=>{const[open,setOpen]=useState(false);const[openUpdate,setOpenUpdate]=useState(false);const[openView,setOpenView]=useState(false);const[id,setId]=useState();const[selectedDelivery,setSelectedDelivery]=useState(null);const[selectedRowKeys,setSelectedRowKeys]=useState([]);// État pour stocker les clés des lignes sélectionnées\nconst queryClient=useQueryClient();// Récupérer les données des livraisons\nconst{data,isLoading}=useQuery({queryKey:[\"delivery\"],queryFn:async()=>{const response=await axiosInstance.get(\"/delivry\");return response.data;},onError:error=>{message.error(`Erreur lors du chargement des livraisons: ${error.message}`);}});// Mutation pour supprimer une livraison\nconst{mutate:deleteDelivery}=useMutation({mutationFn:async id=>{const response=await axiosInstance.delete(`/delivry/${id}`);return response.data;},onSuccess:()=>{message.success(\"Livraison supprimée avec succès\");queryClient.invalidateQueries([\"delivery\"]);// Rafraîchir les données\n},onError:error=>{message.error(`Erreur lors de la suppression: ${error.message}`);}});// Fonction pour confirmer la suppression\nconst showDeleteConfirm=id=>{Modal.confirm({title:\"Êtes-vous sûr de vouloir supprimer cette livraison ?\",okText:\"Oui\",okType:\"danger\",cancelText:\"Non\",onOk(){deleteDelivery(id);// Appeler la mutation de suppression\n}});};// Fonction pour afficher les détails d'une livraison\nconst handleViewDelivery=record=>{setSelectedDelivery(record);// Stocker les données de la livraison sélectionnée\nsetOpenView(true);// Ouvrir la modal\n};// Mutation pour mettre à jour le statut\nconst{mutate:updateStatus}=useMutation({mutationFn:async _ref=>{let{id,status}=_ref;const response=await axiosInstance.patch(`/delivry/${id}/status`,{status});return response.data;},onSuccess:()=>{message.success(\"Statut mis à jour avec succès\");queryClient.invalidateQueries([\"delivery\"]);// Rafraîchir les données\n},onError:error=>{message.error(`Erreur lors de la mise à jour du statut: ${error.message}`);}});// Fonction pour gérer le changement de statut\n{/* \r\n    const handleStatusChange = (value, record) => {\r\n        updateStatus({ id: record._id, status: value });\r\n    };\r\n\r\n    */}// Mutation pour mettre à jour le statut des livraisons sélectionnées\nconst{mutate:UpdateDelivryStatusAttente}=useMutation({mutationFn:async _id=>{const response=await axiosInstance.patch(\"/delivry/updateDelivryStatusAttente\",{_id});return response.data;},onSuccess:()=>{message.success(\"Statut mis à jour avec succès\");queryClient.invalidateQueries([\"delivery\"]);// Rafraîchir les données\n},onError:error=>{message.error(`Erreur lors de la mise à jour du statut: ${error.message}`);}});// Fonction pour gérer l'action sur les lignes sélectionnées\nconst handleActionOnSelected=()=>{console.log(\"Lignes sélectionnées :\",selectedRowKeys);message.info(`Vous avez sélectionné ${selectedRowKeys.length} livraison(s).`);// Ajoutez ici la logique pour traiter les lignes sélectionnées\n// Vérifier si toutes les livraisons sélectionnées sont en \"EnAttente\"\nconst selectedDeliveries=data.filter(delivery=>selectedRowKeys.includes(delivery._id));const allPending=selectedDeliveries.every(delivery=>delivery.status===\"EnAttente\");if(!allPending){message.error(\"Certaines livraisons ne sont pas en statut 'EnAttente'.\");return;}// Mettre à jour le statut des livraisons sélectionnées\nUpdateDelivryStatusAttente(selectedRowKeys);};// Configuration de la sélection des lignes\nconst rowSelection={selectedRowKeys,onChange:selectedKeys=>{setSelectedRowKeys(selectedKeys);// Mettre à jour les clés des lignes sélectionnées\n}};// Fonction pour afficher le statut avec un style personnalisé\nconst renderStatus=status=>{let color='default';switch(status){case'EnAttente':color='orange';break;case'EnDepot':color='blue';break;case'EnCours':color='green';break;case'RetourE':color='red';break;case'RetourD':color='cyan';break;case'Livré':color='purple';break;default:color='gray';}return/*#__PURE__*/_jsx(Tag,{color:color,children:status});};const columns=[{title:'Code',dataIndex:'code',key:'code'},{title:'Client',dataIndex:'client_name',key:'client_name'},{title:'Adresse',dataIndex:'delivery_address',key:'delivery_address'},{title:'Gouvernement',dataIndex:'government',key:'government'},{title:'Téléphone',dataIndex:'phone1',key:'phone1'},{title:'Rue',dataIndex:'street',key:'street'},{title:'Statut',dataIndex:'status',key:'status',render:text=>renderStatus(text)},{/*    render: (text, record) => (\r\n                <Select\r\n                    defaultValue={text}\r\n                    style={{ width: 110 }}\r\n                    onChange={(value) => handleStatusChange(value, record)}\r\n                >\r\n\r\n\r\n                </Select>\r\n            ), */},{title:'Actions',key:'actions',render:(text,record)=>/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:'10px'},children:[/*#__PURE__*/_jsx(EyeOutlined,{style:{fontSize:'18px',cursor:'pointer'},onClick:()=>handleViewDelivery(record)// Fonction d'affichage\n}),/*#__PURE__*/_jsx(EditOutlined,{style:{fontSize:'18px',cursor:'pointer'},onClick:()=>{setOpenUpdate(true);// Ouvrir la modal de mise à jour\nsetId(record._id);// Définir l'ID de l'élément à mettre à jour\n}}),/*#__PURE__*/_jsx(DeleteOutlined,{style:{fontSize:'18px',cursor:'pointer'},onClick:()=>showDeleteConfirm(record._id)// Fonction de suppression\n})]})}];return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{style:{marginBottom:\"20px\",textAlign:\"right\"},children:/*#__PURE__*/_jsx(Button,{type:\"primary\",onClick:()=>setOpen(true),style:{padding:\"10px 20px\",fontSize:\"15px\",height:\"40px\",width:\"160px\",backgroundColor:\"rgb(189, 37, 27)\",borderColor:\"rgb(189, 37, 27)\"},children:\"Add Delivery\"})}),/*#__PURE__*/_jsx(\"div\",{style:{marginBottom:\"20px\",textAlign:\"left\"},children:selectedRowKeys.length>0&&/*#__PURE__*/_jsxs(Button,{type:\"primary\",onClick:handleActionOnSelected,style:{padding:\"10px 20px\",fontSize:\"15px\",height:\"40px\",width:\"auto\",backgroundColor:\"rgb(189, 37, 27)\",borderColor:\"rgb(189, 37, 27)\"},children:[\"Update Statut  (\",selectedRowKeys.length,\")\"]})}),/*#__PURE__*/_jsx(Table,{rowSelection:{type:\"checkbox\",// Type de sélection (case à cocher)\n...rowSelection},dataSource:data,columns:columns,rowKey:\"_id\",loading:isLoading,pagination:{pageSize:5}}),/*#__PURE__*/_jsx(AddDilevery,{open:open,setOpen:setOpen}),/*#__PURE__*/_jsx(UpdateDelivery,{openUpdate:openUpdate,setOpenUpdate:setOpenUpdate,id:id}),/*#__PURE__*/_jsx(Modal,{open:openView,onCancel:()=>setOpenView(false),footer:null// Pas de boutons dans le footer\n,children:selectedDelivery&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Client:\"}),\" \",selectedDelivery.client_name]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Adresse:\"}),\" \",selectedDelivery.delivery_address]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Gouvernement:\"}),\" \",selectedDelivery.government]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Rue:\"}),\" \",selectedDelivery.street]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"T\\xE9l\\xE9phone:\"}),\" \",selectedDelivery.phone1]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Statut:\"}),\" \",selectedDelivery.status]})]})})]});};export default Delivery;","map":{"version":3,"names":["useQuery","useMutation","useQueryClient","React","useState","EditOutlined","DeleteOutlined","EyeOutlined","Table","message","Button","Modal","Select","Tag","Space","axiosInstance","AddDilevery","UpdateDelivery","jsx","_jsx","jsxs","_jsxs","Option","Delivery","open","setOpen","openUpdate","setOpenUpdate","openView","setOpenView","id","setId","selectedDelivery","setSelectedDelivery","selectedRowKeys","setSelectedRowKeys","queryClient","data","isLoading","queryKey","queryFn","response","get","onError","error","mutate","deleteDelivery","mutationFn","delete","onSuccess","success","invalidateQueries","showDeleteConfirm","confirm","title","okText","okType","cancelText","onOk","handleViewDelivery","record","updateStatus","_ref","status","patch","UpdateDelivryStatusAttente","_id","handleActionOnSelected","console","log","info","length","selectedDeliveries","filter","delivery","includes","allPending","every","rowSelection","onChange","selectedKeys","renderStatus","color","children","columns","dataIndex","key","render","text","style","display","gap","fontSize","cursor","onClick","marginBottom","textAlign","type","padding","height","width","backgroundColor","borderColor","dataSource","rowKey","loading","pagination","pageSize","onCancel","footer","client_name","delivery_address","government","street","phone1"],"sources":["C:/Users/Hp/Desktop/LIVRAISON/client/src/pages/dilevery/listDilevery.jsx"],"sourcesContent":["import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\r\nimport React, { useState } from 'react';\r\nimport { EditOutlined, DeleteOutlined, EyeOutlined } from '@ant-design/icons';\r\nimport { Table, message, Button, Modal, Select, Tag, Space } from 'antd';\r\nimport { axiosInstance } from '../../lib/axios';\r\nimport AddDilevery from './addDilevery';\r\nimport UpdateDelivery from './updateDelivery';\r\nconst { Option } = Select;\r\nconst Delivery = () => {\r\n    const [open, setOpen] = useState(false);\r\n    const [openUpdate, setOpenUpdate] = useState(false);\r\n    const [openView, setOpenView] = useState(false);\r\n    const [id, setId] = useState();\r\n    const [selectedDelivery, setSelectedDelivery] = useState(null);\r\n    const [selectedRowKeys, setSelectedRowKeys] = useState([]); // État pour stocker les clés des lignes sélectionnées\r\n\r\n    const queryClient = useQueryClient();\r\n\r\n    // Récupérer les données des livraisons\r\n    const { data, isLoading } = useQuery({\r\n        queryKey: [\"delivery\"],\r\n        queryFn: async () => {\r\n            const response = await axiosInstance.get(\"/delivry\");\r\n            return response.data;\r\n        },\r\n        onError: (error) => {\r\n            message.error(`Erreur lors du chargement des livraisons: ${error.message}`);\r\n        },\r\n    });\r\n\r\n    // Mutation pour supprimer une livraison\r\n    const { mutate: deleteDelivery } = useMutation({\r\n        mutationFn: async (id) => {\r\n            const response = await axiosInstance.delete(`/delivry/${id}`);\r\n            return response.data;\r\n        },\r\n        onSuccess: () => {\r\n            message.success(\"Livraison supprimée avec succès\");\r\n            queryClient.invalidateQueries([\"delivery\"]); // Rafraîchir les données\r\n        },\r\n        onError: (error) => {\r\n            message.error(`Erreur lors de la suppression: ${error.message}`);\r\n        },\r\n    });\r\n\r\n    // Fonction pour confirmer la suppression\r\n    const showDeleteConfirm = (id) => {\r\n        Modal.confirm({\r\n            title: \"Êtes-vous sûr de vouloir supprimer cette livraison ?\",\r\n            okText: \"Oui\",\r\n            okType: \"danger\",\r\n            cancelText: \"Non\",\r\n            onOk() {\r\n                deleteDelivery(id); // Appeler la mutation de suppression\r\n            },\r\n        });\r\n    };\r\n\r\n    // Fonction pour afficher les détails d'une livraison\r\n    const handleViewDelivery = (record) => {\r\n        setSelectedDelivery(record); // Stocker les données de la livraison sélectionnée\r\n        setOpenView(true); // Ouvrir la modal\r\n    };\r\n    // Mutation pour mettre à jour le statut\r\n    const { mutate: updateStatus } = useMutation({\r\n        mutationFn: async ({ id, status }) => {\r\n            const response = await axiosInstance.patch(`/delivry/${id}/status`, { status });\r\n\r\n            return response.data;\r\n        },\r\n        onSuccess: () => {\r\n            message.success(\"Statut mis à jour avec succès\");\r\n            queryClient.invalidateQueries([\"delivery\"]); // Rafraîchir les données\r\n        },\r\n        onError: (error) => {\r\n            message.error(`Erreur lors de la mise à jour du statut: ${error.message}`);\r\n        },\r\n    });\r\n    // Fonction pour gérer le changement de statut\r\n    {/* \r\n    const handleStatusChange = (value, record) => {\r\n        updateStatus({ id: record._id, status: value });\r\n    };\r\n\r\n    */}\r\n    // Mutation pour mettre à jour le statut des livraisons sélectionnées\r\n    const { mutate: UpdateDelivryStatusAttente } = useMutation({\r\n        mutationFn: async (_id) => {\r\n            const response = await axiosInstance.patch(\"/delivry/updateDelivryStatusAttente\", { _id });\r\n            return response.data;\r\n        },\r\n        onSuccess: () => {\r\n            message.success(\"Statut mis à jour avec succès\");\r\n            queryClient.invalidateQueries([\"delivery\"]); // Rafraîchir les données\r\n        },\r\n        onError: (error) => {\r\n            message.error(`Erreur lors de la mise à jour du statut: ${error.message}`);\r\n        },\r\n    });\r\n\r\n    // Fonction pour gérer l'action sur les lignes sélectionnées\r\n    const handleActionOnSelected = () => {\r\n        console.log(\"Lignes sélectionnées :\", selectedRowKeys);\r\n        message.info(`Vous avez sélectionné ${selectedRowKeys.length} livraison(s).`);\r\n        // Ajoutez ici la logique pour traiter les lignes sélectionnées\r\n        // Vérifier si toutes les livraisons sélectionnées sont en \"EnAttente\"\r\n        const selectedDeliveries = data.filter((delivery) =>\r\n            selectedRowKeys.includes(delivery._id)\r\n        );\r\n\r\n        const allPending = selectedDeliveries.every(\r\n            (delivery) => delivery.status === \"EnAttente\"\r\n        );\r\n\r\n        if (!allPending) {\r\n            message.error(\"Certaines livraisons ne sont pas en statut 'EnAttente'.\");\r\n            return;\r\n        }\r\n\r\n        // Mettre à jour le statut des livraisons sélectionnées\r\n        UpdateDelivryStatusAttente(selectedRowKeys);\r\n    };\r\n    // Configuration de la sélection des lignes\r\n    const rowSelection = {\r\n        selectedRowKeys,\r\n        onChange: (selectedKeys) => {\r\n            setSelectedRowKeys(selectedKeys); // Mettre à jour les clés des lignes sélectionnées\r\n        },\r\n    };\r\n    // Fonction pour afficher le statut avec un style personnalisé\r\n    const renderStatus = (status) => {\r\n        let color = 'default';\r\n        switch (status) {\r\n            case 'EnAttente':\r\n                color = 'orange';\r\n                break;\r\n            case 'EnDepot':\r\n                color = 'blue';\r\n                break;\r\n            case 'EnCours':\r\n                color = 'green';\r\n                break;\r\n            case 'RetourE':\r\n                color = 'red';\r\n                break;\r\n            case 'RetourD':\r\n                color = 'cyan';\r\n                break;\r\n            case 'Livré':\r\n                color = 'purple';\r\n                break;\r\n            default:\r\n                color = 'gray';\r\n        }\r\n        return <Tag color={color}>{status}</Tag>;\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Code',\r\n            dataIndex: 'code',\r\n            key: 'code',\r\n        },\r\n        {\r\n            title: 'Client',\r\n            dataIndex: 'client_name',\r\n            key: 'client_name',\r\n        },\r\n        {\r\n            title: 'Adresse',\r\n            dataIndex: 'delivery_address',\r\n            key: 'delivery_address',\r\n        },\r\n        {\r\n            title: 'Gouvernement',\r\n            dataIndex: 'government',\r\n            key: 'government',\r\n        },\r\n        {\r\n            title: 'Téléphone',\r\n            dataIndex: 'phone1',\r\n            key: 'phone1',\r\n        },\r\n        {\r\n            title: 'Rue',\r\n            dataIndex: 'street',\r\n            key: 'street',\r\n        },\r\n        {\r\n            title: 'Statut',\r\n            dataIndex: 'status',\r\n            key: 'status',\r\n            render: (text) => renderStatus(text),\r\n\r\n        },\r\n        {/*    render: (text, record) => (\r\n                <Select\r\n                    defaultValue={text}\r\n                    style={{ width: 110 }}\r\n                    onChange={(value) => handleStatusChange(value, record)}\r\n                >\r\n\r\n\r\n                </Select>\r\n            ), */},\r\n        {\r\n            title: 'Actions',\r\n            key: 'actions',\r\n            render: (text, record) => (\r\n                <div style={{ display: 'flex', gap: '10px' }}>\r\n                    <EyeOutlined\r\n                        style={{ fontSize: '18px', cursor: 'pointer' }}\r\n                        onClick={() => handleViewDelivery(record)} // Fonction d'affichage\r\n                    />\r\n                    <EditOutlined\r\n                        style={{ fontSize: '18px', cursor: 'pointer' }}\r\n                        onClick={() => {\r\n                            setOpenUpdate(true); // Ouvrir la modal de mise à jour\r\n                            setId(record._id); // Définir l'ID de l'élément à mettre à jour\r\n                        }}\r\n                    />\r\n                    <DeleteOutlined\r\n                        style={{ fontSize: '18px', cursor: 'pointer' }}\r\n                        onClick={() => showDeleteConfirm(record._id)} // Fonction de suppression\r\n                    />\r\n                </div>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <div>\r\n\r\n\r\n            {/* Conteneur du bouton */}\r\n            <div style={{ marginBottom: \"20px\", textAlign: \"right\" }}>\r\n\r\n                {/* Bouton pour ajouter une livraison */}\r\n                <Button\r\n                    type=\"primary\"\r\n                    onClick={() => setOpen(true)}\r\n                    style={{\r\n                        padding: \"10px 20px\",\r\n                        fontSize: \"15px\",\r\n                        height: \"40px\",\r\n                        width: \"160px\",\r\n                        backgroundColor: \"rgb(189, 37, 27)\",\r\n                        borderColor: \"rgb(189, 37, 27)\"\r\n                    }}\r\n                >\r\n                    Add Delivery\r\n                </Button>\r\n            </div>\r\n\r\n            {/* Bouton conditionnel pour les lignes sélectionnées */}\r\n            <div style={{ marginBottom: \"20px\", textAlign: \"left\" }}>\r\n\r\n                {selectedRowKeys.length > 0 && (\r\n                    <Button\r\n                        type=\"primary\"\r\n                        onClick={handleActionOnSelected}\r\n                        style={{\r\n                            padding: \"10px 20px\",\r\n                            fontSize: \"15px\",\r\n                            height: \"40px\",\r\n                            width: \"auto\",\r\n                            backgroundColor: \"rgb(189, 37, 27)\",\r\n                            borderColor: \"rgb(189, 37, 27)\"\r\n                        }}\r\n                    >\r\n                        Update Statut  ({selectedRowKeys.length})\r\n                    </Button>\r\n                )}\r\n            </div>\r\n\r\n\r\n\r\n\r\n            <Table\r\n                rowSelection={{\r\n                    type: \"checkbox\", // Type de sélection (case à cocher)\r\n                    ...rowSelection,\r\n                }}\r\n                dataSource={data}\r\n                columns={columns}\r\n                rowKey=\"_id\"\r\n                loading={isLoading}\r\n                pagination={{ pageSize: 5 }}\r\n            />\r\n\r\n            <AddDilevery open={open} setOpen={setOpen} />\r\n            <UpdateDelivery openUpdate={openUpdate} setOpenUpdate={setOpenUpdate} id={id} />\r\n\r\n            <Modal\r\n                open={openView}\r\n                onCancel={() => setOpenView(false)}\r\n                footer={null} // Pas de boutons dans le footer\r\n            >\r\n                {selectedDelivery && (\r\n                    <div>\r\n                        <p><strong>Client:</strong> {selectedDelivery.client_name}</p>\r\n                        <p><strong>Adresse:</strong> {selectedDelivery.delivery_address}</p>\r\n                        <p><strong>Gouvernement:</strong> {selectedDelivery.government}</p>\r\n                        <p><strong>Rue:</strong> {selectedDelivery.street}</p>\r\n                        <p><strong>Téléphone:</strong> {selectedDelivery.phone1}</p>\r\n                        <p><strong>Statut:</strong> {selectedDelivery.status}</p>\r\n                    </div>\r\n                )}\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Delivery;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}