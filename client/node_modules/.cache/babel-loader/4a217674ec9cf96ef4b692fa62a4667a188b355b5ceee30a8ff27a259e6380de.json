{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Desktop\\\\LIVRAISON\\\\client\\\\src\\\\pages\\\\dilevery\\\\listDilevery.jsx\",\n  _s = $RefreshSig$();\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport React, { useState } from 'react';\nimport { EditOutlined, DeleteOutlined, EyeOutlined } from '@ant-design/icons';\nimport { Table, message, Button, Modal, Select, Tag, Space } from 'antd';\nimport { axiosInstance } from '../../lib/axios';\nimport AddDilevery from './addDilevery';\nimport UpdateDelivery from './updateDelivery';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\nconst Delivery = () => {\n  _s();\n  const [open, setOpen] = useState(false);\n  const [openUpdate, setOpenUpdate] = useState(false);\n  const [openView, setOpenView] = useState(false);\n  const [id, setId] = useState();\n  const [selectedDelivery, setSelectedDelivery] = useState(null);\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]); // État pour stocker les clés des lignes sélectionnées\n\n  const queryClient = useQueryClient();\n\n  // Récupérer les données des livraisons\n  const {\n    data,\n    isLoading\n  } = useQuery({\n    queryKey: [\"delivery\"],\n    queryFn: async () => {\n      const response = await axiosInstance.get(\"/delivry\");\n      return response.data;\n    },\n    onError: error => {\n      message.error(`Erreur lors du chargement des livraisons: ${error.message}`);\n    }\n  });\n\n  // Mutation pour supprimer une livraison\n  const {\n    mutate: deleteDelivery\n  } = useMutation({\n    mutationFn: async id => {\n      const response = await axiosInstance.delete(`/delivry/${id}`);\n      return response.data;\n    },\n    onSuccess: () => {\n      message.success(\"Livraison supprimée avec succès\");\n      queryClient.invalidateQueries([\"delivery\"]); // Rafraîchir les données\n    },\n    onError: error => {\n      message.error(`Erreur lors de la suppression: ${error.message}`);\n    }\n  });\n\n  // Fonction pour confirmer la suppression\n  const showDeleteConfirm = id => {\n    Modal.confirm({\n      title: \"Êtes-vous sûr de vouloir supprimer cette livraison ?\",\n      okText: \"Oui\",\n      okType: \"danger\",\n      cancelText: \"Non\",\n      onOk() {\n        deleteDelivery(id); // Appeler la mutation de suppression\n      }\n    });\n  };\n\n  // Fonction pour afficher les détails d'une livraison\n  const handleViewDelivery = record => {\n    setSelectedDelivery(record); // Stocker les données de la livraison sélectionnée\n    setOpenView(true); // Ouvrir la modal\n  };\n  // Mutation pour mettre à jour le statut\n  const {\n    mutate: updateStatus\n  } = useMutation({\n    mutationFn: async ({\n      id,\n      status\n    }) => {\n      const response = await axiosInstance.patch(`/delivry/${id}/status`, {\n        status\n      });\n      return response.data;\n    },\n    onSuccess: () => {\n      message.success(\"Statut mis à jour avec succès\");\n      queryClient.invalidateQueries([\"delivery\"]); // Rafraîchir les données\n    },\n    onError: error => {\n      message.error(`Erreur lors de la mise à jour du statut: ${error.message}`);\n    }\n  });\n  // Fonction pour gérer le changement de statut\n  {/* \r\n   const handleStatusChange = (value, record) => {\r\n      updateStatus({ id: record._id, status: value });\r\n   };\r\n    */}\n  // Mutation pour mettre à jour le statut des livraisons sélectionnées\n  const {\n    mutate: UpdateDelivryStatusAttente\n  } = useMutation({\n    mutationFn: async _id => {\n      const response = await axiosInstance.patch(\"/delivry/updateDelivryStatusAttente\", {\n        _id\n      });\n      return response.data;\n    },\n    onSuccess: () => {\n      message.success(\"Statut mis à jour avec succès\");\n      queryClient.invalidateQueries([\"delivery\"]); // Rafraîchir les données\n    },\n    onError: error => {\n      message.error(`Erreur lors de la mise à jour du statut: ${error.message}`);\n    }\n  });\n\n  // Fonction pour gérer l'action sur les lignes sélectionnées\n  const handleActionOnSelected = () => {\n    console.log(\"Lignes sélectionnées :\", selectedRowKeys);\n    message.info(`Vous avez sélectionné ${selectedRowKeys.length} livraison(s).`);\n    // Ajoutez ici la logique pour traiter les lignes sélectionnées\n    // Vérifier si toutes les livraisons sélectionnées sont en \"EnAttente\"\n    const selectedDeliveries = data.filter(delivery => selectedRowKeys.includes(delivery._id));\n    const allPending = selectedDeliveries.every(delivery => delivery.status === \"EnAttente\");\n    if (!allPending) {\n      message.error(\"Certaines livraisons ne sont pas en statut 'EnAttente'.\");\n      return;\n    }\n\n    // Mettre à jour le statut des livraisons sélectionnées\n    UpdateDelivryStatusAttente(selectedRowKeys);\n  };\n  // Configuration de la sélection des lignes\n  const rowSelection = {\n    selectedRowKeys,\n    onChange: selectedKeys => {\n      setSelectedRowKeys(selectedKeys); // Mettre à jour les clés des lignes sélectionnées\n    }\n  };\n  // Fonction pour afficher le statut avec un style personnalisé\n  const renderStatus = status => {\n    let color = 'default';\n    switch (status) {\n      case 'EnAttente':\n        color = 'orange';\n        break;\n      case 'EnDepot':\n        color = 'blue';\n        break;\n      case 'EnCours':\n        color = 'green';\n        break;\n      case 'RetourE':\n        color = 'red';\n        break;\n      case 'RetourD':\n        color = 'cyan';\n        break;\n      case 'Livré':\n        color = 'purple';\n        break;\n      default:\n        color = 'gray';\n    }\n    return /*#__PURE__*/_jsxDEV(Tag, {\n      color: color,\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 16\n    }, this);\n  };\n  const columns = [{\n    title: 'Code',\n    dataIndex: 'code',\n    key: 'code'\n  }, {\n    title: 'Client',\n    dataIndex: 'client_name',\n    key: 'client_name'\n  }, {\n    title: 'Adresse',\n    dataIndex: 'delivery_address',\n    key: 'delivery_address'\n  }, {\n    title: 'Gouvernement',\n    dataIndex: 'government',\n    key: 'government'\n  }, {\n    title: 'Téléphone',\n    dataIndex: 'phone1',\n    key: 'phone1'\n  }, {\n    title: 'Rue',\n    dataIndex: 'street',\n    key: 'street'\n  }, {\n    title: 'Statut',\n    dataIndex: 'status',\n    key: 'status',\n    render: text => renderStatus(text)\n  }, {/*    render: (text, record) => (\r\n             <Select\r\n                 defaultValue={text}\r\n                 style={{ width: 110 }}\r\n                 onChange={(value) => handleStatusChange(value, record)}\r\n             >\r\n                 </Select>\r\n         ), */}, {\n    title: 'Actions',\n    key: 'actions',\n    render: (text, record) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(EyeOutlined, {\n        style: {\n          fontSize: '18px',\n          cursor: 'pointer'\n        },\n        onClick: () => handleViewDelivery(record) // Fonction d'affichage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(EditOutlined, {\n        style: {\n          fontSize: '18px',\n          cursor: 'pointer'\n        },\n        onClick: () => {\n          setOpenUpdate(true); // Ouvrir la modal de mise à jour\n          setId(record._id); // Définir l'ID de l'élément à mettre à jour\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(DeleteOutlined, {\n        style: {\n          fontSize: '18px',\n          cursor: 'pointer'\n        },\n        onClick: () => showDeleteConfirm(record._id) // Fonction de suppression\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 17\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\",\n        textAlign: \"right\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: () => setOpen(true),\n        style: {\n          padding: \"10px 20px\",\n          fontSize: \"15px\",\n          height: \"40px\",\n          width: \"160px\",\n          backgroundColor: \"rgb(189, 37, 27)\",\n          borderColor: \"rgb(189, 37, 27)\"\n        },\n        children: \"Add Delivery\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\",\n        textAlign: \"left\"\n      },\n      children: selectedRowKeys.length > 0 && /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: handleActionOnSelected,\n        style: {\n          padding: \"10px 20px\",\n          fontSize: \"15px\",\n          height: \"40px\",\n          width: \"auto\",\n          backgroundColor: \"rgb(189, 37, 27)\",\n          borderColor: \"rgb(189, 37, 27)\"\n        },\n        children: [\"Update Statut  (\", selectedRowKeys.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      rowSelection: {\n        type: \"checkbox\",\n        // Type de sélection (case à cocher)\n        ...rowSelection\n      },\n      dataSource: data,\n      columns: columns,\n      rowKey: \"_id\",\n      loading: isLoading,\n      pagination: {\n        pageSize: 5\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddDilevery, {\n      open: open,\n      setOpen: setOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(UpdateDelivery, {\n      openUpdate: openUpdate,\n      setOpenUpdate: setOpenUpdate,\n      id: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: openView,\n      onCancel: () => setOpenView(false),\n      footer: null // Pas de boutons dans le footer\n      ,\n      children: selectedDelivery && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Client:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 28\n          }, this), \" \", selectedDelivery.client_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Adresse:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 28\n          }, this), \" \", selectedDelivery.delivery_address]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Gouvernement:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 28\n          }, this), \" \", selectedDelivery.government]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Rue:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 28\n          }, this), \" \", selectedDelivery.street]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"T\\xE9l\\xE9phone:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 28\n          }, this), \" \", selectedDelivery.phone1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Statut:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 28\n          }, this), \" \", selectedDelivery.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 237,\n    columnNumber: 9\n  }, this);\n};\n_s(Delivery, \"QLLUF3DXpVSaoxPzZkNOYWVIHY0=\", false, function () {\n  return [useQueryClient, useQuery, useMutation, useMutation, useMutation];\n});\n_c = Delivery;\nexport default Delivery;\nvar _c;\n$RefreshReg$(_c, \"Delivery\");","map":{"version":3,"names":["useQuery","useMutation","useQueryClient","React","useState","EditOutlined","DeleteOutlined","EyeOutlined","Table","message","Button","Modal","Select","Tag","Space","axiosInstance","AddDilevery","UpdateDelivery","jsxDEV","_jsxDEV","Option","Delivery","_s","open","setOpen","openUpdate","setOpenUpdate","openView","setOpenView","id","setId","selectedDelivery","setSelectedDelivery","selectedRowKeys","setSelectedRowKeys","queryClient","data","isLoading","queryKey","queryFn","response","get","onError","error","mutate","deleteDelivery","mutationFn","delete","onSuccess","success","invalidateQueries","showDeleteConfirm","confirm","title","okText","okType","cancelText","onOk","handleViewDelivery","record","updateStatus","status","patch","UpdateDelivryStatusAttente","_id","handleActionOnSelected","console","log","info","length","selectedDeliveries","filter","delivery","includes","allPending","every","rowSelection","onChange","selectedKeys","renderStatus","color","children","fileName","_jsxFileName","lineNumber","columnNumber","columns","dataIndex","key","render","text","style","display","gap","fontSize","cursor","onClick","marginBottom","textAlign","type","padding","height","width","backgroundColor","borderColor","dataSource","rowKey","loading","pagination","pageSize","onCancel","footer","client_name","delivery_address","government","street","phone1","_c","$RefreshReg$"],"sources":["C:/Users/Hp/Desktop/LIVRAISON/client/src/pages/dilevery/listDilevery.jsx"],"sourcesContent":["import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\r\nimport React, { useState } from 'react';\r\nimport { EditOutlined, DeleteOutlined, EyeOutlined } from '@ant-design/icons';\r\nimport { Table, message, Button, Modal, Select, Tag, Space } from 'antd';\r\nimport { axiosInstance } from '../../lib/axios';\r\nimport AddDilevery from './addDilevery';\r\nimport UpdateDelivery from './updateDelivery';\r\nconst { Option } = Select;\r\nconst Delivery = () => {\r\n    const [open, setOpen] = useState(false);\r\n    const [openUpdate, setOpenUpdate] = useState(false);\r\n    const [openView, setOpenView] = useState(false);\r\n    const [id, setId] = useState();\r\n    const [selectedDelivery, setSelectedDelivery] = useState(null);\r\n    const [selectedRowKeys, setSelectedRowKeys] = useState([]); // État pour stocker les clés des lignes sélectionnées\r\n\r\n    const queryClient = useQueryClient();\r\n\r\n    // Récupérer les données des livraisons\r\n    const { data, isLoading } = useQuery({\r\n        queryKey: [\"delivery\"],\r\n        queryFn: async () => {\r\n            const response = await axiosInstance.get(\"/delivry\");\r\n            return response.data;\r\n        },\r\n        onError: (error) => {\r\n            message.error(`Erreur lors du chargement des livraisons: ${error.message}`);\r\n        },\r\n    });\r\n\r\n    // Mutation pour supprimer une livraison\r\n    const { mutate: deleteDelivery } = useMutation({\r\n        mutationFn: async (id) => {\r\n            const response = await axiosInstance.delete(`/delivry/${id}`);\r\n            return response.data;\r\n        },\r\n        onSuccess: () => {\r\n            message.success(\"Livraison supprimée avec succès\");\r\n            queryClient.invalidateQueries([\"delivery\"]); // Rafraîchir les données\r\n        },\r\n        onError: (error) => {\r\n            message.error(`Erreur lors de la suppression: ${error.message}`);\r\n        },\r\n    });\r\n\r\n    // Fonction pour confirmer la suppression\r\n    const showDeleteConfirm = (id) => {\r\n        Modal.confirm({\r\n            title: \"Êtes-vous sûr de vouloir supprimer cette livraison ?\",\r\n            okText: \"Oui\",\r\n            okType: \"danger\",\r\n            cancelText: \"Non\",\r\n            onOk() {\r\n                deleteDelivery(id); // Appeler la mutation de suppression\r\n            },\r\n        });\r\n    };\r\n\r\n    // Fonction pour afficher les détails d'une livraison\r\n    const handleViewDelivery = (record) => {\r\n        setSelectedDelivery(record); // Stocker les données de la livraison sélectionnée\r\n        setOpenView(true); // Ouvrir la modal\r\n    };\r\n    // Mutation pour mettre à jour le statut\r\n    const { mutate: updateStatus } = useMutation({\r\n        mutationFn: async ({ id, status }) => {\r\n            const response = await axiosInstance.patch(`/delivry/${id}/status`, { status });\r\n\r\n            return response.data;\r\n        },\r\n        onSuccess: () => {\r\n            message.success(\"Statut mis à jour avec succès\");\r\n            queryClient.invalidateQueries([\"delivery\"]); // Rafraîchir les données\r\n        },\r\n        onError: (error) => {\r\n            message.error(`Erreur lors de la mise à jour du statut: ${error.message}`);\r\n        },\r\n    });\r\n    // Fonction pour gérer le changement de statut\r\n    {/* \r\n    const handleStatusChange = (value, record) => {\r\n        updateStatus({ id: record._id, status: value });\r\n    };\r\n\r\n    */}\r\n    // Mutation pour mettre à jour le statut des livraisons sélectionnées\r\n    const { mutate: UpdateDelivryStatusAttente } = useMutation({\r\n        mutationFn: async (_id) => {\r\n            const response = await axiosInstance.patch(\"/delivry/updateDelivryStatusAttente\", { _id });\r\n            return response.data;\r\n        },\r\n        onSuccess: () => {\r\n            message.success(\"Statut mis à jour avec succès\");\r\n            queryClient.invalidateQueries([\"delivery\"]); // Rafraîchir les données\r\n        },\r\n        onError: (error) => {\r\n            message.error(`Erreur lors de la mise à jour du statut: ${error.message}`);\r\n        },\r\n    });\r\n\r\n    // Fonction pour gérer l'action sur les lignes sélectionnées\r\n    const handleActionOnSelected = () => {\r\n        console.log(\"Lignes sélectionnées :\", selectedRowKeys);\r\n        message.info(`Vous avez sélectionné ${selectedRowKeys.length} livraison(s).`);\r\n        // Ajoutez ici la logique pour traiter les lignes sélectionnées\r\n        // Vérifier si toutes les livraisons sélectionnées sont en \"EnAttente\"\r\n        const selectedDeliveries = data.filter((delivery) =>\r\n            selectedRowKeys.includes(delivery._id)\r\n        );\r\n\r\n        const allPending = selectedDeliveries.every(\r\n            (delivery) => delivery.status === \"EnAttente\"\r\n        );\r\n\r\n        if (!allPending) {\r\n            message.error(\"Certaines livraisons ne sont pas en statut 'EnAttente'.\");\r\n            return;\r\n        }\r\n\r\n        // Mettre à jour le statut des livraisons sélectionnées\r\n        UpdateDelivryStatusAttente(selectedRowKeys);\r\n    };\r\n    // Configuration de la sélection des lignes\r\n    const rowSelection = {\r\n        selectedRowKeys,\r\n        onChange: (selectedKeys) => {\r\n            setSelectedRowKeys(selectedKeys); // Mettre à jour les clés des lignes sélectionnées\r\n        },\r\n    };\r\n    // Fonction pour afficher le statut avec un style personnalisé\r\n    const renderStatus = (status) => {\r\n        let color = 'default';\r\n        switch (status) {\r\n            case 'EnAttente':\r\n                color = 'orange';\r\n                break;\r\n            case 'EnDepot':\r\n                color = 'blue';\r\n                break;\r\n            case 'EnCours':\r\n                color = 'green';\r\n                break;\r\n            case 'RetourE':\r\n                color = 'red';\r\n                break;\r\n            case 'RetourD':\r\n                color = 'cyan';\r\n                break;\r\n            case 'Livré':\r\n                color = 'purple';\r\n                break;\r\n            default:\r\n                color = 'gray';\r\n        }\r\n        return <Tag color={color}>{status}</Tag>;\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Code',\r\n            dataIndex: 'code',\r\n            key: 'code',\r\n        },\r\n        {\r\n            title: 'Client',\r\n            dataIndex: 'client_name',\r\n            key: 'client_name',\r\n        },\r\n        {\r\n            title: 'Adresse',\r\n            dataIndex: 'delivery_address',\r\n            key: 'delivery_address',\r\n        },\r\n        {\r\n            title: 'Gouvernement',\r\n            dataIndex: 'government',\r\n            key: 'government',\r\n        },\r\n        {\r\n            title: 'Téléphone',\r\n            dataIndex: 'phone1',\r\n            key: 'phone1',\r\n        },\r\n        {\r\n            title: 'Rue',\r\n            dataIndex: 'street',\r\n            key: 'street',\r\n        },\r\n        {\r\n            title: 'Statut',\r\n            dataIndex: 'status',\r\n            key: 'status',\r\n            render: (text) => renderStatus(text),\r\n\r\n        },\r\n        {/*    render: (text, record) => (\r\n                <Select\r\n                    defaultValue={text}\r\n                    style={{ width: 110 }}\r\n                    onChange={(value) => handleStatusChange(value, record)}\r\n                >\r\n\r\n\r\n                </Select>\r\n            ), */},\r\n        {\r\n            title: 'Actions',\r\n            key: 'actions',\r\n            render: (text, record) => (\r\n                <div style={{ display: 'flex', gap: '10px' }}>\r\n                    <EyeOutlined\r\n                        style={{ fontSize: '18px', cursor: 'pointer' }}\r\n                        onClick={() => handleViewDelivery(record)} // Fonction d'affichage\r\n                    />\r\n                    <EditOutlined\r\n                        style={{ fontSize: '18px', cursor: 'pointer' }}\r\n                        onClick={() => {\r\n                            setOpenUpdate(true); // Ouvrir la modal de mise à jour\r\n                            setId(record._id); // Définir l'ID de l'élément à mettre à jour\r\n                        }}\r\n                    />\r\n                    <DeleteOutlined\r\n                        style={{ fontSize: '18px', cursor: 'pointer' }}\r\n                        onClick={() => showDeleteConfirm(record._id)} // Fonction de suppression\r\n                    />\r\n                </div>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <div>\r\n\r\n\r\n            {/* Conteneur du bouton */}\r\n            <div style={{ marginBottom: \"20px\", textAlign: \"right\" }}>\r\n\r\n                {/* Bouton pour ajouter une livraison */}\r\n                <Button\r\n                    type=\"primary\"\r\n                    onClick={() => setOpen(true)}\r\n                    style={{\r\n                        padding: \"10px 20px\",\r\n                        fontSize: \"15px\",\r\n                        height: \"40px\",\r\n                        width: \"160px\",\r\n                        backgroundColor: \"rgb(189, 37, 27)\",\r\n                        borderColor: \"rgb(189, 37, 27)\"\r\n                    }}\r\n                >\r\n                    Add Delivery\r\n                </Button>\r\n            </div>\r\n\r\n            {/* Bouton conditionnel pour les lignes sélectionnées */}\r\n            <div style={{ marginBottom: \"20px\", textAlign: \"left\" }}>\r\n\r\n                {selectedRowKeys.length > 0 && (\r\n                    <Button\r\n                        type=\"primary\"\r\n                        onClick={handleActionOnSelected}\r\n                        style={{\r\n                            padding: \"10px 20px\",\r\n                            fontSize: \"15px\",\r\n                            height: \"40px\",\r\n                            width: \"auto\",\r\n                            backgroundColor: \"rgb(189, 37, 27)\",\r\n                            borderColor: \"rgb(189, 37, 27)\"\r\n                        }}\r\n                    >\r\n                        Update Statut  ({selectedRowKeys.length})\r\n                    </Button>\r\n                )}\r\n            </div>\r\n\r\n\r\n\r\n\r\n            <Table\r\n                rowSelection={{\r\n                    type: \"checkbox\", // Type de sélection (case à cocher)\r\n                    ...rowSelection,\r\n                }}\r\n                dataSource={data}\r\n                columns={columns}\r\n                rowKey=\"_id\"\r\n                loading={isLoading}\r\n                pagination={{ pageSize: 5 }}\r\n            />\r\n\r\n            <AddDilevery open={open} setOpen={setOpen} />\r\n            <UpdateDelivery openUpdate={openUpdate} setOpenUpdate={setOpenUpdate} id={id} />\r\n\r\n            <Modal\r\n                open={openView}\r\n                onCancel={() => setOpenView(false)}\r\n                footer={null} // Pas de boutons dans le footer\r\n            >\r\n                {selectedDelivery && (\r\n                    <div>\r\n                        <p><strong>Client:</strong> {selectedDelivery.client_name}</p>\r\n                        <p><strong>Adresse:</strong> {selectedDelivery.delivery_address}</p>\r\n                        <p><strong>Gouvernement:</strong> {selectedDelivery.government}</p>\r\n                        <p><strong>Rue:</strong> {selectedDelivery.street}</p>\r\n                        <p><strong>Téléphone:</strong> {selectedDelivery.phone1}</p>\r\n                        <p><strong>Statut:</strong> {selectedDelivery.status}</p>\r\n                    </div>\r\n                )}\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Delivery;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}