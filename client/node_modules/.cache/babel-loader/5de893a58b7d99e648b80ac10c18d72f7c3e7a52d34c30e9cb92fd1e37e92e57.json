{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { path as d3path } from '@antv/vendor/d3-path';\nimport { applyStyle } from '../utils';\nimport { select } from '../../utils/selection';\n/**\n * Draw density shape.\n */\nexport const Density = (options, context) => {\n  const {\n    document\n  } = context;\n  return (points, value, defaults) => {\n    const {\n      transform\n    } = value;\n    const {\n        color: defaultColor\n      } = defaults,\n      rest = __rest(defaults, [\"color\"]);\n    const {\n      color = defaultColor\n    } = value;\n    const [first, ...p] = points;\n    // todo smooth, hollow\n    const path = d3path();\n    path.moveTo(...first);\n    p.forEach(_ref => {\n      let [x, y] = _ref;\n      path.lineTo(x, y);\n    });\n    path.closePath();\n    return select(document.createElement('path', {})).call(applyStyle, rest).style('d', path.toString()).style('stroke', color || defaultColor) // Always has stroke color.\n    .style('fill', color || defaultColor).style('fillOpacity', 0.4).style('transform', transform).call(applyStyle, options).node();\n  };\n};\nDensity.props = {\n  defaultMarker: 'square',\n  defaultEnterAnimation: 'fadeIn',\n  defaultUpdateAnimation: 'morphing',\n  defaultExitAnimation: 'fadeOut'\n};","map":{"version":3,"names":["path","d3path","applyStyle","select","Density","options","context","document","points","value","defaults","transform","color","defaultColor","rest","__rest","first","p","moveTo","forEach","_ref","x","y","lineTo","closePath","createElement","call","style","toString","node","props","defaultMarker","defaultEnterAnimation","defaultUpdateAnimation","defaultExitAnimation"],"sources":["shape/density/density.ts"],"sourcesContent":[null],"mappings":";;;;;;;;AAAA,SAASA,IAAI,IAAIC,MAAM,QAAQ,sBAAsB;AACrD,SAASC,UAAU,QAAQ,UAAU;AACrC,SAASC,MAAM,QAAQ,uBAAuB;AAO9C;;;AAGA,OAAO,MAAMC,OAAO,GAAuBA,CAACC,OAAO,EAAEC,OAAO,KAAI;EAC9D,MAAM;IAAEC;EAAQ,CAAE,GAAGD,OAAO;EAC5B,OAAO,CAACE,MAAM,EAAEC,KAAK,EAAEC,QAAQ,KAAI;IACjC,MAAM;MAAEC;IAAS,CAAE,GAAGF,KAAK;IAC3B,MAAM;QAAEG,KAAK,EAAEC;MAAY,IAAcH,QAAQ;MAAjBI,IAAI,GAAAC,MAAA,CAAKL,QAAQ,EAA3C,SAAgC,CAAW;IACjD,MAAM;MAAEE,KAAK,GAAGC;IAAY,CAAE,GAAGJ,KAAK;IACtC,MAAM,CAACO,KAAK,EAAE,GAAGC,CAAC,CAAC,GAAGT,MAAM;IAE5B;IACA,MAAMR,IAAI,GAAGC,MAAM,EAAE;IACrBD,IAAI,CAACkB,MAAM,CAAC,GAAGF,KAAK,CAAC;IACrBC,CAAC,CAACE,OAAO,CAACC,IAAA,IAAW;MAAA,IAAV,CAACC,CAAC,EAAEC,CAAC,CAAC,GAAAF,IAAA;MACfpB,IAAI,CAACuB,MAAM,CAACF,CAAC,EAAEC,CAAC,CAAC;IACnB,CAAC,CAAC;IACFtB,IAAI,CAACwB,SAAS,EAAE;IAEhB,OAAOrB,MAAM,CAACI,QAAQ,CAACkB,aAAa,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,CAC9CC,IAAI,CAACxB,UAAU,EAAEY,IAAI,CAAC,CACtBa,KAAK,CAAC,GAAG,EAAE3B,IAAI,CAAC4B,QAAQ,EAAE,CAAC,CAC3BD,KAAK,CAAC,QAAQ,EAAEf,KAAK,IAAIC,YAAY,CAAC,CAAC;IAAA,CACvCc,KAAK,CAAC,MAAM,EAAEf,KAAK,IAAIC,YAAY,CAAC,CACpCc,KAAK,CAAC,aAAa,EAAE,GAAG,CAAC,CACzBA,KAAK,CAAC,WAAW,EAAEhB,SAAS,CAAC,CAC7Be,IAAI,CAACxB,UAAU,EAAEG,OAAO,CAAC,CACzBwB,IAAI,EAAE;EACX,CAAC;AACH,CAAC;AAEDzB,OAAO,CAAC0B,KAAK,GAAG;EACdC,aAAa,EAAE,QAAQ;EACvBC,qBAAqB,EAAE,QAAQ;EAC/BC,sBAAsB,EAAE,UAAU;EAClCC,oBAAoB,EAAE;CACvB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}