{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Table,message,Button,Modal,Form,Input,Select,Row,Col}from'antd';import{useMutation}from'@tanstack/react-query';import{axiosInstance}from\"../lib/axios\";import{Avatar}from'antd';import{EditOutlined,DeleteOutlined,EyeOutlined,SearchOutlined}from'@ant-design/icons';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const{confirm}=Modal;const colorPalette=['#d46b08','#ad2102','#a8071a','#3f6600','#876800','#874d00'];const Users=()=>{const[users,setUsers]=useState([]);const[isModalOpen,setIsModalOpen]=useState(false);const[isUpdateModalOpen,setIsUpdateModalOpen]=useState(false);const[selectedUser,setSelectedUser]=useState(null);const[searchTerm,setSearchTerm]=useState(\"\");const[searchRole,setSearchRole]=useState(\"\");// Pour la recherche par rôle\nconst[filteredUsers,setFilteredUsers]=useState([]);// Liste filtrée d'après la recherche\nconst[form]=Form.useForm();// Mutation pour récupérer les utilisateurs\nconst{mutate,isLoading,isError,error}=useMutation({mutationFn:async()=>{const response=await axiosInstance.get('/users');return response.data;},onSuccess:data=>{setUsers(data);message.success(\"Users loaded successfully\");},onError:error=>{message.error(\"Error loading users: \"+error.message);}});useEffect(()=>{mutate();},[mutate]);// Fonction de suppression\nconst handleDeleteUser=async userId=>{try{await axiosInstance.delete(`/users/${userId}`);message.success(\"User deleted successfully\");setUsers(prevUsers=>prevUsers.filter(user=>user._id!==userId));}catch(error){message.error(\"Error deleting user: \"+error.message);}};const showDeleteConfirm=userId=>{confirm({title:'Are you sure you want to delete this user?',okText:'Yes',okType:'danger',cancelText:'No',onOk(){handleDeleteUser(userId);},onCancel(){message.info(\"User deletion cancelled\");}});};// Fonction pour afficher le formulaire de mise à jour\nconst handleUpdateUser=user=>{setSelectedUser(user);// Sauvegarder l'utilisateur sélectionné\nform.setFieldsValue(user);// Pré-remplir le formulaire avec les données de l'utilisateur\nsetIsUpdateModalOpen(true);// Ouvrir le modal de mise à jour\n};// Fonction pour gérer la soumission du formulaire de mise à jour\nconst handleUpdateSubmit=async values=>{try{await axiosInstance.put(`/users/${selectedUser._id}`,values);message.success(\"User updated successfully\");mutate();// Rafraîchir la liste des utilisateurs\nsetIsUpdateModalOpen(false);// Fermer le modal de mise à jour\nform.resetFields();// Réinitialiser les champs du formulaire\n}catch(error){message.error(\"Error updating user: \"+error.message);}};// Fonction pour gérer la soumission du formulaire d'ajout\nconst handleAddUser=async values=>{try{await axiosInstance.post('/user',values);message.success(\"User added successfully\");mutate();// Rafraîchir la liste des utilisateurs\nsetIsModalOpen(false);// Fermer le modal d'ajout\nform.resetFields();// Réinitialiser les champs du formulaire\n}catch(error){message.error(\"Error adding user: \"+error.message);}};// Ajoutez cette fonction dans votre composant Users\nconst checkEmailExists=async username=>{const token=localStorage.getItem('jwt');try{// Vérifier dans la liste des utilisateurs existants\nconst existingUser=users.find(user=>user.username.toLowerCase()===username.toLowerCase());return!!existingUser;}catch(error){console.error(\"Error checking email:\",error);return false;}};// Fonction pour gérer la recherche et filtrer les utilisateurs\nconst handleSearch=value=>{setSearchTerm(value);// Mettre à jour le terme de recherche\nif(!value){setFilteredUsers([]);// Si le champ est vide, afficher tous les utilisateurs\n}else{// Filtrer les utilisateurs dont le nom commence par la recherche\nconst filtered=users.filter(user=>user.name.toLowerCase().startsWith(value.toLowerCase()));setFilteredUsers(filtered);// Appliquer le filtrage\n}};// Fonction pour gérer la recherche et filtrer les utilisateurs par rôle\nconst handleSearchByRole=value=>{setSearchRole(value);// Mettre à jour le terme de recherche par rôle\nif(!value){setFilteredUsers([]);// Si le champ est vide, réinitialiser la liste filtrée à vide\n}else{// Filtrer les utilisateurs dont le rôle correspond à la recherche\nconst filtered=users.filter(user=>user.role.toLowerCase().startsWith(value.toLowerCase()));setFilteredUsers(filtered);// Appliquer le filtrage\n}};const handleViewUser=user=>{Modal.info({title:'User Details',content:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Name:\"}),\" \",user.name]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"UserName:\"}),\" \",user.username]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Role:\"}),\" \",user.role]})]}),onOk(){}});};const columns=[{title:'Name',dataIndex:'name',key:'name',render:(text,record,index)=>{const color=colorPalette[index%colorPalette.length];return/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center'},children:[/*#__PURE__*/_jsx(Avatar,{style:{backgroundColor:color,marginRight:'10px'},children:text.charAt(0).toUpperCase()}),text]});}},{title:'UserName',dataIndex:'username',key:'username'},{title:'Rôle',dataIndex:'role',key:'role'},{title:'Actions',key:'actions',render:(text,record)=>/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:'10px'},children:[/*#__PURE__*/_jsx(EyeOutlined,{style:{fontSize:'18px',cursor:'pointer'},onClick:()=>handleViewUser(record)// Fonction d'affichage\n}),/*#__PURE__*/_jsx(EditOutlined,{style:{fontSize:'18px',cursor:'pointer'},onClick:()=>handleUpdateUser(record)// Fonction de mise à jour\n}),/*#__PURE__*/_jsx(DeleteOutlined,{style:{fontSize:'18px',cursor:'pointer'},onClick:()=>showDeleteConfirm(record._id)// Fonction de suppression\n})]})}];return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Row,{justify:\"space-between\",style:{marginBottom:'20px'},children:[/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(Input.Search,{placeholder:\"Search by name\",size:\"large\",value:searchTerm,onChange:e=>handleSearch(e.target.value)// Recherche par nom\n,style:{width:300}})}),/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(Input.Search,{placeholder:\"Search by role\",size:\"large\",value:searchRole,onChange:e=>handleSearchByRole(e.target.value)// Recherche par rôle\n,style:{width:300}})}),/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(Button,{type:\"primary\",onClick:()=>setIsModalOpen(true),style:{padding:\"10px 20px\",fontSize:\"15px\",height:\"40px\",width:\"160px\",backgroundColor:\"rgb(189, 37, 27)\",borderColor:\"rgb(189, 37, 27)\"},children:\"Add User\"})})]}),/*#__PURE__*/_jsx(Table,{dataSource:filteredUsers.length>0?filteredUsers:users// Utiliser filteredUsers si filtré, sinon users\n,columns:columns,rowKey:\"_id\",loading:isLoading,error:isError?error.message:null,pagination:{pageSize:5}}),/*#__PURE__*/_jsx(Modal,{title:\"Add User\",open:isModalOpen,onCancel:()=>setIsModalOpen(false),footer:null,children:/*#__PURE__*/_jsxs(Form,{form:form,onFinish:handleAddUser,layout:\"vertical\",autoComplete:\"off\",children:[/*#__PURE__*/_jsx(Form.Item,{label:\"Name\",name:\"name\",rules:[{required:true,message:'Please input the name!'}],children:/*#__PURE__*/_jsx(Input,{autoComplete:\"off\"})}),/*#__PURE__*/_jsx(Form.Item,{label:\"Email or Phone\",name:\"username\",rules:[{required:true,message:\"Please enter your email or phone number\"},{pattern:/^([^\\s@]+@[^\\s@]+\\.[^\\s@]+|\\d{8})$/,message:\"Please enter a valid email or an 8-digit phone number\"},{validator:async(_,value)=>{if(value){const exists=await checkEmailExists(value);if(exists){throw new Error('This username is already registered');}}return Promise.resolve();}}],children:/*#__PURE__*/_jsx(Input,{autoComplete:\"off\"})}),/*#__PURE__*/_jsx(Form.Item,{label:\"Password\",name:\"password\",rules:[{required:true,message:'Please input the password!'}],children:/*#__PURE__*/_jsx(Input.Password,{autoComplete:\"new-password\"})}),/*#__PURE__*/_jsx(Form.Item,{label:\"Role\",name:\"role\",rules:[{required:true,message:'Please select a role!'}],children:/*#__PURE__*/_jsxs(Select,{children:[/*#__PURE__*/_jsx(Select.Option,{value:\"EXPEDITEUR\",children:\"EXPEDITEUR\"}),/*#__PURE__*/_jsx(Select.Option,{value:\"ADMIN\",children:\"ADMIN\"}),/*#__PURE__*/_jsx(Select.Option,{value:\"LIVREUR\",children:\"LIVREUR\"})]})}),/*#__PURE__*/_jsx(Form.Item,{children:/*#__PURE__*/_jsx(Button,{type:\"primary\",htmlType:\"submit\",block:true,children:\"Add User\"})})]})}),/*#__PURE__*/_jsx(Modal,{title:\"Update User\",open:isUpdateModalOpen,onCancel:()=>setIsUpdateModalOpen(false),footer:null,children:/*#__PURE__*/_jsxs(Form,{form:form,onFinish:handleUpdateSubmit,layout:\"vertical\",children:[/*#__PURE__*/_jsx(Form.Item,{label:\"Name\",name:\"name\",rules:[{required:true,message:'Please input the name!'}],children:/*#__PURE__*/_jsx(Input,{})}),/*#__PURE__*/_jsx(Form.Item,{label:\"UserName\",name:\"username\",rules:[{required:true,message:\"Please enter your email or phone number\"},{pattern:/^([^\\s@]+@[^\\s@]+\\.[^\\s@]+|\\d{8})$/,message:\"Please enter a valid email or an 8-digit phone number\"}],children:/*#__PURE__*/_jsx(Input,{})}),/*#__PURE__*/_jsx(Form.Item,{label:\"Password\",name:\"password\",rules:[{required:true,message:'Please input the password!'}],children:/*#__PURE__*/_jsx(Input.Password,{autoComplete:\"new-password\"})}),/*#__PURE__*/_jsx(Form.Item,{label:\"Role\",name:\"role\",rules:[{required:true,message:'Please select a role!'}],children:/*#__PURE__*/_jsxs(Select,{children:[/*#__PURE__*/_jsx(Select.Option,{value:\"EXPEDITEUR\",children:\"EXPEDITEUR\"}),/*#__PURE__*/_jsx(Select.Option,{value:\"ADMIN\",children:\"ADMIN\"}),/*#__PURE__*/_jsx(Select.Option,{value:\"LIVREUR\",children:\"LIVREUR\"})]})}),/*#__PURE__*/_jsx(Form.Item,{children:/*#__PURE__*/_jsx(Button,{type:\"primary\",htmlType:\"submit\",block:true,children:\"Update User\"})})]})})]});};export default Users;","map":{"version":3,"names":["React","useState","useEffect","Table","message","Button","Modal","Form","Input","Select","Row","Col","useMutation","axiosInstance","Avatar","EditOutlined","DeleteOutlined","EyeOutlined","SearchOutlined","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","confirm","colorPalette","Users","users","setUsers","isModalOpen","setIsModalOpen","isUpdateModalOpen","setIsUpdateModalOpen","selectedUser","setSelectedUser","searchTerm","setSearchTerm","searchRole","setSearchRole","filteredUsers","setFilteredUsers","form","useForm","mutate","isLoading","isError","error","mutationFn","response","get","data","onSuccess","success","onError","handleDeleteUser","userId","delete","prevUsers","filter","user","_id","showDeleteConfirm","title","okText","okType","cancelText","onOk","onCancel","info","handleUpdateUser","setFieldsValue","handleUpdateSubmit","values","put","resetFields","handleAddUser","post","checkEmailExists","username","token","localStorage","getItem","existingUser","find","toLowerCase","console","handleSearch","value","filtered","name","startsWith","handleSearchByRole","role","handleViewUser","content","children","columns","dataIndex","key","render","text","record","index","color","length","style","display","alignItems","backgroundColor","marginRight","charAt","toUpperCase","gap","fontSize","cursor","onClick","justify","marginBottom","Search","placeholder","size","onChange","e","target","width","type","padding","height","borderColor","dataSource","rowKey","loading","pagination","pageSize","open","footer","onFinish","layout","autoComplete","Item","label","rules","required","pattern","validator","_","exists","Error","Promise","resolve","Password","Option","htmlType","block"],"sources":["C:/Users/Hp/Desktop/LIVRAISON/client/src/pages/users.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Table, message, Button, Modal, Form, Input, Select, Row, Col } from 'antd';\r\nimport { useMutation } from '@tanstack/react-query';\r\nimport { axiosInstance } from \"../lib/axios\";\r\nimport { Avatar } from 'antd';\r\nimport { EditOutlined, DeleteOutlined, EyeOutlined, SearchOutlined } from '@ant-design/icons';\r\n\r\nconst { confirm } = Modal;\r\nconst colorPalette = ['#d46b08', '#ad2102', '#a8071a', '#3f6600', '#876800', '#874d00'];\r\n\r\nconst Users = () => {\r\n    const [users, setUsers] = useState([]);\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const [isUpdateModalOpen, setIsUpdateModalOpen] = useState(false);\r\n    const [selectedUser, setSelectedUser] = useState(null);\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const [searchRole, setSearchRole] = useState(\"\"); // Pour la recherche par rôle\r\n    const [filteredUsers, setFilteredUsers] = useState([]); // Liste filtrée d'après la recherche\r\n    const [form] = Form.useForm();\r\n\r\n    // Mutation pour récupérer les utilisateurs\r\n    const { mutate, isLoading, isError, error } = useMutation({\r\n        mutationFn: async () => {\r\n            const response = await axiosInstance.get('/users');\r\n            return response.data;\r\n        },\r\n        onSuccess: (data) => {\r\n            setUsers(data);\r\n            message.success(\"Users loaded successfully\");\r\n        },\r\n        onError: (error) => {\r\n            message.error(\"Error loading users: \" + error.message);\r\n        },\r\n    });\r\n\r\n    useEffect(() => {\r\n        mutate();\r\n    }, [mutate]);\r\n\r\n    // Fonction de suppression\r\n    const handleDeleteUser = async (userId) => {\r\n\r\n        try {\r\n            await axiosInstance.delete(`/users/${userId}`);\r\n            message.success(\"User deleted successfully\");\r\n\r\n            setUsers((prevUsers) => prevUsers.filter((user) => user._id !== userId));\r\n        } catch (error) {\r\n            message.error(\"Error deleting user: \" + error.message);\r\n        }\r\n    };\r\n\r\n    const showDeleteConfirm = (userId) => {\r\n        confirm({\r\n            title: 'Are you sure you want to delete this user?',\r\n            okText: 'Yes',\r\n            okType: 'danger',\r\n            cancelText: 'No',\r\n            onOk() {\r\n                handleDeleteUser(userId);\r\n            },\r\n            onCancel() {\r\n                message.info(\"User deletion cancelled\");\r\n            },\r\n        });\r\n    };\r\n\r\n    // Fonction pour afficher le formulaire de mise à jour\r\n    const handleUpdateUser = (user) => {\r\n        setSelectedUser(user); // Sauvegarder l'utilisateur sélectionné\r\n        form.setFieldsValue(user); // Pré-remplir le formulaire avec les données de l'utilisateur\r\n        setIsUpdateModalOpen(true); // Ouvrir le modal de mise à jour\r\n    };\r\n\r\n    // Fonction pour gérer la soumission du formulaire de mise à jour\r\n    const handleUpdateSubmit = async (values) => {\r\n\r\n\r\n        try {\r\n            await axiosInstance.put(`/users/${selectedUser._id}`, values);\r\n            message.success(\"User updated successfully\");\r\n            mutate(); // Rafraîchir la liste des utilisateurs\r\n            setIsUpdateModalOpen(false); // Fermer le modal de mise à jour\r\n            form.resetFields(); // Réinitialiser les champs du formulaire\r\n        } catch (error) {\r\n            message.error(\"Error updating user: \" + error.message);\r\n        }\r\n    };\r\n\r\n    // Fonction pour gérer la soumission du formulaire d'ajout\r\n    const handleAddUser = async (values) => {\r\n\r\n\r\n\r\n        try {\r\n            await axiosInstance.post('/user', values);\r\n            message.success(\"User added successfully\");\r\n            mutate(); // Rafraîchir la liste des utilisateurs\r\n            setIsModalOpen(false); // Fermer le modal d'ajout\r\n            form.resetFields(); // Réinitialiser les champs du formulaire\r\n        } catch (error) {\r\n            message.error(\"Error adding user: \" + error.message);\r\n        }\r\n    };\r\n    // Ajoutez cette fonction dans votre composant Users\r\n    const checkEmailExists = async (username) => {\r\n        const token = localStorage.getItem('jwt');\r\n        try {\r\n            // Vérifier dans la liste des utilisateurs existants\r\n            const existingUser = users.find(user => user.username.toLowerCase() === username.toLowerCase());\r\n            return !!existingUser;\r\n        } catch (error) {\r\n            console.error(\"Error checking email:\", error);\r\n            return false;\r\n        }\r\n    };\r\n\r\n\r\n    // Fonction pour gérer la recherche et filtrer les utilisateurs\r\n    const handleSearch = (value) => {\r\n        setSearchTerm(value); // Mettre à jour le terme de recherche\r\n        if (!value) {\r\n            setFilteredUsers([]); // Si le champ est vide, afficher tous les utilisateurs\r\n        } else {\r\n            // Filtrer les utilisateurs dont le nom commence par la recherche\r\n            const filtered = users.filter(user => user.name.toLowerCase().startsWith(value.toLowerCase()));\r\n            setFilteredUsers(filtered); // Appliquer le filtrage\r\n        }\r\n    };\r\n    // Fonction pour gérer la recherche et filtrer les utilisateurs par rôle\r\n    const handleSearchByRole = (value) => {\r\n        setSearchRole(value); // Mettre à jour le terme de recherche par rôle\r\n        if (!value) {\r\n            setFilteredUsers([]); // Si le champ est vide, réinitialiser la liste filtrée à vide\r\n        } else {\r\n            // Filtrer les utilisateurs dont le rôle correspond à la recherche\r\n            const filtered = users.filter(user => user.role.toLowerCase().startsWith(value.toLowerCase()));\r\n            setFilteredUsers(filtered); // Appliquer le filtrage\r\n        }\r\n    };\r\n\r\n    const handleViewUser = (user) => {\r\n        Modal.info({\r\n            title: 'User Details',\r\n            content: (\r\n                <div>\r\n                    <p><strong>Name:</strong> {user.name}</p>\r\n                    <p><strong>UserName:</strong> {user.username}</p>\r\n                    <p><strong>Role:</strong> {user.role}</p>\r\n                </div>\r\n            ),\r\n            onOk() { },\r\n        });\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n            render: (text, record, index) => {\r\n                const color = colorPalette[index % colorPalette.length];\r\n                return (\r\n                    <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                        <Avatar style={{ backgroundColor: color, marginRight: '10px' }}>\r\n                            {text.charAt(0).toUpperCase()}\r\n                        </Avatar>\r\n                        {text}\r\n                    </div>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            title: 'UserName',\r\n            dataIndex: 'username',\r\n            key: 'username',\r\n        },\r\n        {\r\n            title: 'Rôle',\r\n            dataIndex: 'role',\r\n            key: 'role',\r\n        },\r\n        {\r\n            title: 'Actions',\r\n            key: 'actions',\r\n            render: (text, record) => (\r\n                <div style={{ display: 'flex', gap: '10px' }}>\r\n                    <EyeOutlined\r\n                        style={{ fontSize: '18px', cursor: 'pointer' }}\r\n                        onClick={() => handleViewUser(record)} // Fonction d'affichage\r\n                    />\r\n                    <EditOutlined\r\n                        style={{ fontSize: '18px', cursor: 'pointer' }}\r\n                        onClick={() => handleUpdateUser(record)} // Fonction de mise à jour\r\n                    />\r\n                    <DeleteOutlined\r\n                        style={{ fontSize: '18px', cursor: 'pointer' }}\r\n                        onClick={() => showDeleteConfirm(record._id)} // Fonction de suppression\r\n                    />\r\n                </div>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <Row justify=\"space-between\" style={{ marginBottom: '20px' }}>\r\n                <Col>\r\n\r\n                    <Input.Search\r\n                        placeholder=\"Search by name\"\r\n                        size=\"large\"\r\n                        value={searchTerm}\r\n                        onChange={(e) => handleSearch(e.target.value)} // Recherche par nom\r\n                        style={{ width: 300 }}\r\n                    />\r\n                </Col>\r\n                <Col>\r\n                    <Input.Search\r\n                        placeholder=\"Search by role\"\r\n                        size=\"large\"\r\n                        value={searchRole}\r\n                        onChange={(e) => handleSearchByRole(e.target.value)} // Recherche par rôle\r\n                        style={{ width: 300 }}\r\n                    />\r\n                </Col>\r\n                <Col>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        onClick={() => setIsModalOpen(true)}\r\n                        style={{ padding: \"10px 20px\", fontSize: \"15px\", height: \"40px\", width: \"160px\", backgroundColor: \"rgb(189, 37, 27)\", borderColor: \"rgb(189, 37, 27)\" }}\r\n                    >\r\n                        Add User\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Table\r\n                dataSource={filteredUsers.length > 0 ? filteredUsers : users} // Utiliser filteredUsers si filtré, sinon users\r\n                columns={columns}\r\n                rowKey=\"_id\"\r\n                loading={isLoading}\r\n                error={isError ? error.message : null}\r\n                pagination={{ pageSize: 5 }}\r\n            />\r\n\r\n            {/* Modal pour ajouter un utilisateur */}\r\n            <Modal\r\n                title=\"Add User\"\r\n                open={isModalOpen}\r\n                onCancel={() => setIsModalOpen(false)}\r\n                footer={null}\r\n            >\r\n                <Form form={form} onFinish={handleAddUser} layout=\"vertical\" autoComplete=\"off\">\r\n                    <Form.Item label=\"Name\" name=\"name\" rules={[{ required: true, message: 'Please input the name!' }]}>\r\n                        <Input autoComplete=\"off\" />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label=\"Email or Phone\"\r\n                        name=\"username\"\r\n                        rules={[\r\n                            { required: true, message: \"Please enter your email or phone number\" },\r\n                            {\r\n                                pattern: /^([^\\s@]+@[^\\s@]+\\.[^\\s@]+|\\d{8})$/,\r\n                                message: \"Please enter a valid email or an 8-digit phone number\"\r\n                            },\r\n                            {\r\n                                validator: async (_, value) => {\r\n                                    if (value) {\r\n                                        const exists = await checkEmailExists(value);\r\n                                        if (exists) {\r\n                                            throw new Error('This username is already registered');\r\n                                        }\r\n                                    }\r\n                                    return Promise.resolve();\r\n                                },\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input autoComplete=\"off\" />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item label=\"Password\" name=\"password\" rules={[{ required: true, message: 'Please input the password!' }]}>\r\n                        <Input.Password autoComplete=\"new-password\" />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item label=\"Role\" name=\"role\" rules={[{ required: true, message: 'Please select a role!' }]}>\r\n                        <Select>\r\n                            <Select.Option value=\"EXPEDITEUR\">EXPEDITEUR</Select.Option>\r\n                            <Select.Option value=\"ADMIN\">ADMIN</Select.Option>\r\n                            <Select.Option value=\"LIVREUR\">LIVREUR</Select.Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\" block>\r\n                            Add User\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n\r\n            {/* Modal pour mettre à jour un utilisateur */}\r\n            <Modal\r\n                title=\"Update User\"\r\n                open={isUpdateModalOpen}\r\n                onCancel={() => setIsUpdateModalOpen(false)}\r\n                footer={null}\r\n            >\r\n                <Form form={form} onFinish={handleUpdateSubmit} layout=\"vertical\">\r\n                    <Form.Item label=\"Name\" name=\"name\" rules={[{ required: true, message: 'Please input the name!' }]}>\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item label=\"UserName\" name=\"username\" rules={[\r\n                        { required: true, message: \"Please enter your email or phone number\" },\r\n                        {\r\n                            pattern: /^([^\\s@]+@[^\\s@]+\\.[^\\s@]+|\\d{8})$/,\r\n                            message: \"Please enter a valid email or an 8-digit phone number\"\r\n                        },\r\n\r\n                    ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item label=\"Password\" name=\"password\" rules={[{ required: true, message: 'Please input the password!' }]}>\r\n                        <Input.Password autoComplete=\"new-password\" />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item label=\"Role\" name=\"role\" rules={[{ required: true, message: 'Please select a role!' }]}>\r\n                        <Select>\r\n                            <Select.Option value=\"EXPEDITEUR\">EXPEDITEUR</Select.Option>\r\n                            <Select.Option value=\"ADMIN\">ADMIN</Select.Option>\r\n                            <Select.Option value=\"LIVREUR\">LIVREUR</Select.Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\" block>\r\n                            Update User\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Users;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}