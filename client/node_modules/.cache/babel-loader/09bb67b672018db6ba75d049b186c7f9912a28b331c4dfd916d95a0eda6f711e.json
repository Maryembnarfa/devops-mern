{"ast":null,"code":"import { sort } from '@antv/vendor/d3-array';\n// Optimize antiCollision from: https://github.com/antvis/G2/blob/master/src/geometry/label/layout/pie/util.ts\nexport function dodgeY(labels) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const {\n    labelHeight = 14,\n    height\n  } = options;\n  // Sort labels by y and init boxes (one box for each label)\n  const sortedLabels = sort(labels, d => d.y);\n  const n = sortedLabels.length;\n  const boxes = new Array(n);\n  for (let i = 0; i < n; i++) {\n    const label = sortedLabels[i];\n    const {\n      y\n    } = label;\n    boxes[i] = {\n      y,\n      y1: y + labelHeight,\n      labels: [y]\n    };\n  }\n  // Merge boxes until no overlapping boxes or only one box left.\n  // All the boxes should start higher than 0, but maybe higher than height.\n  let overlap = true;\n  while (overlap) {\n    overlap = false;\n    // Scan backward because boxes maybe deleted.\n    for (let i = boxes.length - 1; i > 0; i--) {\n      const box = boxes[i];\n      const preBox = boxes[i - 1];\n      if (preBox.y1 > box.y) {\n        overlap = true;\n        preBox.labels.push(...box.labels);\n        boxes.splice(i, 1);\n        // Compute new y1 to contain the current box.\n        preBox.y1 += box.y1 - box.y;\n        // Make sure the new box is in the range of [0, height].\n        const newHeight = preBox.y1 - preBox.y;\n        preBox.y1 = Math.max(Math.min(preBox.y1, height), newHeight);\n        preBox.y = preBox.y1 - newHeight;\n      }\n    }\n  }\n  let i = 0;\n  for (const box of boxes) {\n    const {\n      y,\n      labels\n    } = box;\n    let prevY = y - labelHeight;\n    for (const curY of labels) {\n      const label = sortedLabels[i++];\n      const expectedY = prevY + labelHeight;\n      const dy = expectedY - curY;\n      label.connectorPoints[0][1] -= dy;\n      label.y = prevY + labelHeight;\n      prevY += labelHeight;\n    }\n  }\n}\nexport function hideAndDodgeY(unsorted, options) {\n  const labels = sort(unsorted, d => d.y);\n  const {\n    height,\n    labelHeight = 14\n  } = options;\n  const maxCount = Math.ceil(height / labelHeight);\n  if (labels.length <= maxCount) return dodgeY(labels, options);\n  const filtered = [];\n  for (let i = 0; i < labels.length; i++) {\n    // Hide labels out of range.\n    if (i < labels.length - maxCount) {\n      labels[i].opacity = 0;\n      labels[i].connector = false;\n    } else filtered.push(labels[i]);\n  }\n  dodgeY(filtered, options);\n}","map":{"version":3,"names":["sort","dodgeY","labels","options","arguments","length","undefined","labelHeight","height","sortedLabels","d","y","n","boxes","Array","i","label","y1","overlap","box","preBox","push","splice","newHeight","Math","max","min","prevY","curY","expectedY","dy","connectorPoints","hideAndDodgeY","unsorted","maxCount","ceil","filtered","opacity","connector"],"sources":["shape/label/position/utils.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}