{"ast":null,"code":"import { deepMix } from '@antv/util';\n/**\n * Mark functional attribute constant.\n */\nexport const MaybeFunctionAttribute = () => {\n  return (I, mark) => {\n    const {\n      style = {}\n    } = mark;\n    return [I, deepMix({}, mark, {\n      style: Object.assign(Object.assign({}, style), Object.fromEntries(Object.entries(style).filter(_ref => {\n        let [, v] = _ref;\n        return typeof v === 'function';\n      }).map(_ref2 => {\n        let [k, v] = _ref2;\n        return [k, () => v];\n      })))\n    })];\n  };\n};\nMaybeFunctionAttribute.props = {};","map":{"version":3,"names":["deepMix","MaybeFunctionAttribute","I","mark","style","Object","assign","fromEntries","entries","filter","_ref","v","map","_ref2","k","props"],"sources":["transform/maybeFunctionAttribute.ts"],"sourcesContent":[null],"mappings":"AAAA,SAASA,OAAO,QAAQ,YAAY;AAKpC;;;AAGA,OAAO,MAAMC,sBAAsB,GAAsCA,CAAA,KAAK;EAC5E,OAAO,CAACC,CAAC,EAAEC,IAAI,KAAI;IACjB,MAAM;MAAEC,KAAK,GAAG;IAAE,CAAE,GAAGD,IAAI;IAC3B,OAAO,CACLD,CAAC,EACDF,OAAO,CAAC,EAAE,EAAEG,IAAI,EAAE;MAChBC,KAAK,EAAAC,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACAF,KAAK,GACLC,MAAM,CAACE,WAAW,CACnBF,MAAM,CAACG,OAAO,CAACJ,KAAK,CAAC,CAClBK,MAAM,CAACC,IAAA;QAAA,IAAC,GAAGC,CAAC,CAAC,GAAAD,IAAA;QAAA,OAAK,OAAOC,CAAC,KAAK,UAAU;MAAA,EAAC,CAC1CC,GAAG,CAACC,KAAA;QAAA,IAAC,CAACC,CAAC,EAAEH,CAAC,CAAC,GAAAE,KAAA;QAAA,OAAK,CAACC,CAAC,EAAE,MAAMH,CAAC,CAAC;MAAA,EAAC,CACjC;KAEJ,CAAC,CACH;EACH,CAAC;AACH,CAAC;AAEDV,sBAAsB,CAACc,KAAK,GAAG,EAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}