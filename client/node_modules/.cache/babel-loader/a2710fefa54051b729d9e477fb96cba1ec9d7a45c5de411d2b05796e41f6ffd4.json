{"ast":null,"code":"/**\n * 将多个单个参数的函数合成为一个函数，执行顺序为从右到左\n * @param fn 第一个函数\n * @param rest 剩余函数\n * @returns 复合后的函数\n */\nexport function compose(fn) {\n  for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    rest[_key - 1] = arguments[_key];\n  }\n  return rest.reduce((pre, cur) => x => pre(cur(x)), fn);\n}","map":{"version":3,"names":["compose","fn","_len","arguments","length","rest","Array","_key","reduce","pre","cur","x"],"sources":["utils/compose.ts"],"sourcesContent":[null],"mappings":"AAAA;;;;;;AAMA,OAAM,SAAUA,OAAOA,CAAIC,EAAe,EAA0B;EAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAArBC,IAAqB,OAAAC,KAAA,CAAAJ,IAAA,OAAAA,IAAA,WAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;IAArBF,IAAqB,CAAAE,IAAA,QAAAJ,SAAA,CAAAI,IAAA;EAAA;EAClE,OAAOF,IAAI,CAACG,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAMC,CAAC,IAAKF,GAAG,CAACC,GAAG,CAACC,CAAC,CAAC,CAAC,EAAEV,EAAE,CAAC;AAC1D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}