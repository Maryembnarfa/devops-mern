{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Desktop\\\\LIVRAISON\\\\client\\\\src\\\\pages\\\\charts.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useQuery } from '@tanstack/react-query';\nimport { Pie } from '@ant-design/plots';\nimport { axiosInstance } from '../lib/axios';\n\n// Fonction pour récupérer les livraisons\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetchDeliveries = async () => {\n  const response = await axiosInstance.get('/delivry');\n  return response.data;\n};\n\n// Fonction pour formater les données pour le graphique\nconst formatDataForPieChart = deliveries => {\n  if (!deliveries) return [];\n  const statusCounts = {\n    enattente: 0,\n    endepot: 0,\n    encours: 0,\n    retoure: 0,\n    retourd: 0,\n    livré: 0\n  };\n  deliveries.forEach(delivery => {\n    if (delivery.status === 'EnAttente') statusCounts.enattente++;else if (delivery.status === 'EnDepot') statusCounts.endepot++;else if (delivery.status === 'EnCours') statusCounts.encours++;else if (delivery.status === 'RetourE') statusCounts.retoure++;else if (delivery.status === 'RetourD') statusCounts.retourd++;else if (delivery.status === 'Livré') statusCounts.livré++;\n  });\n  return [{\n    type: 'EnAttente',\n    value: statusCounts.enattente\n  }, {\n    type: 'EnDepot',\n    value: statusCounts.endepot\n  },\n  // Correction d'affichage\n  {\n    type: 'EnCours',\n    value: statusCounts.encours\n  }, {\n    type: 'RetourE',\n    value: statusCounts.retoure\n  }, {\n    type: 'RetourD',\n    value: statusCounts.retourd\n  }, {\n    type: 'Livré',\n    value: statusCounts.livré\n  }];\n};\nconst DeliveryPieChart = () => {\n  _s();\n  // Utilisation correcte de useQuery (React Query v5)\n  const {\n    data: deliveries,\n    isLoading,\n    isError\n  } = useQuery({\n    queryKey: ['deliveries'],\n    queryFn: fetchDeliveries\n  });\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Chargement des donn\\xE9es...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 27\n  }, this);\n  if (isError) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Erreur lors de la r\\xE9cup\\xE9ration des donn\\xE9es\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 25\n  }, this);\n\n  // Formater les données pour le graphique\n  const chartData = formatDataForPieChart(deliveries);\n\n  // Configuration du graphique\n  const config = {\n    data: chartData,\n    angleField: 'value',\n    colorField: 'type',\n    radius: 0.6,\n    label: {\n      text: d => `${d.type}\\n ${d.value}`,\n      position: 'spider'\n    },\n    legend: {\n      color: {\n        title: false,\n        position: 'right',\n        rowPadding: 5\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: 'center',\n        fontSize: 18,\n        fontWeight: 500\n      },\n      children: \"Statistiques des livraisons\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Pie, {\n      ...config\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n_s(DeliveryPieChart, \"ZAGRodInitM1/3G69By9bpcL01I=\", false, function () {\n  return [useQuery];\n});\n_c = DeliveryPieChart;\nexport default DeliveryPieChart;\nvar _c;\n$RefreshReg$(_c, \"DeliveryPieChart\");","map":{"version":3,"names":["React","useQuery","Pie","axiosInstance","jsxDEV","_jsxDEV","fetchDeliveries","response","get","data","formatDataForPieChart","deliveries","statusCounts","enattente","endepot","encours","retoure","retourd","livré","forEach","delivery","status","type","value","DeliveryPieChart","_s","isLoading","isError","queryKey","queryFn","children","fileName","_jsxFileName","lineNumber","columnNumber","chartData","config","angleField","colorField","radius","label","text","d","position","legend","color","title","rowPadding","style","textAlign","fontSize","fontWeight","_c","$RefreshReg$"],"sources":["C:/Users/Hp/Desktop/LIVRAISON/client/src/pages/charts.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { Pie } from '@ant-design/plots';\r\nimport { axiosInstance } from '../lib/axios';\r\n\r\n// Fonction pour récupérer les livraisons\r\nconst fetchDeliveries = async () => {\r\n    const response = await axiosInstance.get('/delivry');\r\n    return response.data;\r\n};\r\n\r\n// Fonction pour formater les données pour le graphique\r\nconst formatDataForPieChart = (deliveries) => {\r\n    if (!deliveries) return [];\r\n\r\n    const statusCounts = {\r\n        enattente: 0,\r\n        endepot: 0,\r\n        encours: 0,\r\n        retoure: 0,\r\n        retourd: 0,\r\n        livré: 0,\r\n    };\r\n\r\n    deliveries.forEach((delivery) => {\r\n        if (delivery.status === 'EnAttente') statusCounts.enattente++;\r\n        else if (delivery.status === 'EnDepot') statusCounts.endepot++;\r\n        else if (delivery.status === 'EnCours') statusCounts.encours++;\r\n        else if (delivery.status === 'RetourE') statusCounts.retoure++;\r\n        else if (delivery.status === 'RetourD') statusCounts.retourd++;\r\n        else if (delivery.status === 'Livré') statusCounts.livré++;\r\n\r\n\r\n    });\r\n\r\n    return [\r\n        { type: 'EnAttente', value: statusCounts.enattente },\r\n        { type: 'EnDepot', value: statusCounts.endepot }, // Correction d'affichage\r\n        { type: 'EnCours', value: statusCounts.encours },\r\n        { type: 'RetourE', value: statusCounts.retoure },\r\n\r\n        { type: 'RetourD', value: statusCounts.retourd },\r\n\r\n        { type: 'Livré', value: statusCounts.livré },\r\n\r\n    ];\r\n};\r\n\r\nconst DeliveryPieChart = () => {\r\n    // Utilisation correcte de useQuery (React Query v5)\r\n    const { data: deliveries, isLoading, isError } = useQuery({\r\n        queryKey: ['deliveries'],\r\n        queryFn: fetchDeliveries,\r\n    });\r\n\r\n    if (isLoading) return <div>Chargement des données...</div>;\r\n    if (isError) return <div>Erreur lors de la récupération des données</div>;\r\n\r\n    // Formater les données pour le graphique\r\n    const chartData = formatDataForPieChart(deliveries);\r\n\r\n    // Configuration du graphique\r\n    const config = {\r\n        data: chartData,\r\n        angleField: 'value',\r\n        colorField: 'type',\r\n        radius: 0.6,\r\n        label: {\r\n            text: (d) => `${d.type}\\n ${d.value}`,\r\n            position: 'spider',\r\n        },\r\n        legend: {\r\n            color: {\r\n                title: false,\r\n                position: 'right',\r\n                rowPadding: 5,\r\n            },\r\n        },\r\n\r\n    };\r\n    return (\r\n        <div>\r\n            <h2 style={{ textAlign: 'center', fontSize: 18, fontWeight: 500 }}>\r\n                Statistiques des livraisons\r\n            </h2>\r\n            <Pie {...config} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DeliveryPieChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}