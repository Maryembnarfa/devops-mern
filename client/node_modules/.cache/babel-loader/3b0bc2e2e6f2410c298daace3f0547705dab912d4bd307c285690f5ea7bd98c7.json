{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { isNumber } from '@antv/util';\nimport { Marker } from '@antv/component';\nimport { line } from '@antv/vendor/d3-shape';\nimport { createElement } from '../../utils/createElement';\nimport { applyStyle } from '../utils';\nimport { subObject } from '../../utils/helper';\nimport { select } from '../../utils/selection';\nimport { dist } from '../../utils/vector';\nfunction getConnectorPoint(shape) {\n  const {\n    min: [x0, y0],\n    max: [x1, y1]\n  } = shape.getLocalBounds();\n  let x = 0;\n  let y = 0;\n  if (x0 > 0) x = x0;\n  if (x1 < 0) x = x1;\n  if (y0 > 0) y = y0;\n  if (y1 < 0) y = y1;\n  return [x, y];\n}\nfunction inferBackgroundBounds(textShape) {\n  let padding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  const [top = 0, right = 0, bottom = top, left = right] = padding;\n  const container = textShape.parentNode;\n  const angle = container.getEulerAngles();\n  container.setEulerAngles(0);\n  const {\n    min,\n    halfExtents\n  } = textShape.getLocalBounds();\n  const [x, y] = min;\n  const [hw, hh] = halfExtents;\n  container.setEulerAngles(angle);\n  return {\n    x: x - left,\n    y: y - top,\n    width: hw * 2 + left + right,\n    height: hh * 2 + top + bottom\n  };\n}\nconst cos = (p0, p1, p2) => {\n  const a = dist(p0, p1);\n  const b = dist(p1, p2);\n  const c = dist(p2, p0);\n  return (Math.pow(a, 2) + Math.pow(b, 2) - Math.pow(c, 2)) / (2 * a * b);\n};\n// A path from element to label.\n// Adapted drawLabelLine from https://github.com/antvis/G2/blob/master/src/geometry/label/layout/pie/spider.ts\nfunction inferConnectorPath(shape, end, control, coordCenter) {\n  let left = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n  let top = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : true;\n  const path = points => line()(points);\n  if (!end[0] && !end[1]) return path([getConnectorPoint(shape), end]);\n  if (!control.length) return path([[0, 0], end]);\n  const [inflection, start] = control;\n  const p1 = [...start];\n  const p2 = [...inflection];\n  // Label has been adjusted, so add offset to the label.\n  if (start[0] !== inflection[0]) {\n    const offset = left ? -4 : 4;\n    p1[1] = start[1];\n    // For the label in the first quadrant.\n    if (top && !left) {\n      p1[0] = Math.max(inflection[0], start[0] - offset);\n      if (start[1] < inflection[1]) {\n        p2[1] = p1[1];\n      } else {\n        p2[1] = inflection[1];\n        p2[0] = Math.max(p2[0], p1[0] - offset);\n      }\n    }\n    // For the label in the second quadrant.\n    if (!top && !left) {\n      p1[0] = Math.max(inflection[0], start[0] - offset);\n      if (start[1] > inflection[1]) {\n        p2[1] = p1[1];\n      } else {\n        p2[1] = inflection[1];\n        p2[0] = Math.max(p2[0], p1[0] - offset);\n      }\n    }\n    // For the label in the third quadrant.\n    if (!top && left) {\n      p1[0] = Math.min(inflection[0], start[0] - offset);\n      if (start[1] > inflection[1]) {\n        p2[1] = p1[1];\n      } else {\n        p2[1] = inflection[1];\n        p2[0] = Math.min(p2[0], p1[0] - offset);\n      }\n    }\n    // For the label in the fourth quadrant.\n    if (top && left) {\n      p1[0] = Math.min(inflection[0], start[0] - offset);\n      if (start[1] < inflection[1]) {\n        p2[1] = p1[1];\n      } else {\n        p2[1] = inflection[1];\n        p2[0] = Math.min(p2[0], p1[0] - offset);\n      }\n    }\n  }\n  return path([start, p1, p2, inflection, end]);\n}\nexport const Advance = createElement(g => {\n  const _a = g.attributes,\n    {\n      className,\n      // Do not pass className\n      class: _c,\n      transform,\n      rotate,\n      labelTransform,\n      labelTransformOrigin,\n      x,\n      y,\n      x0 = x,\n      y0 = y,\n      text,\n      background,\n      connector,\n      startMarker,\n      endMarker,\n      coordCenter,\n      innerHTML\n    } = _a,\n    rest = __rest(_a, [\"className\", \"class\", \"transform\", \"rotate\", \"labelTransform\", \"labelTransformOrigin\", \"x\", \"y\", \"x0\", \"y0\", \"text\", \"background\", \"connector\", \"startMarker\", \"endMarker\", \"coordCenter\", \"innerHTML\"]);\n  g.style.transform = `translate(${x}, ${y})`;\n  // Position is invalid, do not render the UI,\n  // or clear previous elements.\n  if ([x, y, x0, y0].some(v => !isNumber(v))) {\n    g.children.forEach(d => d.remove());\n    return;\n  }\n  const _b = subObject(rest, 'background'),\n    {\n      padding\n    } = _b,\n    backgroundStyle = __rest(_b, [\"padding\"]);\n  const _d = subObject(rest, 'connector'),\n    {\n      points: controlPoints = []\n    } = _d,\n    connectorStyle = __rest(_d, [\"points\"]);\n  let textShape;\n  if (innerHTML) {\n    textShape = select(g).maybeAppend('html', 'html', className).style('zIndex', 0).style('innerHTML', innerHTML).call(applyStyle, Object.assign({\n      transform: labelTransform,\n      transformOrigin: labelTransformOrigin\n    }, rest)).node();\n  } else {\n    textShape = select(g).maybeAppend('text', 'text').style('zIndex', 0).style('text', text).call(applyStyle, Object.assign({\n      textBaseline: 'middle',\n      transform: labelTransform,\n      transformOrigin: labelTransformOrigin\n    }, rest)).node();\n  }\n  const rect = select(g).maybeAppend('background', 'rect').style('zIndex', -1).call(applyStyle, inferBackgroundBounds(textShape, padding)).call(applyStyle, background ? backgroundStyle : {}).node();\n  const left = +x0 < coordCenter[0];\n  const top = +y0 < coordCenter[1];\n  const end = [+x0 - +x, +y0 - +y];\n  const connectorPath = inferConnectorPath(rect, end, controlPoints, coordCenter, left, top);\n  const markerStart = startMarker && new Marker({\n    id: 'startMarker',\n    style: Object.assign({\n      x: 0,\n      y: 0\n    }, subObject(rest, 'startMarker'))\n  });\n  const markerEnd = endMarker && new Marker({\n    id: 'endMarker',\n    style: Object.assign({\n      x: 0,\n      y: 0\n    }, subObject(rest, 'endMarker'))\n  });\n  select(g).maybeAppend('connector', 'path').style('zIndex', 0).style('d', connectorPath).style('markerStart', markerStart).style('markerEnd', markerEnd).call(applyStyle, connector ? connectorStyle : {});\n});","map":{"version":3,"names":["isNumber","Marker","line","createElement","applyStyle","subObject","select","dist","getConnectorPoint","shape","min","x0","y0","max","x1","y1","getLocalBounds","x","y","inferBackgroundBounds","textShape","padding","arguments","length","undefined","top","right","bottom","left","container","parentNode","angle","getEulerAngles","setEulerAngles","halfExtents","hw","hh","width","height","cos","p0","p1","p2","a","b","c","Math","pow","inferConnectorPath","end","control","coordCenter","path","points","inflection","start","offset","Advance","g","_a","attributes","className","class","_c","transform","rotate","labelTransform","labelTransformOrigin","text","background","connector","startMarker","endMarker","innerHTML","rest","__rest","style","some","v","children","forEach","d","remove","_b","backgroundStyle","_d","controlPoints","connectorStyle","maybeAppend","call","Object","assign","transformOrigin","node","textBaseline","rect","connectorPath","markerStart","id","markerEnd"],"sources":["shape/text/advance.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}