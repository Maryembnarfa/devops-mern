{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { arc } from '@antv/vendor/d3-shape';\nimport { isPolar, isHelix, isTranspose } from '../../utils/coordinate';\nimport { select } from '../../utils/selection';\nimport { sub } from '../../utils/vector';\nimport { clamp } from '../../utils/number';\nimport { applyStyle, getArcObject, reorder, toOpacityKey } from '../utils';\n// Render rect in different coordinate.\nexport function rect(document, points, value, coordinate) {\n  let style = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n  const {\n      inset = 0,\n      radius = 0,\n      insetLeft = inset,\n      insetTop = inset,\n      insetRight = inset,\n      insetBottom = inset,\n      radiusBottomLeft = radius,\n      radiusBottomRight = radius,\n      radiusTopLeft = radius,\n      radiusTopRight = radius,\n      minWidth = -Infinity,\n      maxWidth = Infinity,\n      minHeight = -Infinity\n    } = style,\n    rest = __rest(style, [\"inset\", \"radius\", \"insetLeft\", \"insetTop\", \"insetRight\", \"insetBottom\", \"radiusBottomLeft\", \"radiusBottomRight\", \"radiusTopLeft\", \"radiusTopRight\", \"minWidth\", \"maxWidth\", \"minHeight\"]);\n  if (!isPolar(coordinate) && !isHelix(coordinate)) {\n    const tpShape = !!isTranspose(coordinate);\n    const [p0,, p2] = tpShape ? reorder(points) : points;\n    const [x, y] = p0;\n    const [width, height] = sub(p2, p0);\n    // Deal with width or height is negative.\n    const absX = width > 0 ? x : x + width;\n    const absY = height > 0 ? y : y + height;\n    const absWidth = Math.abs(width);\n    const absHeight = Math.abs(height);\n    const finalX = absX + insetLeft;\n    const finalY = absY + insetTop;\n    const finalWidth = absWidth - (insetLeft + insetRight);\n    const finalHeight = absHeight - (insetTop + insetBottom);\n    const clampWidth = tpShape ? clamp(finalWidth, minHeight, Infinity) : clamp(finalWidth, minWidth, maxWidth);\n    const clampHeight = tpShape ? clamp(finalHeight, minWidth, maxWidth) : clamp(finalHeight, minHeight, Infinity);\n    const clampX = tpShape ? finalX : finalX - (clampWidth - finalWidth) / 2;\n    const clampY = tpShape ? finalY - (clampHeight - finalHeight) / 2 : finalY - (clampHeight - finalHeight);\n    return select(document.createElement('rect', {})).style('x', clampX).style('y', clampY).style('width', clampWidth).style('height', clampHeight).style('radius', [radiusTopLeft, radiusTopRight, radiusBottomRight, radiusBottomLeft]).call(applyStyle, rest).node();\n  }\n  // Render path in polar coordinate.\n  const {\n    y,\n    y1\n  } = value;\n  const center = coordinate.getCenter();\n  const arcObject = getArcObject(coordinate, points, [y, y1]);\n  const path = arc().cornerRadius(radius).padAngle(inset * Math.PI / 180);\n  return select(document.createElement('path', {})).style('d', path(arcObject)).style('transform', `translate(${center[0]}, ${center[1]})`).style('radius', radius).style('inset', inset).call(applyStyle, rest).node();\n}\n/**\n * Render rect in different coordinate.\n * Calc arc path based on control points directly rather startAngle, endAngle, innerRadius,\n * outerRadius. This is not accurate and will cause bug when the range of y scale is [1, 0]\n * for cell geometry.\n */\nexport const Color = (options, context) => {\n  // Render border only when colorAttribute is stroke.\n  const {\n      colorAttribute,\n      opacityAttribute = 'fill',\n      first = true,\n      last = true\n    } = options,\n    style = __rest(options, [\"colorAttribute\", \"opacityAttribute\", \"first\", \"last\"]);\n  const {\n    coordinate,\n    document\n  } = context;\n  return (points, value, defaults) => {\n    const {\n        color: defaultColor,\n        radius: defaultRadius = 0\n      } = defaults,\n      restDefaults = __rest(defaults, [\"color\", \"radius\"]);\n    const defaultLineWidth = restDefaults.lineWidth || 1;\n    const {\n        stroke,\n        radius = defaultRadius,\n        radiusTopLeft = radius,\n        radiusTopRight = radius,\n        radiusBottomRight = radius,\n        radiusBottomLeft = radius,\n        innerRadius = 0,\n        innerRadiusTopLeft = innerRadius,\n        innerRadiusTopRight = innerRadius,\n        innerRadiusBottomRight = innerRadius,\n        innerRadiusBottomLeft = innerRadius,\n        lineWidth = colorAttribute === 'stroke' || stroke ? defaultLineWidth : 0,\n        inset = 0,\n        insetLeft = inset,\n        insetRight = inset,\n        insetBottom = inset,\n        insetTop = inset,\n        minWidth,\n        maxWidth,\n        minHeight\n      } = style,\n      rest = __rest(style, [\"stroke\", \"radius\", \"radiusTopLeft\", \"radiusTopRight\", \"radiusBottomRight\", \"radiusBottomLeft\", \"innerRadius\", \"innerRadiusTopLeft\", \"innerRadiusTopRight\", \"innerRadiusBottomRight\", \"innerRadiusBottomLeft\", \"lineWidth\", \"inset\", \"insetLeft\", \"insetRight\", \"insetBottom\", \"insetTop\", \"minWidth\", \"maxWidth\", \"minHeight\"]);\n    const {\n      color = defaultColor,\n      opacity\n    } = value;\n    // Extended style, which is not supported by native g shape,\n    // should apply at first.\n    const standardDirRadius = [first ? radiusTopLeft : innerRadiusTopLeft, first ? radiusTopRight : innerRadiusTopRight, last ? radiusBottomRight : innerRadiusBottomRight, last ? radiusBottomLeft : innerRadiusBottomLeft];\n    const standardDir = ['radiusTopLeft', 'radiusTopRight', 'radiusBottomRight', 'radiusBottomLeft'];\n    // Transpose: rotate it clockwise by 90.\n    if (isTranspose(coordinate)) {\n      standardDir.push(standardDir.shift());\n    }\n    const extendedStyle = Object.assign(Object.assign({\n      radius\n    }, Object.fromEntries(standardDir.map((d, i) => [d, standardDirRadius[i]]))), {\n      inset,\n      insetLeft,\n      insetRight,\n      insetBottom,\n      insetTop,\n      minWidth,\n      maxWidth,\n      minHeight\n    });\n    return select(rect(document, points, value, coordinate, extendedStyle)).call(applyStyle, restDefaults).style('fill', 'transparent').style(colorAttribute, color).style(toOpacityKey(options), opacity).style('lineWidth', lineWidth).style('stroke', stroke === undefined ? color : stroke)\n    // shape.style has higher priority.\n    .call(applyStyle, rest).node();\n  };\n};\n// @todo Should Shape have default animations using for ordinal scale?\nColor.props = {\n  defaultEnterAnimation: 'scaleInY',\n  defaultUpdateAnimation: 'morphing',\n  defaultExitAnimation: 'fadeOut'\n};","map":{"version":3,"names":["arc","isPolar","isHelix","isTranspose","select","sub","clamp","applyStyle","getArcObject","reorder","toOpacityKey","rect","document","points","value","coordinate","style","arguments","length","undefined","inset","radius","insetLeft","insetTop","insetRight","insetBottom","radiusBottomLeft","radiusBottomRight","radiusTopLeft","radiusTopRight","minWidth","Infinity","maxWidth","minHeight","rest","__rest","tpShape","p0","p2","x","y","width","height","absX","absY","absWidth","Math","abs","absHeight","finalX","finalY","finalWidth","finalHeight","clampWidth","clampHeight","clampX","clampY","createElement","call","node","y1","center","getCenter","arcObject","path","cornerRadius","padAngle","PI","Color","options","context","colorAttribute","opacityAttribute","first","last","defaults","color","defaultColor","defaultRadius","restDefaults","defaultLineWidth","lineWidth","stroke","innerRadius","innerRadiusTopLeft","innerRadiusTopRight","innerRadiusBottomRight","innerRadiusBottomLeft","opacity","standardDirRadius","standardDir","push","shift","extendedStyle","Object","assign","fromEntries","map","d","i","props","defaultEnterAnimation","defaultUpdateAnimation","defaultExitAnimation"],"sources":["shape/interval/color.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}