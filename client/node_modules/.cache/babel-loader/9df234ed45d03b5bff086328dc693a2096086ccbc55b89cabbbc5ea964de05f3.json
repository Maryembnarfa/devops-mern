{"ast":null,"code":"import React from'react';import{Form,Input,Modal,Button,message}from\"antd\";import{useQuery,useMutation,useQueryClient}from\"@tanstack/react-query\";import{axiosInstance}from\"../../lib/axios\";import{jsx as _jsx}from\"react/jsx-runtime\";export default function UpdateVehicle(_ref){let{openUpdate,setOpenUpdate,id}=_ref;const[form]=Form.useForm();const queryClient=useQueryClient();// Requête pour récupérer les données du produit\nconst{data,isLoading}=useQuery({queryKey:[\"vehicle\",id],queryFn:async()=>{const response=await axiosInstance.get(`/vehicle/${id}`);form.setFieldsValue(response.data);// Pré-remplir le formulaire\nreturn response.data;},enabled:!!id// N'exécute la requête que si un ID est défini\n});// Mutation pour mettre à jour les données\nconst mutation=useMutation({mutationFn:async values=>{return await axiosInstance.put(`/vehicle/${id}`,values);},onSuccess:()=>{message.success(\"vehicle mis à jour avec succès !\");queryClient.invalidateQueries([\"vehicle\"]);// Invalider le cache pour recharger les données\nsetOpenUpdate(false);// Fermer le modal\n},onError:()=>{message.error(\"Échec de la mise à jour du vehicle !\");}});// Soumettre les données mises à jour\nconst handleUpdate=async()=>{try{const values=await form.validateFields();// Valider les champs du formulaire\nmutation.mutate(values);// Appeler la mutation\n}catch(error){console.log(\"Validation failed:\",error);}};return/*#__PURE__*/_jsx(Modal,{open:openUpdate,onCancel:()=>{setOpenUpdate(false);form.resetFields();// Réinitialiser le formulaire\n},onOk:()=>form.submit()// Soumettre le formulaire lors du clic sur OK\n,confirmLoading:isLoading||mutation.isLoading// Afficher un indicateur de chargement\n,children:/*#__PURE__*/_jsx(Form,{form:form,name:\"update vehicle\",onFinish:handleUpdate// Déclencher handleSubmit à la soumission\n,children:/*#__PURE__*/_jsx(Form.Item,{label:\"Serie\",name:\"serie\",rules:[{required:true}],children:/*#__PURE__*/_jsx(Input,{})})})});}","map":{"version":3,"names":["React","Form","Input","Modal","Button","message","useQuery","useMutation","useQueryClient","axiosInstance","jsx","_jsx","UpdateVehicle","_ref","openUpdate","setOpenUpdate","id","form","useForm","queryClient","data","isLoading","queryKey","queryFn","response","get","setFieldsValue","enabled","mutation","mutationFn","values","put","onSuccess","success","invalidateQueries","onError","error","handleUpdate","validateFields","mutate","console","log","open","onCancel","resetFields","onOk","submit","confirmLoading","children","name","onFinish","Item","label","rules","required"],"sources":["C:/Users/Hp/Desktop/LIVRAISON/client/src/pages/vehicle/updateVehicle.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Form, Input, Modal, Button, message } from \"antd\";\r\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\r\nimport { axiosInstance } from \"../../lib/axios\";\r\n\r\nexport default function UpdateVehicle({ openUpdate, setOpenUpdate, id }) {\r\n    const [form] = Form.useForm();\r\n    const queryClient = useQueryClient();\r\n\r\n    // Requête pour récupérer les données du produit\r\n    const { data, isLoading } = useQuery({\r\n        queryKey: [\"vehicle\", id],\r\n        queryFn: async () => {\r\n            const response = await axiosInstance.get(`/vehicle/${id}`);\r\n            form.setFieldsValue(response.data); // Pré-remplir le formulaire\r\n            return response.data;\r\n        },\r\n        enabled: !!id, // N'exécute la requête que si un ID est défini\r\n    });\r\n\r\n    // Mutation pour mettre à jour les données\r\n    const mutation = useMutation({\r\n        mutationFn: async (values) => {\r\n            return await axiosInstance.put(`/vehicle/${id}`, values);\r\n        },\r\n        onSuccess: () => {\r\n            message.success(\"vehicle mis à jour avec succès !\");\r\n            queryClient.invalidateQueries([\"vehicle\"]); // Invalider le cache pour recharger les données\r\n            setOpenUpdate(false); // Fermer le modal\r\n        },\r\n        onError: () => {\r\n            message.error(\"Échec de la mise à jour du vehicle !\");\r\n        },\r\n    });\r\n\r\n    // Soumettre les données mises à jour\r\n    const handleUpdate = async () => {\r\n        try {\r\n            const values = await form.validateFields(); // Valider les champs du formulaire\r\n            mutation.mutate(values); // Appeler la mutation\r\n        } catch (error) {\r\n            console.log(\"Validation failed:\", error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            open={openUpdate}\r\n            onCancel={() => {\r\n                setOpenUpdate(false);\r\n                form.resetFields(); // Réinitialiser le formulaire\r\n            }}\r\n            onOk={() => form.submit()} // Soumettre le formulaire lors du clic sur OK\r\n            confirmLoading={isLoading || mutation.isLoading} // Afficher un indicateur de chargement\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"update vehicle\"\r\n                onFinish={handleUpdate} // Déclencher handleSubmit à la soumission\r\n            >\r\n                <Form.Item label=\"Serie\" name=\"serie\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n\r\n\r\n\r\n            </Form>\r\n        </Modal>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}