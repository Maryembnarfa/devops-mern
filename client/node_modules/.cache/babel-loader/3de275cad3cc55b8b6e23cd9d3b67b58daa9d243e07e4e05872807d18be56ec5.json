{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Desktop\\\\LIVRAISON\\\\client\\\\src\\\\pages\\\\users.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Table, message, Button, Modal, Form, Input, Select, Row, Col } from 'antd';\nimport { useMutation } from '@tanstack/react-query';\nimport { axiosInstance } from \"../lib/axios\";\nimport { Avatar } from 'antd';\nimport { EditOutlined, DeleteOutlined, EyeOutlined, SearchOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  confirm\n} = Modal;\nconst colorPalette = ['#d46b08', '#ad2102', '#a8071a', '#3f6600', '#876800', '#874d00'];\nconst Users = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isUpdateModalOpen, setIsUpdateModalOpen] = useState(false);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchRole, setSearchRole] = useState(\"\"); // Pour la recherche par rôle\n  const [filteredUsers, setFilteredUsers] = useState([]); // Liste filtrée d'après la recherche\n  const [form] = Form.useForm();\n\n  // Mutation pour récupérer les utilisateurs\n  const {\n    mutate,\n    isLoading,\n    isError,\n    error\n  } = useMutation({\n    mutationFn: async () => {\n      const response = await axiosInstance.get('/users');\n      return response.data;\n    },\n    onSuccess: data => {\n      setUsers(data);\n      message.success(\"Users loaded successfully\");\n    },\n    onError: error => {\n      message.error(\"Error loading users: \" + error.message);\n    }\n  });\n  useEffect(() => {\n    mutate();\n  }, [mutate]);\n\n  // Fonction de suppression\n  const handleDeleteUser = async userId => {\n    try {\n      await axiosInstance.delete(`/users/${userId}`);\n      message.success(\"User deleted successfully\");\n      setUsers(prevUsers => prevUsers.filter(user => user._id !== userId));\n    } catch (error) {\n      message.error(\"Error deleting user: \" + error.message);\n    }\n  };\n  const showDeleteConfirm = userId => {\n    confirm({\n      title: 'Are you sure you want to delete this user?',\n      okText: 'Yes',\n      okType: 'danger',\n      cancelText: 'No',\n      onOk() {\n        handleDeleteUser(userId);\n      },\n      onCancel() {\n        message.info(\"User deletion cancelled\");\n      }\n    });\n  };\n\n  // Fonction pour afficher le formulaire de mise à jour\n  const handleUpdateUser = user => {\n    setSelectedUser(user); // Sauvegarder l'utilisateur sélectionné\n    form.setFieldsValue(user); // Pré-remplir le formulaire avec les données de l'utilisateur\n    setIsUpdateModalOpen(true); // Ouvrir le modal de mise à jour\n  };\n\n  // Fonction pour gérer la soumission du formulaire de mise à jour\n  const handleUpdateSubmit = async values => {\n    try {\n      await axiosInstance.put(`/users/${selectedUser._id}`, values);\n      message.success(\"User updated successfully\");\n      mutate(); // Rafraîchir la liste des utilisateurs\n      setIsUpdateModalOpen(false); // Fermer le modal de mise à jour\n      form.resetFields(); // Réinitialiser les champs du formulaire\n    } catch (error) {\n      message.error(\"Error updating user: \" + error.message);\n    }\n  };\n\n  // Fonction pour gérer la soumission du formulaire d'ajout\n  const handleAddUser = async values => {\n    try {\n      await axiosInstance.post('/user', values);\n      message.success(\"User added successfully\");\n      mutate(); // Rafraîchir la liste des utilisateurs\n      setIsModalOpen(false); // Fermer le modal d'ajout\n      form.resetFields(); // Réinitialiser les champs du formulaire\n    } catch (error) {\n      message.error(\"Error adding user: \" + error.message);\n    }\n  };\n  // Ajoutez cette fonction dans votre composant Users\n  const checkEmailExists = async username => {\n    const token = localStorage.getItem('jwt');\n    try {\n      // Vérifier dans la liste des utilisateurs existants\n      const existingUser = users.find(user => user.username.toLowerCase() === username.toLowerCase());\n      return !!existingUser;\n    } catch (error) {\n      console.error(\"Error checking email:\", error);\n      return false;\n    }\n  };\n\n  // Fonction pour gérer la recherche et filtrer les utilisateurs\n  const handleSearch = value => {\n    setSearchTerm(value); // Mettre à jour le terme de recherche\n    if (!value) {\n      setFilteredUsers([]); // Si le champ est vide, afficher tous les utilisateurs\n    } else {\n      // Filtrer les utilisateurs dont le nom commence par la recherche\n      const filtered = users.filter(user => user.name.toLowerCase().startsWith(value.toLowerCase()));\n      setFilteredUsers(filtered); // Appliquer le filtrage\n    }\n  };\n  // Fonction pour gérer la recherche et filtrer les utilisateurs par rôle\n  const handleSearchByRole = value => {\n    setSearchRole(value); // Mettre à jour le terme de recherche par rôle\n    if (!value) {\n      setFilteredUsers([]); // Si le champ est vide, réinitialiser la liste filtrée à vide\n    } else {\n      // Filtrer les utilisateurs dont le rôle correspond à la recherche\n      const filtered = users.filter(user => user.role.toLowerCase().startsWith(value.toLowerCase()));\n      setFilteredUsers(filtered); // Appliquer le filtrage\n    }\n  };\n  const handleViewUser = user => {\n    Modal.info({\n      title: 'User Details',\n      content: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 24\n          }, this), \" \", user.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"UserName:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 24\n          }, this), \" \", user.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Role:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 24\n          }, this), \" \", user.role]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this),\n      onOk() {}\n    });\n  };\n  const columns = [{\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name',\n    render: (text, record, index) => {\n      const color = colorPalette[index % colorPalette.length];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          style: {\n            backgroundColor: color,\n            marginRight: '10px'\n          },\n          children: text.charAt(0).toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 25\n        }, this), text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 21\n      }, this);\n    }\n  }, {\n    title: 'UserName',\n    dataIndex: 'username',\n    key: 'username'\n  }, {\n    title: 'Rôle',\n    dataIndex: 'role',\n    key: 'role'\n  }, {\n    title: 'Actions',\n    key: 'actions',\n    render: (text, record) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(EyeOutlined, {\n        style: {\n          fontSize: '18px',\n          cursor: 'pointer'\n        },\n        onClick: () => handleViewUser(record) // Fonction d'affichage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(EditOutlined, {\n        style: {\n          fontSize: '18px',\n          cursor: 'pointer'\n        },\n        onClick: () => handleUpdateUser(record) // Fonction de mise à jour\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(DeleteOutlined, {\n        style: {\n          fontSize: '18px',\n          cursor: 'pointer'\n        },\n        onClick: () => showDeleteConfirm(record._id) // Fonction de suppression\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 17\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      justify: \"space-between\",\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Input.Search, {\n          placeholder: \"Search by name\",\n          size: \"large\",\n          value: searchTerm,\n          onChange: e => handleSearch(e.target.value) // Recherche par nom\n          ,\n          style: {\n            width: 300\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Input.Search, {\n          placeholder: \"Search by role\",\n          size: \"large\",\n          value: searchRole,\n          onChange: e => handleSearchByRole(e.target.value) // Recherche par rôle\n          ,\n          style: {\n            width: 300\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          onClick: () => setIsModalOpen(true),\n          style: {\n            padding: \"10px 20px\",\n            fontSize: \"15px\",\n            height: \"40px\",\n            width: \"160px\",\n            backgroundColor: \"rgb(189, 37, 27)\",\n            borderColor: \"rgb(189, 37, 27)\"\n          },\n          children: \"Add User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      dataSource: filteredUsers.length > 0 ? filteredUsers : users // Utiliser filteredUsers si filtré, sinon users\n      ,\n      columns: columns,\n      rowKey: \"_id\",\n      loading: isLoading,\n      error: isError ? error.message : null,\n      pagination: {\n        pageSize: 5\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Add User\",\n      open: isModalOpen,\n      onCancel: () => setIsModalOpen(false),\n      footer: null,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        form: form,\n        onFinish: handleAddUser,\n        layout: \"vertical\",\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Name\",\n          name: \"name\",\n          rules: [{\n            required: true,\n            message: 'Please input the name!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Email or Phone\",\n          name: \"username\",\n          rules: [{\n            required: true,\n            message: \"Please enter your email or phone number\"\n          }, {\n            pattern: /^([^\\s@]+@[^\\s@]+\\.[^\\s@]+|\\d{8})$/,\n            message: \"Please enter a valid email or an 8-digit phone number\"\n          }, {\n            validator: async (_, value) => {\n              if (value) {\n                const exists = await checkEmailExists(value);\n                if (exists) {\n                  throw new Error('This username is already registered');\n                }\n              }\n              return Promise.resolve();\n            }\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Password\",\n          name: \"password\",\n          rules: [{\n            required: true,\n            message: 'Please input the password!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input.Password, {\n            autoComplete: \"new-password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Role\",\n          name: \"role\",\n          rules: [{\n            required: true,\n            message: 'Please select a role!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            children: [/*#__PURE__*/_jsxDEV(Select.Option, {\n              value: \"EXPEDITEUR\",\n              children: \"EXPEDITEUR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select.Option, {\n              value: \"ADMIN\",\n              children: \"ADMIN\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select.Option, {\n              value: \"LIVREUR\",\n              children: \"LIVREUR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            block: true,\n            children: \"Add User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Update User\",\n      open: isUpdateModalOpen,\n      onCancel: () => setIsUpdateModalOpen(false),\n      footer: null,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        form: form,\n        onFinish: handleUpdateSubmit,\n        layout: \"vertical\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Name\",\n          name: \"name\",\n          rules: [{\n            required: true,\n            message: 'Please input the name!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"UserName\",\n          name: \"username\",\n          rules: [{\n            required: true,\n            message: \"Please enter your email or phone number\"\n          }, {\n            pattern: /^([^\\s@]+@[^\\s@]+\\.[^\\s@]+|\\d{8})$/,\n            message: \"Please enter a valid email or an 8-digit phone number\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Password\",\n          name: \"password\",\n          rules: [{\n            required: true,\n            message: 'Please input the password!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input.Password, {\n            autoComplete: \"new-password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Role\",\n          name: \"role\",\n          rules: [{\n            required: true,\n            message: 'Please select a role!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            children: [/*#__PURE__*/_jsxDEV(Select.Option, {\n              value: \"EXPEDITEUR\",\n              children: \"EXPEDITEUR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select.Option, {\n              value: \"ADMIN\",\n              children: \"ADMIN\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select.Option, {\n              value: \"LIVREUR\",\n              children: \"LIVREUR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            block: true,\n            children: \"Update User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Users, \"3gQ7RDqbUt8xYf3ZoNdZn+wSjbM=\", false, function () {\n  return [Form.useForm, useMutation];\n});\n_c = Users;\nexport default Users;\nvar _c;\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["React","useState","useEffect","Table","message","Button","Modal","Form","Input","Select","Row","Col","useMutation","axiosInstance","Avatar","EditOutlined","DeleteOutlined","EyeOutlined","SearchOutlined","jsxDEV","_jsxDEV","Fragment","_Fragment","confirm","colorPalette","Users","_s","users","setUsers","isModalOpen","setIsModalOpen","isUpdateModalOpen","setIsUpdateModalOpen","selectedUser","setSelectedUser","searchTerm","setSearchTerm","searchRole","setSearchRole","filteredUsers","setFilteredUsers","form","useForm","mutate","isLoading","isError","error","mutationFn","response","get","data","onSuccess","success","onError","handleDeleteUser","userId","delete","prevUsers","filter","user","_id","showDeleteConfirm","title","okText","okType","cancelText","onOk","onCancel","info","handleUpdateUser","setFieldsValue","handleUpdateSubmit","values","put","resetFields","handleAddUser","post","checkEmailExists","username","token","localStorage","getItem","existingUser","find","toLowerCase","console","handleSearch","value","filtered","name","startsWith","handleSearchByRole","role","handleViewUser","content","children","fileName","_jsxFileName","lineNumber","columnNumber","columns","dataIndex","key","render","text","record","index","color","length","style","display","alignItems","backgroundColor","marginRight","charAt","toUpperCase","gap","fontSize","cursor","onClick","justify","marginBottom","Search","placeholder","size","onChange","e","target","width","type","padding","height","borderColor","dataSource","rowKey","loading","pagination","pageSize","open","footer","onFinish","layout","autoComplete","Item","label","rules","required","pattern","validator","_","exists","Error","Promise","resolve","Password","Option","htmlType","block","_c","$RefreshReg$"],"sources":["C:/Users/Hp/Desktop/LIVRAISON/client/src/pages/users.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Table, message, Button, Modal, Form, Input, Select, Row, Col } from 'antd';\r\nimport { useMutation } from '@tanstack/react-query';\r\nimport { axiosInstance } from \"../lib/axios\";\r\nimport { Avatar } from 'antd';\r\nimport { EditOutlined, DeleteOutlined, EyeOutlined, SearchOutlined } from '@ant-design/icons';\r\n\r\nconst { confirm } = Modal;\r\nconst colorPalette = ['#d46b08', '#ad2102', '#a8071a', '#3f6600', '#876800', '#874d00'];\r\n\r\nconst Users = () => {\r\n    const [users, setUsers] = useState([]);\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const [isUpdateModalOpen, setIsUpdateModalOpen] = useState(false);\r\n    const [selectedUser, setSelectedUser] = useState(null);\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const [searchRole, setSearchRole] = useState(\"\"); // Pour la recherche par rôle\r\n    const [filteredUsers, setFilteredUsers] = useState([]); // Liste filtrée d'après la recherche\r\n    const [form] = Form.useForm();\r\n\r\n    // Mutation pour récupérer les utilisateurs\r\n    const { mutate, isLoading, isError, error } = useMutation({\r\n        mutationFn: async () => {\r\n            const response = await axiosInstance.get('/users');\r\n            return response.data;\r\n        },\r\n        onSuccess: (data) => {\r\n            setUsers(data);\r\n            message.success(\"Users loaded successfully\");\r\n        },\r\n        onError: (error) => {\r\n            message.error(\"Error loading users: \" + error.message);\r\n        },\r\n    });\r\n\r\n    useEffect(() => {\r\n        mutate();\r\n    }, [mutate]);\r\n\r\n    // Fonction de suppression\r\n    const handleDeleteUser = async (userId) => {\r\n\r\n        try {\r\n            await axiosInstance.delete(`/users/${userId}`);\r\n            message.success(\"User deleted successfully\");\r\n\r\n            setUsers((prevUsers) => prevUsers.filter((user) => user._id !== userId));\r\n        } catch (error) {\r\n            message.error(\"Error deleting user: \" + error.message);\r\n        }\r\n    };\r\n\r\n    const showDeleteConfirm = (userId) => {\r\n        confirm({\r\n            title: 'Are you sure you want to delete this user?',\r\n            okText: 'Yes',\r\n            okType: 'danger',\r\n            cancelText: 'No',\r\n            onOk() {\r\n                handleDeleteUser(userId);\r\n            },\r\n            onCancel() {\r\n                message.info(\"User deletion cancelled\");\r\n            },\r\n        });\r\n    };\r\n\r\n    // Fonction pour afficher le formulaire de mise à jour\r\n    const handleUpdateUser = (user) => {\r\n        setSelectedUser(user); // Sauvegarder l'utilisateur sélectionné\r\n        form.setFieldsValue(user); // Pré-remplir le formulaire avec les données de l'utilisateur\r\n        setIsUpdateModalOpen(true); // Ouvrir le modal de mise à jour\r\n    };\r\n\r\n    // Fonction pour gérer la soumission du formulaire de mise à jour\r\n    const handleUpdateSubmit = async (values) => {\r\n\r\n\r\n        try {\r\n            await axiosInstance.put(`/users/${selectedUser._id}`, values);\r\n            message.success(\"User updated successfully\");\r\n            mutate(); // Rafraîchir la liste des utilisateurs\r\n            setIsUpdateModalOpen(false); // Fermer le modal de mise à jour\r\n            form.resetFields(); // Réinitialiser les champs du formulaire\r\n        } catch (error) {\r\n            message.error(\"Error updating user: \" + error.message);\r\n        }\r\n    };\r\n\r\n    // Fonction pour gérer la soumission du formulaire d'ajout\r\n    const handleAddUser = async (values) => {\r\n\r\n\r\n\r\n        try {\r\n            await axiosInstance.post('/user', values);\r\n            message.success(\"User added successfully\");\r\n            mutate(); // Rafraîchir la liste des utilisateurs\r\n            setIsModalOpen(false); // Fermer le modal d'ajout\r\n            form.resetFields(); // Réinitialiser les champs du formulaire\r\n        } catch (error) {\r\n            message.error(\"Error adding user: \" + error.message);\r\n        }\r\n    };\r\n    // Ajoutez cette fonction dans votre composant Users\r\n    const checkEmailExists = async (username) => {\r\n        const token = localStorage.getItem('jwt');\r\n        try {\r\n            // Vérifier dans la liste des utilisateurs existants\r\n            const existingUser = users.find(user => user.username.toLowerCase() === username.toLowerCase());\r\n            return !!existingUser;\r\n        } catch (error) {\r\n            console.error(\"Error checking email:\", error);\r\n            return false;\r\n        }\r\n    };\r\n\r\n\r\n    // Fonction pour gérer la recherche et filtrer les utilisateurs\r\n    const handleSearch = (value) => {\r\n        setSearchTerm(value); // Mettre à jour le terme de recherche\r\n        if (!value) {\r\n            setFilteredUsers([]); // Si le champ est vide, afficher tous les utilisateurs\r\n        } else {\r\n            // Filtrer les utilisateurs dont le nom commence par la recherche\r\n            const filtered = users.filter(user => user.name.toLowerCase().startsWith(value.toLowerCase()));\r\n            setFilteredUsers(filtered); // Appliquer le filtrage\r\n        }\r\n    };\r\n    // Fonction pour gérer la recherche et filtrer les utilisateurs par rôle\r\n    const handleSearchByRole = (value) => {\r\n        setSearchRole(value); // Mettre à jour le terme de recherche par rôle\r\n        if (!value) {\r\n            setFilteredUsers([]); // Si le champ est vide, réinitialiser la liste filtrée à vide\r\n        } else {\r\n            // Filtrer les utilisateurs dont le rôle correspond à la recherche\r\n            const filtered = users.filter(user => user.role.toLowerCase().startsWith(value.toLowerCase()));\r\n            setFilteredUsers(filtered); // Appliquer le filtrage\r\n        }\r\n    };\r\n\r\n    const handleViewUser = (user) => {\r\n        Modal.info({\r\n            title: 'User Details',\r\n            content: (\r\n                <div>\r\n                    <p><strong>Name:</strong> {user.name}</p>\r\n                    <p><strong>UserName:</strong> {user.username}</p>\r\n                    <p><strong>Role:</strong> {user.role}</p>\r\n                </div>\r\n            ),\r\n            onOk() { },\r\n        });\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n            render: (text, record, index) => {\r\n                const color = colorPalette[index % colorPalette.length];\r\n                return (\r\n                    <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                        <Avatar style={{ backgroundColor: color, marginRight: '10px' }}>\r\n                            {text.charAt(0).toUpperCase()}\r\n                        </Avatar>\r\n                        {text}\r\n                    </div>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            title: 'UserName',\r\n            dataIndex: 'username',\r\n            key: 'username',\r\n        },\r\n        {\r\n            title: 'Rôle',\r\n            dataIndex: 'role',\r\n            key: 'role',\r\n        },\r\n        {\r\n            title: 'Actions',\r\n            key: 'actions',\r\n            render: (text, record) => (\r\n                <div style={{ display: 'flex', gap: '10px' }}>\r\n                    <EyeOutlined\r\n                        style={{ fontSize: '18px', cursor: 'pointer' }}\r\n                        onClick={() => handleViewUser(record)} // Fonction d'affichage\r\n                    />\r\n                    <EditOutlined\r\n                        style={{ fontSize: '18px', cursor: 'pointer' }}\r\n                        onClick={() => handleUpdateUser(record)} // Fonction de mise à jour\r\n                    />\r\n                    <DeleteOutlined\r\n                        style={{ fontSize: '18px', cursor: 'pointer' }}\r\n                        onClick={() => showDeleteConfirm(record._id)} // Fonction de suppression\r\n                    />\r\n                </div>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <Row justify=\"space-between\" style={{ marginBottom: '20px' }}>\r\n                <Col>\r\n\r\n                    <Input.Search\r\n                        placeholder=\"Search by name\"\r\n                        size=\"large\"\r\n                        value={searchTerm}\r\n                        onChange={(e) => handleSearch(e.target.value)} // Recherche par nom\r\n                        style={{ width: 300 }}\r\n                    />\r\n                </Col>\r\n                <Col>\r\n                    <Input.Search\r\n                        placeholder=\"Search by role\"\r\n                        size=\"large\"\r\n                        value={searchRole}\r\n                        onChange={(e) => handleSearchByRole(e.target.value)} // Recherche par rôle\r\n                        style={{ width: 300 }}\r\n                    />\r\n                </Col>\r\n                <Col>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        onClick={() => setIsModalOpen(true)}\r\n                        style={{ padding: \"10px 20px\", fontSize: \"15px\", height: \"40px\", width: \"160px\", backgroundColor: \"rgb(189, 37, 27)\", borderColor: \"rgb(189, 37, 27)\" }}\r\n                    >\r\n                        Add User\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Table\r\n                dataSource={filteredUsers.length > 0 ? filteredUsers : users} // Utiliser filteredUsers si filtré, sinon users\r\n                columns={columns}\r\n                rowKey=\"_id\"\r\n                loading={isLoading}\r\n                error={isError ? error.message : null}\r\n                pagination={{ pageSize: 5 }}\r\n            />\r\n\r\n            {/* Modal pour ajouter un utilisateur */}\r\n            <Modal\r\n                title=\"Add User\"\r\n                open={isModalOpen}\r\n                onCancel={() => setIsModalOpen(false)}\r\n                footer={null}\r\n            >\r\n                <Form form={form} onFinish={handleAddUser} layout=\"vertical\" autoComplete=\"off\">\r\n                    <Form.Item label=\"Name\" name=\"name\" rules={[{ required: true, message: 'Please input the name!' }]}>\r\n                        <Input autoComplete=\"off\" />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label=\"Email or Phone\"\r\n                        name=\"username\"\r\n                        rules={[\r\n                            { required: true, message: \"Please enter your email or phone number\" },\r\n                            {\r\n                                pattern: /^([^\\s@]+@[^\\s@]+\\.[^\\s@]+|\\d{8})$/,\r\n                                message: \"Please enter a valid email or an 8-digit phone number\"\r\n                            },\r\n                            {\r\n                                validator: async (_, value) => {\r\n                                    if (value) {\r\n                                        const exists = await checkEmailExists(value);\r\n                                        if (exists) {\r\n                                            throw new Error('This username is already registered');\r\n                                        }\r\n                                    }\r\n                                    return Promise.resolve();\r\n                                },\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input autoComplete=\"off\" />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item label=\"Password\" name=\"password\" rules={[{ required: true, message: 'Please input the password!' }]}>\r\n                        <Input.Password autoComplete=\"new-password\" />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item label=\"Role\" name=\"role\" rules={[{ required: true, message: 'Please select a role!' }]}>\r\n                        <Select>\r\n                            <Select.Option value=\"EXPEDITEUR\">EXPEDITEUR</Select.Option>\r\n                            <Select.Option value=\"ADMIN\">ADMIN</Select.Option>\r\n                            <Select.Option value=\"LIVREUR\">LIVREUR</Select.Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\" block>\r\n                            Add User\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n\r\n            {/* Modal pour mettre à jour un utilisateur */}\r\n            <Modal\r\n                title=\"Update User\"\r\n                open={isUpdateModalOpen}\r\n                onCancel={() => setIsUpdateModalOpen(false)}\r\n                footer={null}\r\n            >\r\n                <Form form={form} onFinish={handleUpdateSubmit} layout=\"vertical\">\r\n                    <Form.Item label=\"Name\" name=\"name\" rules={[{ required: true, message: 'Please input the name!' }]}>\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item label=\"UserName\" name=\"username\" rules={[\r\n                        { required: true, message: \"Please enter your email or phone number\" },\r\n                        {\r\n                            pattern: /^([^\\s@]+@[^\\s@]+\\.[^\\s@]+|\\d{8})$/,\r\n                            message: \"Please enter a valid email or an 8-digit phone number\"\r\n                        },\r\n\r\n                    ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item label=\"Password\" name=\"password\" rules={[{ required: true, message: 'Please input the password!' }]}>\r\n                        <Input.Password autoComplete=\"new-password\" />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item label=\"Role\" name=\"role\" rules={[{ required: true, message: 'Please select a role!' }]}>\r\n                        <Select>\r\n                            <Select.Option value=\"EXPEDITEUR\">EXPEDITEUR</Select.Option>\r\n                            <Select.Option value=\"ADMIN\">ADMIN</Select.Option>\r\n                            <Select.Option value=\"LIVREUR\">LIVREUR</Select.Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\" block>\r\n                            Update User\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Users;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}