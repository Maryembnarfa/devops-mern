{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { group } from '@antv/vendor/d3-array';\nimport { deepMix } from '@antv/util';\nimport { subObject } from '../utils/helper';\nimport { createValueof, createDatumof, selectG2Elements, useState, renderLink, renderBackground, selectPlotArea, offsetTransform, mergeState, selectElementByData } from './utils';\n/**\n * Active a group of elements.\n */\nexport function elementSelect(root, _ref) {\n  let {\n    elements: elementsof,\n    // given the root of chart returns elements to be manipulated\n    datum,\n    // given each element returns the datum of it\n    groupKey = d => d,\n    // group elements by specified key\n    link = false,\n    // draw link or not\n    single = false,\n    // single select or not\n    coordinate,\n    background = false,\n    scale,\n    emitter,\n    state = {}\n  } = _ref;\n  var _a;\n  const elements = elementsof(root);\n  const elementSet = new Set(elements);\n  const keyGroup = group(elements, groupKey);\n  const valueof = createValueof(elements, datum);\n  const [appendLink, removeLink] = renderLink(Object.assign({\n    link,\n    elements,\n    valueof,\n    coordinate\n  }, subObject(state.selected, 'link')));\n  const [appendBackground, removeBackground] = renderBackground(Object.assign({\n    document: root.ownerDocument,\n    background,\n    coordinate,\n    scale,\n    valueof\n  }, subObject(state.selected, 'background')));\n  const elementStyle = deepMix(state, {\n    selected: Object.assign({}, ((_a = state.selected) === null || _a === void 0 ? void 0 : _a.offset) && {\n      //Apply translate to mock slice out.\n      transform: function () {\n        for (var _len = arguments.length, params = new Array(_len), _key = 0; _key < _len; _key++) {\n          params[_key] = arguments[_key];\n        }\n        const value = state.selected.offset(...params);\n        const [, i] = params;\n        return offsetTransform(elements[i], value, coordinate);\n      }\n    })\n  });\n  const {\n    setState,\n    removeState,\n    hasState\n  } = useState(elementStyle, valueof);\n  const clear = function () {\n    let nativeEvent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    for (const e of elements) {\n      removeState(e, 'selected', 'unselected');\n      removeLink(e);\n      removeBackground(e);\n    }\n    if (nativeEvent) emitter.emit('element:unselect', {\n      nativeEvent: true\n    });\n    return;\n  };\n  const singleSelect = function (event, element) {\n    let nativeEvent = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    // Clear states if clicked selected element.\n    if (hasState(element, 'selected')) clear();else {\n      const k = groupKey(element);\n      const group = keyGroup.get(k);\n      const groupSet = new Set(group);\n      for (const e of elements) {\n        if (groupSet.has(e)) setState(e, 'selected');else {\n          setState(e, 'unselected');\n          removeLink(e);\n        }\n        if (e !== element) removeBackground(e);\n      }\n      appendLink(group);\n      appendBackground(element);\n      if (!nativeEvent) return;\n      emitter.emit('element:select', Object.assign(Object.assign({}, event), {\n        nativeEvent,\n        data: {\n          data: [datum(element), ...group.map(datum)]\n        }\n      }));\n    }\n  };\n  const multipleSelect = function (event, element) {\n    let nativeEvent = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    const k = groupKey(element);\n    const group = keyGroup.get(k);\n    const groupSet = new Set(group);\n    if (!hasState(element, 'selected')) {\n      const hasSelectedGroup = group.some(e => hasState(e, 'selected'));\n      for (const e of elements) {\n        if (groupSet.has(e)) setState(e, 'selected');else if (!hasState(e, 'selected')) setState(e, 'unselected');\n      }\n      // Append link for each group only once.\n      if (!hasSelectedGroup && link) appendLink(group);\n      appendBackground(element);\n    } else {\n      // If there is no selected elements after resetting this group,\n      // clear the states.\n      const hasSelected = elements.some(e => !groupSet.has(e) && hasState(e, 'selected'));\n      if (!hasSelected) return clear();\n      // If there are still some selected elements after resetting this group,\n      // only remove the link.\n      for (const e of group) {\n        setState(e, 'unselected');\n        removeLink(e);\n        removeBackground(e);\n      }\n    }\n    if (!nativeEvent) return;\n    emitter.emit('element:select', Object.assign(Object.assign({}, event), {\n      nativeEvent,\n      data: {\n        data: elements.filter(e => hasState(e, 'selected')).map(datum)\n      }\n    }));\n  };\n  const click = event => {\n    const {\n      target: element,\n      nativeEvent = true\n    } = event;\n    // Click non-element shape, reset.\n    // Such as the rest of content area(background).\n    if (!elementSet.has(element)) return clear();\n    if (single) return singleSelect(event, element, nativeEvent);\n    return multipleSelect(event, element, nativeEvent);\n  };\n  root.addEventListener('click', click);\n  const onSelect = e => {\n    const {\n      nativeEvent,\n      data\n    } = e;\n    if (nativeEvent) return;\n    const selectedData = single ? data.data.slice(0, 1) : data.data;\n    for (const d of selectedData) {\n      const element = selectElementByData(elements, d, datum);\n      click({\n        target: element,\n        nativeEvent: false\n      });\n    }\n  };\n  const onUnSelect = () => {\n    clear(false);\n  };\n  emitter.on('element:select', onSelect);\n  emitter.on('element:unselect', onUnSelect);\n  return () => {\n    for (const e of elements) removeLink(e);\n    root.removeEventListener('click', click);\n    emitter.off('element:select', onSelect);\n    emitter.off('element:unselect', onUnSelect);\n  };\n}\nexport function ElementSelect(_a) {\n  var {\n      createGroup,\n      background = false,\n      link = false\n    } = _a,\n    rest = __rest(_a, [\"createGroup\", \"background\", \"link\"]);\n  return (context, _, emitter) => {\n    const {\n      container,\n      view,\n      options\n    } = context;\n    const {\n      coordinate,\n      scale\n    } = view;\n    const plotArea = selectPlotArea(container);\n    return elementSelect(plotArea, Object.assign({\n      elements: selectG2Elements,\n      datum: createDatumof(view),\n      groupKey: createGroup ? createGroup(view) : undefined,\n      coordinate,\n      scale,\n      state: mergeState(options, [['selected', background ? {} : {\n        lineWidth: '1',\n        stroke: '#000'\n      }], 'unselected']),\n      background,\n      link,\n      emitter\n    }, rest));\n  };\n}\nElementSelect.props = {\n  reapplyWhenUpdate: true\n};","map":{"version":3,"names":["group","deepMix","subObject","createValueof","createDatumof","selectG2Elements","useState","renderLink","renderBackground","selectPlotArea","offsetTransform","mergeState","selectElementByData","elementSelect","root","_ref","elements","elementsof","datum","groupKey","d","link","single","coordinate","background","scale","emitter","state","elementSet","Set","keyGroup","valueof","appendLink","removeLink","Object","assign","selected","appendBackground","removeBackground","document","ownerDocument","elementStyle","_a","offset","transform","_len","arguments","length","params","Array","_key","value","i","setState","removeState","hasState","clear","nativeEvent","undefined","e","emit","singleSelect","event","element","k","get","groupSet","has","data","map","multipleSelect","hasSelectedGroup","some","hasSelected","filter","click","target","addEventListener","onSelect","selectedData","slice","onUnSelect","on","removeEventListener","off","ElementSelect","createGroup","rest","__rest","context","_","container","view","options","plotArea","lineWidth","stroke","props","reapplyWhenUpdate"],"sources":["interaction/elementSelect.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}