{"ast":null,"code":"import { show } from '../utils/style';\nconst adjustPosition = (target, edge) => {\n  const [[minEdgeX, minEdgeY], [maxEdgeX, maxEdgeY]] = edge;\n  const [[minX, minY], [maxX, maxY]] = target;\n  let changeX = 0,\n    changeY = 0;\n  // x-axis\n  if (minX < minEdgeX) {\n    changeX = minEdgeX - minX;\n  } else if (maxX > maxEdgeX) {\n    changeX = maxEdgeX - maxX;\n  }\n  // y-axis\n  if (minY < minEdgeY) {\n    changeY = minEdgeY - minY;\n  } else if (maxY > maxEdgeY) {\n    changeY = maxEdgeY - maxY;\n  }\n  return [changeX, changeY];\n};\n/**\n * adjust the label when exceed the plot\n */\nexport const ExceedAdjust = () => {\n  return (labels, {\n    canvas,\n    layout\n  }) => {\n    labels.forEach(l => {\n      show(l);\n      const {\n        max,\n        min\n      } = l.getRenderBounds();\n      const [xMax, yMax] = max,\n        [xMin, yMin] = min;\n      const changeValue = adjustPosition([[xMin, yMin], [xMax, yMax]],\n      // Prevent label overlap in multiple charts by calculating layouts separately to avoid collisions.\n      [[layout.x, layout.y], [layout.x + layout.width, layout.y + layout.height]]);\n      // For label with connectorPoints\n      if (l.style.connector && l.style.connectorPoints) {\n        l.style.connectorPoints[0][0] -= changeValue[0];\n        l.style.connectorPoints[0][1] -= changeValue[1];\n      }\n      l.style.x += changeValue[0];\n      l.style.y += changeValue[1];\n    });\n    return labels;\n  };\n};","map":{"version":3,"names":["show","adjustPosition","target","edge","minEdgeX","minEdgeY","maxEdgeX","maxEdgeY","minX","minY","maxX","maxY","changeX","changeY","ExceedAdjust","labels","canvas","layout","forEach","l","max","min","getRenderBounds","xMax","yMax","xMin","yMin","changeValue","x","y","width","height","style","connector","connectorPoints"],"sources":["label-transform/exceedAdjust.ts"],"sourcesContent":[null],"mappings":"AAIA,SAASA,IAAI,QAAQ,gBAAgB;AAErC,MAAMC,cAAc,GAAGA,CAACC,MAAc,EAAEC,IAAY,KAAI;EACtD,MAAM,CAAC,CAACC,QAAQ,EAAEC,QAAQ,CAAC,EAAE,CAACC,QAAQ,EAAEC,QAAQ,CAAC,CAAC,GAAGJ,IAAI;EACzD,MAAM,CAAC,CAACK,IAAI,EAAEC,IAAI,CAAC,EAAE,CAACC,IAAI,EAAEC,IAAI,CAAC,CAAC,GAAGT,MAAM;EAE3C,IAAIU,OAAO,GAAG,CAAC;IACbC,OAAO,GAAG,CAAC;EAEb;EACA,IAAIL,IAAI,GAAGJ,QAAQ,EAAE;IACnBQ,OAAO,GAAGR,QAAQ,GAAGI,IAAI;GAC1B,MAAM,IAAIE,IAAI,GAAGJ,QAAQ,EAAE;IAC1BM,OAAO,GAAGN,QAAQ,GAAGI,IAAI;;EAG3B;EACA,IAAID,IAAI,GAAGJ,QAAQ,EAAE;IACnBQ,OAAO,GAAGR,QAAQ,GAAGI,IAAI;GAC1B,MAAM,IAAIE,IAAI,GAAGJ,QAAQ,EAAE;IAC1BM,OAAO,GAAGN,QAAQ,GAAGI,IAAI;;EAG3B,OAAO,CAACC,OAAO,EAAEC,OAAO,CAAC;AAC3B,CAAC;AAID;;;AAGA,OAAO,MAAMC,YAAY,GAA6BA,CAAA,KAAK;EACzD,OAAO,CAACC,MAAuB,EAAE;IAAEC,MAAM;IAAEC;EAAM,CAAE,KAAI;IACrDF,MAAM,CAACG,OAAO,CAAEC,CAAC,IAAI;MACnBnB,IAAI,CAACmB,CAAC,CAAC;MACP,MAAM;QAAEC,GAAG;QAAEC;MAAG,CAAE,GAAGF,CAAC,CAACG,eAAe,EAAE;MACxC,MAAM,CAACC,IAAI,EAAEC,IAAI,CAAC,GAAGJ,GAAG;QACtB,CAACK,IAAI,EAAEC,IAAI,CAAC,GAAGL,GAAG;MACpB,MAAMM,WAAW,GAAG1B,cAAc,CAChC,CACE,CAACwB,IAAI,EAAEC,IAAI,CAAC,EACZ,CAACH,IAAI,EAAEC,IAAI,CAAC,CACb;MACD;MACA,CACE,CAACP,MAAM,CAACW,CAAC,EAAEX,MAAM,CAACY,CAAC,CAAC,EACpB,CAACZ,MAAM,CAACW,CAAC,GAAGX,MAAM,CAACa,KAAK,EAAEb,MAAM,CAACY,CAAC,GAAGZ,MAAM,CAACc,MAAM,CAAC,CACpD,CACF;MACD;MACA,IAAIZ,CAAC,CAACa,KAAK,CAACC,SAAS,IAAId,CAAC,CAACa,KAAK,CAACE,eAAe,EAAE;QAChDf,CAAC,CAACa,KAAK,CAACE,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAIP,WAAW,CAAC,CAAC,CAAC;QAC/CR,CAAC,CAACa,KAAK,CAACE,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAIP,WAAW,CAAC,CAAC,CAAC;;MAEjDR,CAAC,CAACa,KAAK,CAACJ,CAAC,IAAID,WAAW,CAAC,CAAC,CAAC;MAC3BR,CAAC,CAACa,KAAK,CAACH,CAAC,IAAIF,WAAW,CAAC,CAAC,CAAC;IAC7B,CAAC,CAAC;IAEF,OAAOZ,MAAM;EACf,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}