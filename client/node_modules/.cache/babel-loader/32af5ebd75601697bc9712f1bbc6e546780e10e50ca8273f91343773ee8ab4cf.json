{"ast":null,"code":"import { Group, Rect, Circle, Path, Text, Ellipse, Image, Line, Polygon, Polyline, HTML } from '@antv/g';\nimport { group } from '@antv/vendor/d3-array';\nimport { error } from './helper';\nexport function select(node) {\n  return new Selection([node], null, node, node.ownerDocument);\n}\n/**\n * A simple implementation of d3-selection for @antv/g.\n * It has the core features of d3-selection and extended ability.\n * Every methods of selection returns new selection if elements\n * are mutated(e.g. append, remove), otherwise return the selection itself(e.g. attr, style).\n * @see https://github.com/d3/d3-selection\n * @see https://github.com/antvis/g\n * @todo Nested selections.\n * @todo More useful functor.\n */\nexport class Selection {\n  constructor() {\n    let elements = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    let data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let parent = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    let document = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n    let selections = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [null, null, null, null, null];\n    let transitions = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : [];\n    let updateElements = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : [];\n    this._elements = Array.from(elements);\n    this._data = data;\n    this._parent = parent;\n    this._document = document;\n    this._enter = selections[0];\n    this._update = selections[1];\n    this._exit = selections[2];\n    this._merge = selections[3];\n    this._split = selections[4];\n    this._transitions = transitions;\n    this._facetElements = updateElements;\n  }\n  selectAll(selector) {\n    const elements = typeof selector === 'string' ? this._parent.querySelectorAll(selector) : selector;\n    return new Selection(elements, null, this._elements[0], this._document);\n  }\n  selectFacetAll(selector) {\n    const elements = typeof selector === 'string' ? this._parent.querySelectorAll(selector) : selector;\n    return new Selection(this._elements, null, this._parent, this._document, undefined, undefined, elements);\n  }\n  /**\n   * @todo Replace with querySelector which has bug now.\n   */\n  select(selector) {\n    const element = typeof selector === 'string' ? this._parent.querySelectorAll(selector)[0] || null : selector;\n    return new Selection([element], null, element, this._document);\n  }\n  append(node) {\n    const callback = typeof node === 'function' ? node : () => this.createElement(node);\n    const elements = [];\n    if (this._data !== null) {\n      // For empty selection, append new element to parent.\n      // Each element is bind with datum.\n      for (let i = 0; i < this._data.length; i++) {\n        const d = this._data[i];\n        const [datum, from] = Array.isArray(d) ? d : [d, null];\n        const newElement = callback(datum, i);\n        newElement.__data__ = datum;\n        if (from !== null) newElement.__fromElements__ = from;\n        this._parent.appendChild(newElement);\n        elements.push(newElement);\n      }\n      return new Selection(elements, null, this._parent, this._document);\n    } else {\n      // For non-empty selection, append new element to\n      // selected element and return new selection.\n      for (let i = 0; i < this._elements.length; i++) {\n        const element = this._elements[i];\n        const datum = element.__data__;\n        const newElement = callback(datum, i);\n        element.appendChild(newElement);\n        elements.push(newElement);\n      }\n      return new Selection(elements, null, elements[0], this._document);\n    }\n  }\n  maybeAppend(id, node, className) {\n    const element = this._elements[0];\n    const child = element.getElementById(id);\n    if (child) {\n      return new Selection([child], null, this._parent, this._document);\n    }\n    const newChild = typeof node === 'string' ? this.createElement(node) : node();\n    newChild.id = id;\n    if (className) newChild.className = className;\n    element.appendChild(newChild);\n    return new Selection([newChild], null, this._parent, this._document);\n  }\n  /**\n   * Bind data to elements, and produce three selection:\n   * Enter: Selection with empty elements and data to be bind to elements.\n   * Update: Selection with elements to be updated.\n   * Exit: Selection with elements to be removed.\n   */\n  data(data) {\n    let id = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : d => d;\n    let groupId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : () => null;\n    // An Array of new data.\n    const enter = [];\n    // An Array of elements to be updated.\n    const update = [];\n    // A Set of elements to be removed.\n    const exit = new Set(this._elements);\n    // An Array of data to be merged into one element.\n    const merge = [];\n    // A Set of elements to be split into multiple datum.\n    const split = new Set();\n    // A Map from key to each element.\n    const keyElement = new Map(this._elements.map((d, i) => [id(d.__data__, i), d]));\n    // A Map from key to exist element. The Update Selection\n    // can get element from this map, this is for diff among\n    // facets.\n    const keyUpdateElement = new Map(this._facetElements.map((d, i) => [id(d.__data__, i), d]));\n    // A Map from groupKey to a group of elements.\n    const groupKeyElements = group(this._elements, d => groupId(d.__data__));\n    // Diff data with selection(elements with data).\n    // !!! Note\n    // The switch is strictly ordered, not not change the order of them.\n    for (let i = 0; i < data.length; i++) {\n      const datum = data[i];\n      const key = id(datum, i);\n      const groupKey = groupId(datum, i);\n      // Append element to update selection if incoming data has\n      // exactly the same key with elements.\n      if (keyElement.has(key)) {\n        const element = keyElement.get(key);\n        element.__data__ = datum;\n        element.__facet__ = false;\n        update.push(element);\n        exit.delete(element);\n        keyElement.delete(key);\n        // Append element to update selection if incoming data has\n        // exactly the same key with updateElements.\n      } else if (keyUpdateElement.has(key)) {\n        const element = keyUpdateElement.get(key);\n        element.__data__ = datum;\n        // Flag this element should update its parentNode.\n        element.__facet__ = true;\n        update.push(element);\n        keyUpdateElement.delete(key);\n        // Append datum to merge selection if existed elements has\n        // its key as groupKey.\n      } else if (groupKeyElements.has(key)) {\n        const group = groupKeyElements.get(key);\n        merge.push([datum, group]);\n        for (const element of group) exit.delete(element);\n        groupKeyElements.delete(key);\n        // Append element to split selection if incoming data has\n        // groupKey as its key, and bind to datum for it.\n      } else if (keyElement.has(groupKey)) {\n        const element = keyElement.get(groupKey);\n        if (element.__toData__) element.__toData__.push(datum);else element.__toData__ = [datum];\n        split.add(element);\n        exit.delete(element);\n      } else {\n        // @todo Data with non-unique key.\n        enter.push(datum);\n      }\n    }\n    // Create new selection with enter, update and exit.\n    const S = [new Selection([], enter, this._parent, this._document), new Selection(update, null, this._parent, this._document), new Selection(exit, null, this._parent, this._document), new Selection([], merge, this._parent, this._document), new Selection(split, null, this._parent, this._document)];\n    return new Selection(this._elements, null, this._parent, this._document, S);\n  }\n  merge(other) {\n    const elements = [...this._elements, ...other._elements];\n    const transitions = [...this._transitions, ...other._transitions];\n    return new Selection(elements, null, this._parent, this._document, undefined, transitions);\n  }\n  createElement(type) {\n    if (this._document) {\n      return this._document.createElement(type, {});\n    }\n    const Ctor = Selection.registry[type];\n    if (Ctor) return new Ctor();\n    return error(`Unknown node type: ${type}`);\n  }\n  /**\n   * Apply callback for each selection(enter, update, exit)\n   * and merge them into one selection.\n   */\n  join() {\n    let enter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : d => d;\n    let update = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : d => d;\n    let exit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : d => d.remove();\n    let merge = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : d => d;\n    let split = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : d => d.remove();\n    const newEnter = enter(this._enter);\n    const newUpdate = update(this._update);\n    const newExit = exit(this._exit);\n    const newMerge = merge(this._merge);\n    const newSplit = split(this._split);\n    return newUpdate.merge(newEnter).merge(newExit).merge(newMerge).merge(newSplit);\n  }\n  remove() {\n    // Remove node immediately if there is no transition,\n    // otherwise wait until transition finished.\n    for (let i = 0; i < this._elements.length; i++) {\n      const transition = this._transitions[i];\n      if (transition) {\n        const T = Array.isArray(transition) ? transition : [transition];\n        Promise.all(T.map(d => d.finished)).then(() => {\n          const element = this._elements[i];\n          element.remove();\n        });\n      } else {\n        const element = this._elements[i];\n        element.remove();\n      }\n    }\n    return new Selection([], null, this._parent, this._document, undefined, this._transitions);\n  }\n  each(callback) {\n    for (let i = 0; i < this._elements.length; i++) {\n      const element = this._elements[i];\n      const datum = element.__data__;\n      callback(datum, i, element);\n    }\n    return this;\n  }\n  attr(key, value) {\n    const callback = typeof value !== 'function' ? () => value : value;\n    return this.each(function (d, i, element) {\n      if (value !== undefined) element[key] = callback(d, i, element);\n    });\n  }\n  style(key, value) {\n    const callback = typeof value !== 'function' ? () => value : value;\n    return this.each(function (d, i, element) {\n      if (value !== undefined) element.style[key] = callback(d, i, element);\n    });\n  }\n  transition(value) {\n    const callback = typeof value !== 'function' ? () => value : value;\n    const {\n      _transitions: T\n    } = this;\n    return this.each(function (d, i, element) {\n      T[i] = callback(d, i, element);\n    });\n  }\n  on(event, handler) {\n    this.each(function (d, i, element) {\n      element.addEventListener(event, handler);\n    });\n    return this;\n  }\n  call(callback) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    callback(this, ...args);\n    return this;\n  }\n  node() {\n    return this._elements[0];\n  }\n  nodes() {\n    return this._elements;\n  }\n  transitions() {\n    return this._transitions;\n  }\n  parent() {\n    return this._parent;\n  }\n}\nSelection.registry = {\n  g: Group,\n  rect: Rect,\n  circle: Circle,\n  path: Path,\n  text: Text,\n  ellipse: Ellipse,\n  image: Image,\n  line: Line,\n  polygon: Polygon,\n  polyline: Polyline,\n  html: HTML\n};","map":{"version":3,"names":["Group","Rect","Circle","Path","Text","Ellipse","Image","Line","Polygon","Polyline","HTML","group","error","select","node","Selection","ownerDocument","constructor","elements","arguments","length","undefined","data","parent","document","selections","transitions","updateElements","_elements","Array","from","_data","_parent","_document","_enter","_update","_exit","_merge","_split","_transitions","_facetElements","selectAll","selector","querySelectorAll","selectFacetAll","element","append","callback","createElement","i","d","datum","isArray","newElement","__data__","__fromElements__","appendChild","push","maybeAppend","id","className","child","getElementById","newChild","groupId","enter","update","exit","Set","merge","split","keyElement","Map","map","keyUpdateElement","groupKeyElements","key","groupKey","has","get","__facet__","delete","__toData__","add","S","other","type","Ctor","registry","join","remove","newEnter","newUpdate","newExit","newMerge","newSplit","transition","T","Promise","all","finished","then","each","attr","value","style","on","event","handler","addEventListener","call","_len","args","_key","nodes","g","rect","circle","path","text","ellipse","image","line","polygon","polyline","html"],"sources":["utils/selection.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}