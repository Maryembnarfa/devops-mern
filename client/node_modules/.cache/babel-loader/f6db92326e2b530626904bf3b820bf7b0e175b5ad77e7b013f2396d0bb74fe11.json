{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Desktop\\\\LIVRAISON\\\\client\\\\src\\\\pages\\\\runSheet\\\\listRunSheet.jsx\",\n  _s = $RefreshSig$();\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport React, { useState } from 'react';\nimport { EditOutlined, DeleteOutlined, EyeOutlined } from '@ant-design/icons';\nimport { Select, Table, message, Button, Modal } from 'antd';\nimport { axiosInstance } from \"../../lib/axios\";\nimport AddRunSheet from \"./addRunSheet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\nconst RunSheet = () => {\n  _s();\n  const [open, setOpen] = useState(false);\n  const [openView, setOpenView] = useState(false);\n  const [openRetourD, setOpenRetourD] = useState(false); // État pour la modal RetourD\n  const [openLivré, setOpenLivré] = useState(false); // État pour la modal Valider\n  const [id, setId] = useState();\n  const [selectedRunSheet, setSelectedRunSheet] = useState(null);\n  const [selectedLivraisons, setSelectedLivraisons] = useState([]);\n  const queryClient = useQueryClient();\n\n  // Récupérer les données des vehicles\n  const {\n    data,\n    isLoading\n  } = useQuery({\n    queryKey: [\"runSheet\"],\n    queryFn: async () => {\n      const response = await axiosInstance.get(\"/runSheet\");\n      return response.data;\n    },\n    onError: error => {\n      message.error('`Erreur lors du chargement des runSheet: ${error.message}`');\n    }\n  });\n\n  // Mutation pour supprimer une vehicule\n  const {\n    mutate: deleteRunSheet\n  } = useMutation({\n    mutationFn: async id => {\n      console.log(\"Attempting to delete runSheet with ID:\", id);\n      const response = await axiosInstance.delete(`/runSheet/${id}`);\n      return response.data;\n    },\n    onSuccess: () => {\n      message.success(\"runSheet supprimée avec succès\");\n      queryClient.invalidateQueries([\"runSheet\"]); // Rafraîchir les données\n    },\n    onError: error => {\n      message.error(`Erreur lors de la suppression: ${error.message}`);\n    }\n  });\n  // Fonction pour confirmer la suppression\n  const showDeleteConfirm = id => {\n    Modal.confirm({\n      title: \"Êtes-vous sûr de vouloir supprimer cette runsheet ?\",\n      okText: \"Oui\",\n      okType: \"danger\",\n      cancelText: \"Non\",\n      onOk() {\n        deleteRunSheet(id); // Appeler la mutation de suppression\n      }\n    });\n  };\n  // Fonction pour afficher les détails d'une livraison\n  const handleViewRunSheet = record => {\n    setSelectedRunSheet(record); // Stocker les données de la livraison sélectionnée\n    setOpenView(true); // Ouvrir la modal\n  };\n\n  // Récupérer les données des véhicules\n\n  const {\n    data: vehicles,\n    isLoading: isVehiclesLoading\n  } = useQuery({\n    queryKey: [\"vehicle\"],\n    queryFn: async () => {\n      const response = await axiosInstance.get(\"/vehicle\");\n      console.log('Vehicles loaded:', response.data); // Add this line to debug\n      return response.data;\n    },\n    onError: error => {\n      message.error(`Erreur lors du chargement des véhicules: ${error.message}`);\n    }\n  });\n  // Récupérer les données des livraisons\n  const {\n    data: livraisons,\n    isLoading: isLivraisonsLoading\n  } = useQuery({\n    queryKey: [\"livraisons\"],\n    queryFn: async () => {\n      const response = await axiosInstance.get(\"/delivry\");\n      return response.data;\n    },\n    onError: error => {\n      message.error(`Erreur lors du chargement des livraisons: ${error.message}`);\n    }\n  });\n  // Filtrer les livraisons avec le statut \"EnDepot\"\n  const livraisonsEnDepot = (livraisons === null || livraisons === void 0 ? void 0 : livraisons.filter(livraison => livraison.status === \"EnDepot\")) || [];\n  // Récupérer les données des users\n  const {\n    data: users,\n    isLoading: isUsersLoading\n  } = useQuery({\n    queryKey: [\"users\"],\n    queryFn: async () => {\n      const response = await axiosInstance.get(\"/users\");\n      console.log('Users loaded:', response.data); // Pour débugger\n      return response.data;\n    },\n    onError: error => {\n      message.error(`Erreur lors du chargement des utilisateurs: ${error.message}`);\n    }\n  });\n\n  // Filtrer les utilisateurs pour n'avoir que les livreurs\n  const livreurs = (users === null || users === void 0 ? void 0 : users.filter(user => user.role === \"LIVREUR\")) || [];\n\n  // Fonction pour afficher la modal RetourD\n  const handleRetourD = record => {\n    setSelectedRunSheet(record); // Stocker les données de la RunSheet sélectionnée\n    setOpenRetourD(true); // Ouvrir la modal RetourD\n  };\n  const handleValider = record => {\n    setSelectedRunSheet(record); // Stocker les données de la RunSheet sélectionnée\n    setOpenLivré(true); // Ouvrir la modal Valider\n  };\n\n  // Fonction pour mettre à jour le statut des livraisons sélectionnées\n  const handleUpdateStatus = async status => {\n    try {\n      // Envoyer une requête pour mettre à jour le statut des livraisons sélectionnées\n      await axiosInstance.put(`/runSheet/${selectedRunSheet._id}/updateStatus`, {\n        livraisons: selectedLivraisons,\n        // Les livraisons sélectionnées\n        status: status // Nouveau statut (RetourE ou RetourD)\n      });\n      message.success(`Statut des livraisons mis à jour avec succès (${status})`);\n      setOpenRetourD(false); // Fermer la modal RetourD\n      setOpenLivré(false); // // Fermer la modal Valider\n      queryClient.invalidateQueries([\"runSheet\"]); // Rafraîchir les données\n    } catch (error) {\n      message.error(`Erreur lors de la mise à jour du statut: ${error.message}`);\n    }\n  };\n  const columns = [{\n    title: 'Code',\n    dataIndex: 'code',\n    key: 'code'\n  }, {\n    title: 'Serie',\n    dataIndex: 'serie',\n    key: 'serie'\n  }, {\n    title: 'Livreur',\n    dataIndex: 'name_livreur',\n    key: 'name_livreur'\n  }, {\n    title: 'Livraisons',\n    dataIndex: 'livraisons',\n    key: 'Livraisons',\n    render: livraisons => Array.isArray(livraisons) ? livraisons.join(', ') : livraisons\n  }, {\n    title: 'Actions',\n    key: 'actions',\n    render: (text, record) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          backgroundColor: '#ffbb96',\n          borderColor: '#ffbb96',\n          color: 'black'\n        },\n        onClick: () => handleRetourD(record),\n        children: \"RetourD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          backgroundColor: '#d3adf7',\n          borderColor: '#d3adf7',\n          color: 'black'\n        },\n        onClick: () => handleValider(record),\n        children: \"Valider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(EyeOutlined, {\n        style: {\n          fontSize: '18px',\n          cursor: 'pointer'\n        },\n        onClick: () => handleViewRunSheet(record) // Fonction d'affichage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(DeleteOutlined, {\n        style: {\n          fontSize: '18px',\n          cursor: 'pointer'\n        },\n        onClick: () => showDeleteConfirm(record._id) // Fonction de suppression\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\",\n        textAlign: \"right\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: () => setOpen(true),\n        style: {\n          padding: \"10px 20px\",\n          fontSize: \"15px\",\n          height: \"40px\",\n          width: \"160px\",\n          backgroundColor: \"rgb(189, 37, 27)\",\n          borderColor: \"rgb(189, 37, 27)\"\n        },\n        children: \"Add RunSheet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      dataSource: data,\n      columns: columns,\n      rowKey: \"_id\",\n      loading: isLoading,\n      pagination: {\n        pageSize: 5\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddRunSheet, {\n      open: open,\n      setOpen: setOpen,\n      vehicles: vehicles,\n      livreurs: livreurs,\n      livraisons: livraisonsEnDepot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: openView,\n      onCancel: () => setOpenView(false),\n      footer: null // Pas de boutons dans le footer\n      ,\n      children: selectedRunSheet && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Serie:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 28\n          }, this), \" \", selectedRunSheet.serie]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Livreur:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 28\n          }, this), \" \", selectedRunSheet.name_livreur]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Livraisons:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 28\n          }, this), \" \", selectedRunSheet.livraisons.join(\", \")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: openRetourD,\n      onCancel: () => setOpenRetourD(false),\n      footer: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setOpenRetourD(false),\n        children: \"Annuler\"\n      }, \"back\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: () => handleUpdateStatus(\"RetourD\"),\n        children: \"Confirmer\"\n      }, \"submit\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 21\n      }, this)],\n      children: selectedRunSheet && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Changer le statut des livraisons pour \", selectedRunSheet.code]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          mode: \"multiple\" // Permettre la sélection multiple\n          ,\n          placeholder: \"S\\xE9lectionnez les livraisons\",\n          style: {\n            width: '100%'\n          },\n          onChange: values => setSelectedLivraisons(values) // Stocker les livraisons sélectionnées\n          ,\n          children: selectedRunSheet.livraisons.map((livraison, index) => /*#__PURE__*/_jsxDEV(Option, {\n            value: livraison,\n            children: livraison\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: openLivré,\n      onCancel: () => setOpenLivré(false),\n      footer: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setOpenLivré(false),\n        children: \"Annuler\"\n      }, \"back\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: () => handleUpdateStatus(\"Livré\"),\n        children: \"Confirmer\"\n      }, \"submit\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 21\n      }, this)],\n      children: selectedRunSheet && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Changer le statut des livraisons pour \", selectedRunSheet.code]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          mode: \"multiple\" // Permettre la sélection multiple\n          ,\n          placeholder: \"S\\xE9lectionnez les livraisons\",\n          style: {\n            width: '100%'\n          },\n          onChange: values => setSelectedLivraisons(values) // Stocker les livraisons sélectionnées\n          ,\n          children: selectedRunSheet.livraisons.map((livraison, index) => /*#__PURE__*/_jsxDEV(Option, {\n            value: livraison,\n            children: livraison\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 9\n  }, this);\n};\n_s(RunSheet, \"nP+wr+Sc5JcRuVku0y38OV3ff3Q=\", false, function () {\n  return [useQueryClient, useQuery, useMutation, useQuery, useQuery, useQuery];\n});\n_c = RunSheet;\nexport default RunSheet;\nvar _c;\n$RefreshReg$(_c, \"RunSheet\");","map":{"version":3,"names":["useQuery","useMutation","useQueryClient","React","useState","EditOutlined","DeleteOutlined","EyeOutlined","Select","Table","message","Button","Modal","axiosInstance","AddRunSheet","jsxDEV","_jsxDEV","Option","RunSheet","_s","open","setOpen","openView","setOpenView","openRetourD","setOpenRetourD","openLivré","setOpenLivré","id","setId","selectedRunSheet","setSelectedRunSheet","selectedLivraisons","setSelectedLivraisons","queryClient","data","isLoading","queryKey","queryFn","response","get","onError","error","mutate","deleteRunSheet","mutationFn","console","log","delete","onSuccess","success","invalidateQueries","showDeleteConfirm","confirm","title","okText","okType","cancelText","onOk","handleViewRunSheet","record","vehicles","isVehiclesLoading","livraisons","isLivraisonsLoading","livraisonsEnDepot","filter","livraison","status","users","isUsersLoading","livreurs","user","role","handleRetourD","handleValider","handleUpdateStatus","put","_id","columns","dataIndex","key","render","Array","isArray","join","text","style","display","gap","children","backgroundColor","borderColor","color","onClick","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","cursor","marginBottom","textAlign","type","padding","height","width","dataSource","rowKey","loading","pagination","pageSize","onCancel","footer","serie","name_livreur","code","mode","placeholder","onChange","values","map","index","value","_c","$RefreshReg$"],"sources":["C:/Users/Hp/Desktop/LIVRAISON/client/src/pages/runSheet/listRunSheet.jsx"],"sourcesContent":["import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\r\nimport React, { useState } from 'react';\r\nimport { EditOutlined, DeleteOutlined, EyeOutlined } from '@ant-design/icons';\r\nimport { Select, Table, message, Button, Modal } from 'antd';\r\nimport { axiosInstance } from \"../../lib/axios\";\r\nimport AddRunSheet from \"./addRunSheet\";\r\nconst { Option } = Select;\r\n\r\n\r\nconst RunSheet = () => {\r\n    const [open, setOpen] = useState(false);\r\n    const [openView, setOpenView] = useState(false);\r\n    const [openRetourD, setOpenRetourD] = useState(false); // État pour la modal RetourD\r\n    const [openLivré, setOpenLivré] = useState(false); // État pour la modal Valider\r\n    const [id, setId] = useState();\r\n    const [selectedRunSheet, setSelectedRunSheet] = useState(null);\r\n    const [selectedLivraisons, setSelectedLivraisons] = useState([]);\r\n    const queryClient = useQueryClient();\r\n\r\n    // Récupérer les données des vehicles\r\n    const { data, isLoading } = useQuery({\r\n        queryKey: [\"runSheet\"],\r\n        queryFn: async () => {\r\n            const response = await axiosInstance.get(\"/runSheet\");\r\n            return response.data;\r\n        },\r\n        onError: (error) => {\r\n            message.error('`Erreur lors du chargement des runSheet: ${error.message}`')\r\n        },\r\n    });\r\n\r\n    // Mutation pour supprimer une vehicule\r\n    const { mutate: deleteRunSheet } = useMutation({\r\n        mutationFn: async (id) => {\r\n            console.log(\"Attempting to delete runSheet with ID:\", id);\r\n            const response = await axiosInstance.delete(`/runSheet/${id}`);\r\n            return response.data;\r\n        },\r\n        onSuccess: () => {\r\n            message.success(\"runSheet supprimée avec succès\");\r\n            queryClient.invalidateQueries([\"runSheet\"]); // Rafraîchir les données\r\n        },\r\n        onError: (error) => {\r\n            message.error(`Erreur lors de la suppression: ${error.message}`);\r\n        },\r\n    });\r\n    // Fonction pour confirmer la suppression\r\n    const showDeleteConfirm = (id) => {\r\n        Modal.confirm({\r\n            title: \"Êtes-vous sûr de vouloir supprimer cette runsheet ?\",\r\n            okText: \"Oui\",\r\n            okType: \"danger\",\r\n            cancelText: \"Non\",\r\n            onOk() {\r\n                deleteRunSheet(id); // Appeler la mutation de suppression\r\n            },\r\n        });\r\n    };\r\n    // Fonction pour afficher les détails d'une livraison\r\n    const handleViewRunSheet = (record) => {\r\n        setSelectedRunSheet(record); // Stocker les données de la livraison sélectionnée\r\n        setOpenView(true); // Ouvrir la modal\r\n    };\r\n\r\n\r\n    // Récupérer les données des véhicules\r\n\r\n    const { data: vehicles, isLoading: isVehiclesLoading } = useQuery({\r\n        queryKey: [\"vehicle\"],\r\n        queryFn: async () => {\r\n            const response = await axiosInstance.get(\"/vehicle\");\r\n            console.log('Vehicles loaded:', response.data); // Add this line to debug\r\n            return response.data;\r\n        },\r\n        onError: (error) => {\r\n            message.error(`Erreur lors du chargement des véhicules: ${error.message}`);\r\n        },\r\n    });\r\n    // Récupérer les données des livraisons\r\n    const { data: livraisons, isLoading: isLivraisonsLoading } = useQuery({\r\n        queryKey: [\"livraisons\"],\r\n        queryFn: async () => {\r\n            const response = await axiosInstance.get(\"/delivry\");\r\n            return response.data;\r\n        },\r\n        onError: (error) => {\r\n            message.error(`Erreur lors du chargement des livraisons: ${error.message}`);\r\n        },\r\n    });\r\n    // Filtrer les livraisons avec le statut \"EnDepot\"\r\n    const livraisonsEnDepot = livraisons?.filter(livraison => livraison.status === \"EnDepot\") || [];\r\n    // Récupérer les données des users\r\n    const { data: users, isLoading: isUsersLoading } = useQuery({\r\n        queryKey: [\"users\"],\r\n        queryFn: async () => {\r\n            const response = await axiosInstance.get(\"/users\");\r\n            console.log('Users loaded:', response.data); // Pour débugger\r\n            return response.data;\r\n        },\r\n        onError: (error) => {\r\n            message.error(`Erreur lors du chargement des utilisateurs: ${error.message}`);\r\n        },\r\n    });\r\n\r\n    // Filtrer les utilisateurs pour n'avoir que les livreurs\r\n    const livreurs = users?.filter(user => user.role === \"LIVREUR\") || [];\r\n\r\n\r\n\r\n    // Fonction pour afficher la modal RetourD\r\n    const handleRetourD = (record) => {\r\n        setSelectedRunSheet(record); // Stocker les données de la RunSheet sélectionnée\r\n        setOpenRetourD(true); // Ouvrir la modal RetourD\r\n    };\r\n\r\n    const handleValider = (record) => {\r\n        setSelectedRunSheet(record); // Stocker les données de la RunSheet sélectionnée\r\n        setOpenLivré(true); // Ouvrir la modal Valider\r\n    };\r\n\r\n    // Fonction pour mettre à jour le statut des livraisons sélectionnées\r\n    const handleUpdateStatus = async (status) => {\r\n        try {\r\n            // Envoyer une requête pour mettre à jour le statut des livraisons sélectionnées\r\n            await axiosInstance.put(`/runSheet/${selectedRunSheet._id}/updateStatus`, {\r\n                livraisons: selectedLivraisons, // Les livraisons sélectionnées\r\n                status: status // Nouveau statut (RetourE ou RetourD)\r\n            });\r\n\r\n            message.success(`Statut des livraisons mis à jour avec succès (${status})`);\r\n\r\n            setOpenRetourD(false); // Fermer la modal RetourD\r\n            setOpenLivré(false);// // Fermer la modal Valider\r\n            queryClient.invalidateQueries([\"runSheet\"]); // Rafraîchir les données\r\n        } catch (error) {\r\n            message.error(`Erreur lors de la mise à jour du statut: ${error.message}`);\r\n        }\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Code',\r\n            dataIndex: 'code',\r\n            key: 'code',\r\n        },\r\n        {\r\n            title: 'Serie',\r\n            dataIndex: 'serie',\r\n            key: 'serie',\r\n        },\r\n        {\r\n            title: 'Livreur',\r\n            dataIndex: 'name_livreur',\r\n            key: 'name_livreur',\r\n        },\r\n        {\r\n            title: 'Livraisons',\r\n            dataIndex: 'livraisons',\r\n            key: 'Livraisons',\r\n            render: (livraisons) => Array.isArray(livraisons) ? livraisons.join(', ') : livraisons\r\n\r\n        },\r\n\r\n        {\r\n            title: 'Actions',\r\n            key: 'actions',\r\n            render: (text, record) => (\r\n                <div style={{ display: 'flex', gap: '10px' }}>\r\n                    <Button style={{ backgroundColor: '#ffbb96', borderColor: '#ffbb96', color: 'black' }}\r\n                        onClick={() => handleRetourD(record)}>\r\n                        RetourD\r\n                    </Button>\r\n                    <Button style={{ backgroundColor: '#d3adf7', borderColor: '#d3adf7', color: 'black' }}\r\n                        onClick={() => handleValider(record)}>\r\n                        Valider\r\n                    </Button>\r\n                    <EyeOutlined\r\n                        style={{ fontSize: '18px', cursor: 'pointer' }}\r\n                        onClick={() => handleViewRunSheet(record)} // Fonction d'affichage\r\n                    />\r\n                    <DeleteOutlined\r\n                        style={{ fontSize: '18px', cursor: 'pointer' }}\r\n                        onClick={() => showDeleteConfirm(record._id)} // Fonction de suppression\r\n                    />\r\n                </div>\r\n            ),\r\n        },\r\n    ];\r\n    return (\r\n        <div>\r\n\r\n\r\n            {/* Conteneur du bouton */}\r\n            <div style={{ marginBottom: \"20px\", textAlign: \"right\" }}>\r\n                <Button\r\n                    type=\"primary\"\r\n                    onClick={() => setOpen(true)}\r\n                    style={{\r\n                        padding: \"10px 20px\",\r\n                        fontSize: \"15px\",\r\n                        height: \"40px\",\r\n                        width: \"160px\",\r\n                        backgroundColor: \"rgb(189, 37, 27)\",\r\n                        borderColor: \"rgb(189, 37, 27)\"\r\n                    }}\r\n                >\r\n                    Add RunSheet\r\n                </Button>\r\n            </div>\r\n\r\n\r\n            <Table\r\n                dataSource={data}\r\n                columns={columns}\r\n                rowKey=\"_id\"\r\n                loading={isLoading}\r\n                pagination={{ pageSize: 5 }}\r\n            />\r\n\r\n            <AddRunSheet open={open} setOpen={setOpen} vehicles={vehicles} livreurs={livreurs} livraisons={livraisonsEnDepot} />\r\n\r\n            <Modal\r\n                open={openView}\r\n                onCancel={() => setOpenView(false)}\r\n                footer={null} // Pas de boutons dans le footer\r\n            >\r\n                {selectedRunSheet && (\r\n                    <div>\r\n                        <p><strong>Serie:</strong> {selectedRunSheet.serie}</p>\r\n                        <p><strong>Livreur:</strong> {selectedRunSheet.name_livreur}</p>\r\n                        <p><strong>Livraisons:</strong> {selectedRunSheet.livraisons.join(\", \")}</p>\r\n\r\n\r\n\r\n                    </div>\r\n\r\n                )}\r\n            </Modal>\r\n            {/* Modal pour RetourD */}\r\n            <Modal\r\n                open={openRetourD}\r\n                onCancel={() => setOpenRetourD(false)}\r\n                footer={[\r\n                    <Button key=\"back\" onClick={() => setOpenRetourD(false)}>\r\n                        Annuler\r\n                    </Button>,\r\n                    <Button key=\"submit\" type=\"primary\" onClick={() => handleUpdateStatus(\"RetourD\")}>\r\n                        Confirmer\r\n                    </Button>\r\n                ]}\r\n            >\r\n                {selectedRunSheet && (\r\n                    <div>\r\n                        <h3>Changer le statut des livraisons pour {selectedRunSheet.code}</h3>\r\n                        <Select\r\n                            mode=\"multiple\" // Permettre la sélection multiple\r\n                            placeholder=\"Sélectionnez les livraisons\"\r\n                            style={{ width: '100%' }}\r\n                            onChange={(values) => setSelectedLivraisons(values)} // Stocker les livraisons sélectionnées\r\n                        >\r\n                            {selectedRunSheet.livraisons.map((livraison, index) => (\r\n                                <Option key={index} value={livraison}>\r\n                                    {livraison}\r\n                                </Option>\r\n                            ))}\r\n                        </Select>\r\n                    </div>\r\n                )}\r\n            </Modal>\r\n            {/* Modal pour Valider */}\r\n            <Modal\r\n                open={openLivré}\r\n                onCancel={() => setOpenLivré(false)}\r\n                footer={[\r\n                    <Button key=\"back\" onClick={() => setOpenLivré(false)}>\r\n                        Annuler\r\n                    </Button>,\r\n                    <Button key=\"submit\" type=\"primary\" onClick={() => handleUpdateStatus(\"Livré\")}>\r\n                        Confirmer\r\n                    </Button>\r\n                ]}\r\n            >\r\n                {selectedRunSheet && (\r\n                    <div>\r\n                        <h3>Changer le statut des livraisons pour {selectedRunSheet.code}</h3>\r\n                        <Select\r\n                            mode=\"multiple\" // Permettre la sélection multiple\r\n                            placeholder=\"Sélectionnez les livraisons\"\r\n                            style={{ width: '100%' }}\r\n                            onChange={(values) => setSelectedLivraisons(values)} // Stocker les livraisons sélectionnées\r\n                        >\r\n                            {selectedRunSheet.livraisons.map((livraison, index) => (\r\n                                <Option key={index} value={livraison}>\r\n                                    {livraison}\r\n                                </Option>\r\n                            ))}\r\n                        </Select>\r\n                    </div>\r\n                )}\r\n            </Modal>\r\n        </div>\r\n    );\r\n\r\n\r\n\r\n};\r\nexport default RunSheet;\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}