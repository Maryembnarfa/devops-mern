{"ast":null,"code":"import { Band } from '@antv/scale';\nimport { deepMix } from '@antv/util';\nimport { column, columnOf } from './utils/helper';\nimport { domainOf } from './utils/order';\nexport function rangeOf(value, scaleOptions, padding) {\n  if (value === null) return [-0.5, 0.5];\n  const domain = domainOf(value, scaleOptions);\n  const scale = new Band({\n    domain,\n    range: [0, 1],\n    padding\n  });\n  const step = scale.getBandWidth();\n  return [-step / 2, step / 2];\n}\nexport function interpolate(t, a, b) {\n  return a * (1 - t) + b * t;\n}\n/**\n * The jitter transform produce dx and dy channels for marks (especially for point)\n * with ordinal x and y dimension, say to make them jitter in their own space.\n */\nexport const Jitter = function () {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    padding = 0,\n    paddingX = padding,\n    paddingY = padding,\n    random = Math.random\n  } = options;\n  return (I, mark) => {\n    const {\n      encode,\n      scale\n    } = mark;\n    const {\n      x: scaleX,\n      y: scaleY\n    } = scale;\n    const [X] = columnOf(encode, 'x');\n    const [Y] = columnOf(encode, 'y');\n    const rangeX = rangeOf(X, scaleX, paddingX);\n    const rangeY = rangeOf(Y, scaleY, paddingY);\n    const DY = I.map(() => interpolate(random(), ...rangeY));\n    const DX = I.map(() => interpolate(random(), ...rangeX));\n    return [I, deepMix({\n      scale: {\n        x: {\n          padding: 0.5\n        },\n        y: {\n          padding: 0.5\n        }\n      }\n    }, mark, {\n      encode: {\n        dy: column(DY),\n        dx: column(DX)\n      }\n    })];\n  };\n};\nJitter.props = {};","map":{"version":3,"names":["Band","deepMix","column","columnOf","domainOf","rangeOf","value","scaleOptions","padding","domain","scale","range","step","getBandWidth","interpolate","t","a","b","Jitter","options","arguments","length","undefined","paddingX","paddingY","random","Math","I","mark","encode","x","scaleX","y","scaleY","X","Y","rangeX","rangeY","DY","map","DX","dy","dx","props"],"sources":["transform/jitter.ts"],"sourcesContent":[null],"mappings":"AAAA,SAASA,IAAI,QAAQ,aAAa;AAClC,SAASC,OAAO,QAAQ,YAAY;AAGpC,SAASC,MAAM,EAAEC,QAAQ,QAAQ,gBAAgB;AACjD,SAASC,QAAQ,QAAQ,eAAe;AAIxC,OAAM,SAAUC,OAAOA,CACrBC,KAAkB,EAClBC,YAAiC,EACjCC,OAAe;EAEf,IAAIF,KAAK,KAAK,IAAI,EAAE,OAAO,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;EACtC,MAAMG,MAAM,GAAGL,QAAQ,CAACE,KAAK,EAAEC,YAAY,CAAC;EAC5C,MAAMG,KAAK,GAAG,IAAIV,IAAI,CAAC;IAAES,MAAM;IAAEE,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAAEH;EAAO,CAAE,CAAC;EAC1D,MAAMI,IAAI,GAAGF,KAAK,CAACG,YAAY,EAAE;EACjC,OAAO,CAAC,CAACD,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAG,CAAC,CAAC;AAC9B;AAEA,OAAM,SAAUE,WAAWA,CAACC,CAAS,EAAEC,CAAS,EAAEC,CAAS;EACzD,OAAOD,CAAC,IAAI,CAAC,GAAGD,CAAC,CAAC,GAAGE,CAAC,GAAGF,CAAC;AAC5B;AAEA;;;;AAIA,OAAO,MAAMG,MAAM,GAAsB,SAAAA,CAAA,EAAiB;EAAA,IAAhBC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EACpD,MAAM;IACJZ,OAAO,GAAG,CAAC;IACXe,QAAQ,GAAGf,OAAO;IAClBgB,QAAQ,GAAGhB,OAAO;IAClBiB,MAAM,GAAGC,IAAI,CAACD;EAAM,CACrB,GAAGN,OAAO;EACX,OAAO,CAACQ,CAAC,EAAEC,IAAI,KAAI;IACjB,MAAM;MAAEC,MAAM;MAAEnB;IAAK,CAAE,GAAGkB,IAAI;IAC9B,MAAM;MAAEE,CAAC,EAAEC,MAAM;MAAEC,CAAC,EAAEC;IAAM,CAAE,GAAGvB,KAAK;IACtC,MAAM,CAACwB,CAAC,CAAC,GAAG/B,QAAQ,CAAC0B,MAAM,EAAE,GAAG,CAAC;IACjC,MAAM,CAACM,CAAC,CAAC,GAAGhC,QAAQ,CAAC0B,MAAM,EAAE,GAAG,CAAC;IACjC,MAAMO,MAAM,GAAG/B,OAAO,CAAC6B,CAAC,EAAEH,MAAM,EAAER,QAAQ,CAAC;IAC3C,MAAMc,MAAM,GAAGhC,OAAO,CAAC8B,CAAC,EAAEF,MAAM,EAAET,QAAQ,CAAC;IAC3C,MAAMc,EAAE,GAAGX,CAAC,CAACY,GAAG,CAAC,MAAMzB,WAAW,CAACW,MAAM,EAAE,EAAE,GAAGY,MAAM,CAAC,CAAC;IACxD,MAAMG,EAAE,GAAGb,CAAC,CAACY,GAAG,CAAC,MAAMzB,WAAW,CAACW,MAAM,EAAE,EAAE,GAAGW,MAAM,CAAC,CAAC;IACxD,OAAO,CACLT,CAAC,EACD1B,OAAO,CACL;MACES,KAAK,EAAE;QACLoB,CAAC,EAAE;UAAEtB,OAAO,EAAE;QAAG,CAAE;QACnBwB,CAAC,EAAE;UAAExB,OAAO,EAAE;QAAG;;KAEpB,EACDoB,IAAI,EACJ;MACEC,MAAM,EAAE;QAAEY,EAAE,EAAEvC,MAAM,CAACoC,EAAE,CAAC;QAAEI,EAAE,EAAExC,MAAM,CAACsC,EAAE;MAAC;KACzC,CACF,CACF;EACH,CAAC;AACH,CAAC;AAEDtB,MAAM,CAACyB,KAAK,GAAG,EAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}