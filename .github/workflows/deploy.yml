name: Deploy to Server

on:
  push:
    branches:
      - main  # DÃ©clenchement du pipeline sur un push dans "main"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest  # ExÃ©cution sur une machine virtuelle Ubuntu

    steps:
      # Ã‰tape 1 : Checkout du code
      - name: ğŸ”„ Checkout du code
        uses: actions/checkout@v3  # TÃ©lÃ©charge le code de ton dÃ©pÃ´t

      # Ã‰tape 2 : Connexion Ã  Docker Hub
      - name: Connexion Ã  Docker Hub
        run: echo "Maryem123123." | docker login -u "maryembn14" --password-stdin

      # Ã‰tape 3 : Build et push des images Docker
      - name: ğŸ“¦ Build et push des images Docker
        run: |
          docker build -t maryembn14/livraison-frontend ./client  # Construit l'image frontend
          docker build -t maryembn14/livraison-backend ./server   # Construit l'image backend
          docker push maryembn14/livraison-frontend  # Pousse l'image frontend sur Docker Hub
          docker push maryembn14/livraison-backend   # Pousse l'image backend sur Docker Hub

      # Ã‰tape 4 : DÃ©ploiement sur le serveur (commentÃ©e pour l'instant)
      # - name: ğŸš€ DÃ©ploiement sur le serveur
      #   uses: appleboy/ssh-action@v0.1.10
      #   with:
      #     host: ${{ secrets.SERVER_HOST }}  # Adresse IP ou domaine du serveur
      #     username: ${{ secrets.SERVER_USER }}  # Nom d'utilisateur SSH
      #     password: ${{ secrets.SERVER_PASSWORD }}  # Mot de passe SSH
      #     script: |
      #       docker pull maryembn14/livraison-frontend  # TÃ©lÃ©charge l'image frontend
      #       docker pull maryembn14/livraison-backend   # TÃ©lÃ©charge l'image backend
      #       docker-compose down  # ArrÃªte les conteneurs existants
      #       docker-compose up -d  # RedÃ©marre les conteneurs avec les nouvelles images
