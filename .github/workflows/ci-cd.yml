name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Le pipeline se déclenche uniquement sur des pushs sur la branche 'main'

jobs:
  # Job pour la partie Frontend
  build-frontend:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout du code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Installer les dépendances
      - name: Install dependencies (Frontend)
        run: |
          cd client
          npm install

      # 3. Exécuter les tests (si vous avez des tests dans votre projet Frontend)
      - name: Run tests (Frontend)
        run: |
          cd client
          npm test

      # 4. Construire l'application Frontend
      - name: Build frontend
        run: |
          cd client
          npm run build

  # Job pour la partie Backend
  build-backend:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout du code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Installer les dépendances
      - name: Install dependencies (Backend)
        run: |
          cd server
          npm install

      # 3. Exécuter les tests (si vous avez des tests dans votre projet Backend)
      - name: Run tests (Backend)
        run: |
          cd server
          npm test

      # 4. Construire l'application Backend
      - name: Build backend
        run: |
          cd server
          npm run build

  # Job pour le déploiement
  deploy:
    runs-on: ubuntu-latest
    needs: [build-frontend, build-backend]  # Ce job s'exécute après les jobs build-frontend et build-backend

    steps:
      # 1. Checkout du code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Connexion à Docker Hub (pour pousser les images)
      - name: Docker login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # 3. Construire les images Docker
      - name: Build Docker images
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend:latest ./client
          docker build -t ${{ secrets.DOCKER_USERNAME }}/backend:latest ./server

      # 4. Pousser les images Docker vers Docker Hub
      - name: Push Docker images
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/backend:latest

      # 5. Déployer les containers sur votre serveur (par exemple avec SSH ou Kubernetes)
      - name: Deploy to Server
        run: |
          ssh -o StrictHostKeyChecking=no user@your-server-ip "docker pull ${{ secrets.DOCKER_USERNAME }}/frontend:latest && docker pull ${{ secrets.DOCKER_USERNAME }}/backend:latest && docker-compose up -d"
